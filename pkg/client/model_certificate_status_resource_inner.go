/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CertificateStatusResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CertificateStatusResourceInner{}

// CertificateStatusResourceInner struct for CertificateStatusResourceInner
type CertificateStatusResourceInner struct {
	ObjectName               *string `json:"object-name,omitempty"`
	Meta                     *string `json:"meta,omitempty"`
	CertificateSignature     *string `json:"certificate-signature,omitempty"`
	CertificateStatus        *string `json:"certificate-status,omitempty"`
<<<<<<< HEAD
	CertificateStatusNumeric *int64  `json:"certificate-status-numeric,omitempty"`
	CertificateText          *string `json:"certificate-text,omitempty"`
	CertificateTime          *string `json:"certificate-time,omitempty"`
	Controller               *string `json:"controller,omitempty"`
	ControllerNumeric        *int64  `json:"controller-numeric,omitempty"`
=======
	CertificateStatusNumeric *int32  `json:"certificate-status-numeric,omitempty"`
	CertificateText          *string `json:"certificate-text,omitempty"`
	CertificateTime          *string `json:"certificate-time,omitempty"`
	Controller               *string `json:"controller,omitempty"`
	ControllerNumeric        *int32  `json:"controller-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
}

// NewCertificateStatusResourceInner instantiates a new CertificateStatusResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateStatusResourceInner() *CertificateStatusResourceInner {
	this := CertificateStatusResourceInner{}
	return &this
}

// NewCertificateStatusResourceInnerWithDefaults instantiates a new CertificateStatusResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateStatusResourceInnerWithDefaults() *CertificateStatusResourceInner {
	this := CertificateStatusResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *CertificateStatusResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateStatusResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *CertificateStatusResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *CertificateStatusResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateStatusResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *CertificateStatusResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetCertificateSignature returns the CertificateSignature field value if set, zero value otherwise.
func (o *CertificateStatusResourceInner) GetCertificateSignature() string {
	if o == nil || IsNil(o.CertificateSignature) {
		var ret string
		return ret
	}
	return *o.CertificateSignature
}

// GetCertificateSignatureOk returns a tuple with the CertificateSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateStatusResourceInner) GetCertificateSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateSignature) {
		return nil, false
	}
	return o.CertificateSignature, true
}

// HasCertificateSignature returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasCertificateSignature() bool {
	if o != nil && !IsNil(o.CertificateSignature) {
		return true
	}

	return false
}

// SetCertificateSignature gets a reference to the given string and assigns it to the CertificateSignature field.
func (o *CertificateStatusResourceInner) SetCertificateSignature(v string) {
	o.CertificateSignature = &v
}

// GetCertificateStatus returns the CertificateStatus field value if set, zero value otherwise.
func (o *CertificateStatusResourceInner) GetCertificateStatus() string {
	if o == nil || IsNil(o.CertificateStatus) {
		var ret string
		return ret
	}
	return *o.CertificateStatus
}

// GetCertificateStatusOk returns a tuple with the CertificateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateStatusResourceInner) GetCertificateStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateStatus) {
		return nil, false
	}
	return o.CertificateStatus, true
}

// HasCertificateStatus returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasCertificateStatus() bool {
	if o != nil && !IsNil(o.CertificateStatus) {
		return true
	}

	return false
}

// SetCertificateStatus gets a reference to the given string and assigns it to the CertificateStatus field.
func (o *CertificateStatusResourceInner) SetCertificateStatus(v string) {
	o.CertificateStatus = &v
}

// GetCertificateStatusNumeric returns the CertificateStatusNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *CertificateStatusResourceInner) GetCertificateStatusNumeric() int64 {
	if o == nil || IsNil(o.CertificateStatusNumeric) {
		var ret int64
=======
func (o *CertificateStatusResourceInner) GetCertificateStatusNumeric() int32 {
	if o == nil || IsNil(o.CertificateStatusNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.CertificateStatusNumeric
}

// GetCertificateStatusNumericOk returns a tuple with the CertificateStatusNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *CertificateStatusResourceInner) GetCertificateStatusNumericOk() (*int64, bool) {
=======
func (o *CertificateStatusResourceInner) GetCertificateStatusNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.CertificateStatusNumeric) {
		return nil, false
	}
	return o.CertificateStatusNumeric, true
}

// HasCertificateStatusNumeric returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasCertificateStatusNumeric() bool {
	if o != nil && !IsNil(o.CertificateStatusNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetCertificateStatusNumeric gets a reference to the given int64 and assigns it to the CertificateStatusNumeric field.
func (o *CertificateStatusResourceInner) SetCertificateStatusNumeric(v int64) {
=======
// SetCertificateStatusNumeric gets a reference to the given int32 and assigns it to the CertificateStatusNumeric field.
func (o *CertificateStatusResourceInner) SetCertificateStatusNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.CertificateStatusNumeric = &v
}

// GetCertificateText returns the CertificateText field value if set, zero value otherwise.
func (o *CertificateStatusResourceInner) GetCertificateText() string {
	if o == nil || IsNil(o.CertificateText) {
		var ret string
		return ret
	}
	return *o.CertificateText
}

// GetCertificateTextOk returns a tuple with the CertificateText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateStatusResourceInner) GetCertificateTextOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateText) {
		return nil, false
	}
	return o.CertificateText, true
}

// HasCertificateText returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasCertificateText() bool {
	if o != nil && !IsNil(o.CertificateText) {
		return true
	}

	return false
}

// SetCertificateText gets a reference to the given string and assigns it to the CertificateText field.
func (o *CertificateStatusResourceInner) SetCertificateText(v string) {
	o.CertificateText = &v
}

// GetCertificateTime returns the CertificateTime field value if set, zero value otherwise.
func (o *CertificateStatusResourceInner) GetCertificateTime() string {
	if o == nil || IsNil(o.CertificateTime) {
		var ret string
		return ret
	}
	return *o.CertificateTime
}

// GetCertificateTimeOk returns a tuple with the CertificateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateStatusResourceInner) GetCertificateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateTime) {
		return nil, false
	}
	return o.CertificateTime, true
}

// HasCertificateTime returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasCertificateTime() bool {
	if o != nil && !IsNil(o.CertificateTime) {
		return true
	}

	return false
}

// SetCertificateTime gets a reference to the given string and assigns it to the CertificateTime field.
func (o *CertificateStatusResourceInner) SetCertificateTime(v string) {
	o.CertificateTime = &v
}

// GetController returns the Controller field value if set, zero value otherwise.
func (o *CertificateStatusResourceInner) GetController() string {
	if o == nil || IsNil(o.Controller) {
		var ret string
		return ret
	}
	return *o.Controller
}

// GetControllerOk returns a tuple with the Controller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateStatusResourceInner) GetControllerOk() (*string, bool) {
	if o == nil || IsNil(o.Controller) {
		return nil, false
	}
	return o.Controller, true
}

// HasController returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasController() bool {
	if o != nil && !IsNil(o.Controller) {
		return true
	}

	return false
}

// SetController gets a reference to the given string and assigns it to the Controller field.
func (o *CertificateStatusResourceInner) SetController(v string) {
	o.Controller = &v
}

// GetControllerNumeric returns the ControllerNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *CertificateStatusResourceInner) GetControllerNumeric() int64 {
	if o == nil || IsNil(o.ControllerNumeric) {
		var ret int64
=======
func (o *CertificateStatusResourceInner) GetControllerNumeric() int32 {
	if o == nil || IsNil(o.ControllerNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.ControllerNumeric
}

// GetControllerNumericOk returns a tuple with the ControllerNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *CertificateStatusResourceInner) GetControllerNumericOk() (*int64, bool) {
=======
func (o *CertificateStatusResourceInner) GetControllerNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.ControllerNumeric) {
		return nil, false
	}
	return o.ControllerNumeric, true
}

// HasControllerNumeric returns a boolean if a field has been set.
func (o *CertificateStatusResourceInner) HasControllerNumeric() bool {
	if o != nil && !IsNil(o.ControllerNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetControllerNumeric gets a reference to the given int64 and assigns it to the ControllerNumeric field.
func (o *CertificateStatusResourceInner) SetControllerNumeric(v int64) {
=======
// SetControllerNumeric gets a reference to the given int32 and assigns it to the ControllerNumeric field.
func (o *CertificateStatusResourceInner) SetControllerNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.ControllerNumeric = &v
}

func (o CertificateStatusResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CertificateStatusResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.CertificateSignature) {
		toSerialize["certificate-signature"] = o.CertificateSignature
	}
	if !IsNil(o.CertificateStatus) {
		toSerialize["certificate-status"] = o.CertificateStatus
	}
	if !IsNil(o.CertificateStatusNumeric) {
		toSerialize["certificate-status-numeric"] = o.CertificateStatusNumeric
	}
	if !IsNil(o.CertificateText) {
		toSerialize["certificate-text"] = o.CertificateText
	}
	if !IsNil(o.CertificateTime) {
		toSerialize["certificate-time"] = o.CertificateTime
	}
	if !IsNil(o.Controller) {
		toSerialize["controller"] = o.Controller
	}
	if !IsNil(o.ControllerNumeric) {
		toSerialize["controller-numeric"] = o.ControllerNumeric
	}
	return toSerialize, nil
}

type NullableCertificateStatusResourceInner struct {
	value *CertificateStatusResourceInner
	isSet bool
}

func (v NullableCertificateStatusResourceInner) Get() *CertificateStatusResourceInner {
	return v.value
}

func (v *NullableCertificateStatusResourceInner) Set(val *CertificateStatusResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateStatusResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateStatusResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateStatusResourceInner(val *CertificateStatusResourceInner) *NullableCertificateStatusResourceInner {
	return &NullableCertificateStatusResourceInner{value: val, isSet: true}
}

func (v NullableCertificateStatusResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateStatusResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
