/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the HostsViewResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostsViewResourceInner{}

// HostsViewResourceInner struct for HostsViewResourceInner
type HostsViewResourceInner struct {
	ObjectName       *string                         `json:"object-name,omitempty"`
	Meta             *string                         `json:"meta,omitempty"`
	DurableId        *string                         `json:"durable-id,omitempty"`
	HostName         *string                         `json:"host-name,omitempty"`
	SerialNumber     *string                         `json:"serial-number,omitempty"`
	HostViewMappings []HostViewMappingsResourceInner `json:"host-view-mappings,omitempty"`
}

// NewHostsViewResourceInner instantiates a new HostsViewResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostsViewResourceInner() *HostsViewResourceInner {
	this := HostsViewResourceInner{}
	return &this
}

// NewHostsViewResourceInnerWithDefaults instantiates a new HostsViewResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostsViewResourceInnerWithDefaults() *HostsViewResourceInner {
	this := HostsViewResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *HostsViewResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostsViewResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *HostsViewResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *HostsViewResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *HostsViewResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostsViewResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *HostsViewResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *HostsViewResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetDurableId returns the DurableId field value if set, zero value otherwise.
func (o *HostsViewResourceInner) GetDurableId() string {
	if o == nil || IsNil(o.DurableId) {
		var ret string
		return ret
	}
	return *o.DurableId
}

// GetDurableIdOk returns a tuple with the DurableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostsViewResourceInner) GetDurableIdOk() (*string, bool) {
	if o == nil || IsNil(o.DurableId) {
		return nil, false
	}
	return o.DurableId, true
}

// HasDurableId returns a boolean if a field has been set.
func (o *HostsViewResourceInner) HasDurableId() bool {
	if o != nil && !IsNil(o.DurableId) {
		return true
	}

	return false
}

// SetDurableId gets a reference to the given string and assigns it to the DurableId field.
func (o *HostsViewResourceInner) SetDurableId(v string) {
	o.DurableId = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *HostsViewResourceInner) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostsViewResourceInner) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *HostsViewResourceInner) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *HostsViewResourceInner) SetHostName(v string) {
	o.HostName = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *HostsViewResourceInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostsViewResourceInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *HostsViewResourceInner) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *HostsViewResourceInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetHostViewMappings returns the HostViewMappings field value if set, zero value otherwise.
func (o *HostsViewResourceInner) GetHostViewMappings() []HostViewMappingsResourceInner {
	if o == nil || IsNil(o.HostViewMappings) {
		var ret []HostViewMappingsResourceInner
		return ret
	}
	return o.HostViewMappings
}

// GetHostViewMappingsOk returns a tuple with the HostViewMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostsViewResourceInner) GetHostViewMappingsOk() ([]HostViewMappingsResourceInner, bool) {
	if o == nil || IsNil(o.HostViewMappings) {
		return nil, false
	}
	return o.HostViewMappings, true
}

// HasHostViewMappings returns a boolean if a field has been set.
func (o *HostsViewResourceInner) HasHostViewMappings() bool {
	if o != nil && !IsNil(o.HostViewMappings) {
		return true
	}

	return false
}

// SetHostViewMappings gets a reference to the given []HostViewMappingsResourceInner and assigns it to the HostViewMappings field.
func (o *HostsViewResourceInner) SetHostViewMappings(v []HostViewMappingsResourceInner) {
	o.HostViewMappings = v
}

func (o HostsViewResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostsViewResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.DurableId) {
		toSerialize["durable-id"] = o.DurableId
	}
	if !IsNil(o.HostName) {
		toSerialize["host-name"] = o.HostName
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial-number"] = o.SerialNumber
	}
	if !IsNil(o.HostViewMappings) {
		toSerialize["host-view-mappings"] = o.HostViewMappings
	}
	return toSerialize, nil
}

type NullableHostsViewResourceInner struct {
	value *HostsViewResourceInner
	isSet bool
}

func (v NullableHostsViewResourceInner) Get() *HostsViewResourceInner {
	return v.value
}

func (v *NullableHostsViewResourceInner) Set(val *HostsViewResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHostsViewResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHostsViewResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostsViewResourceInner(val *HostsViewResourceInner) *NullableHostsViewResourceInner {
	return &NullableHostsViewResourceInner{value: val, isSet: true}
}

func (v NullableHostsViewResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostsViewResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
