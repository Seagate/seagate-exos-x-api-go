/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ControllerCacheParametersResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControllerCacheParametersResourceInner{}

// ControllerCacheParametersResourceInner struct for ControllerCacheParametersResourceInner
type ControllerCacheParametersResourceInner struct {
	ObjectName              *string `json:"object-name,omitempty"`
	Meta                    *string `json:"meta,omitempty"`
	CacheFlush              *string `json:"cache-flush,omitempty"`
	CacheFlushNumeric       *int32  `json:"cache-flush-numeric,omitempty"`
	ControllerId            *string `json:"controller-id,omitempty"`
	ControllerIdNumeric     *int32  `json:"controller-id-numeric,omitempty"`
	DurableId               *string `json:"durable-id,omitempty"`
	MemoryCardHealth        *string `json:"memory-card-health,omitempty"`
	MemoryCardHealthNumeric *int32  `json:"memory-card-health-numeric,omitempty"`
	MemoryCardStatus        *string `json:"memory-card-status,omitempty"`
	MemoryCardStatusNumeric *int32  `json:"memory-card-status-numeric,omitempty"`
	Name                    *string `json:"name,omitempty"`
	// Indicates whether disk write-back cache is enabled
	WriteBackStatus *string `json:"write-back-status,omitempty"`
	// Indicates whether disk write-back cache is enabled( In numeric form )
	WriteBackStatusNumeric *int32 `json:"write-back-status-numeric,omitempty"`
}

// NewControllerCacheParametersResourceInner instantiates a new ControllerCacheParametersResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllerCacheParametersResourceInner() *ControllerCacheParametersResourceInner {
	this := ControllerCacheParametersResourceInner{}
	return &this
}

// NewControllerCacheParametersResourceInnerWithDefaults instantiates a new ControllerCacheParametersResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllerCacheParametersResourceInnerWithDefaults() *ControllerCacheParametersResourceInner {
	this := ControllerCacheParametersResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *ControllerCacheParametersResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *ControllerCacheParametersResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetCacheFlush returns the CacheFlush field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetCacheFlush() string {
	if o == nil || IsNil(o.CacheFlush) {
		var ret string
		return ret
	}
	return *o.CacheFlush
}

// GetCacheFlushOk returns a tuple with the CacheFlush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetCacheFlushOk() (*string, bool) {
	if o == nil || IsNil(o.CacheFlush) {
		return nil, false
	}
	return o.CacheFlush, true
}

// HasCacheFlush returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasCacheFlush() bool {
	if o != nil && !IsNil(o.CacheFlush) {
		return true
	}

	return false
}

// SetCacheFlush gets a reference to the given string and assigns it to the CacheFlush field.
func (o *ControllerCacheParametersResourceInner) SetCacheFlush(v string) {
	o.CacheFlush = &v
}

// GetCacheFlushNumeric returns the CacheFlushNumeric field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetCacheFlushNumeric() int32 {
	if o == nil || IsNil(o.CacheFlushNumeric) {
		var ret int32
		return ret
	}
	return *o.CacheFlushNumeric
}

// GetCacheFlushNumericOk returns a tuple with the CacheFlushNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetCacheFlushNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.CacheFlushNumeric) {
		return nil, false
	}
	return o.CacheFlushNumeric, true
}

// HasCacheFlushNumeric returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasCacheFlushNumeric() bool {
	if o != nil && !IsNil(o.CacheFlushNumeric) {
		return true
	}

	return false
}

// SetCacheFlushNumeric gets a reference to the given int32 and assigns it to the CacheFlushNumeric field.
func (o *ControllerCacheParametersResourceInner) SetCacheFlushNumeric(v int32) {
	o.CacheFlushNumeric = &v
}

// GetControllerId returns the ControllerId field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetControllerId() string {
	if o == nil || IsNil(o.ControllerId) {
		var ret string
		return ret
	}
	return *o.ControllerId
}

// GetControllerIdOk returns a tuple with the ControllerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetControllerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ControllerId) {
		return nil, false
	}
	return o.ControllerId, true
}

// HasControllerId returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasControllerId() bool {
	if o != nil && !IsNil(o.ControllerId) {
		return true
	}

	return false
}

// SetControllerId gets a reference to the given string and assigns it to the ControllerId field.
func (o *ControllerCacheParametersResourceInner) SetControllerId(v string) {
	o.ControllerId = &v
}

// GetControllerIdNumeric returns the ControllerIdNumeric field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetControllerIdNumeric() int32 {
	if o == nil || IsNil(o.ControllerIdNumeric) {
		var ret int32
		return ret
	}
	return *o.ControllerIdNumeric
}

// GetControllerIdNumericOk returns a tuple with the ControllerIdNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetControllerIdNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.ControllerIdNumeric) {
		return nil, false
	}
	return o.ControllerIdNumeric, true
}

// HasControllerIdNumeric returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasControllerIdNumeric() bool {
	if o != nil && !IsNil(o.ControllerIdNumeric) {
		return true
	}

	return false
}

// SetControllerIdNumeric gets a reference to the given int32 and assigns it to the ControllerIdNumeric field.
func (o *ControllerCacheParametersResourceInner) SetControllerIdNumeric(v int32) {
	o.ControllerIdNumeric = &v
}

// GetDurableId returns the DurableId field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetDurableId() string {
	if o == nil || IsNil(o.DurableId) {
		var ret string
		return ret
	}
	return *o.DurableId
}

// GetDurableIdOk returns a tuple with the DurableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetDurableIdOk() (*string, bool) {
	if o == nil || IsNil(o.DurableId) {
		return nil, false
	}
	return o.DurableId, true
}

// HasDurableId returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasDurableId() bool {
	if o != nil && !IsNil(o.DurableId) {
		return true
	}

	return false
}

// SetDurableId gets a reference to the given string and assigns it to the DurableId field.
func (o *ControllerCacheParametersResourceInner) SetDurableId(v string) {
	o.DurableId = &v
}

// GetMemoryCardHealth returns the MemoryCardHealth field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetMemoryCardHealth() string {
	if o == nil || IsNil(o.MemoryCardHealth) {
		var ret string
		return ret
	}
	return *o.MemoryCardHealth
}

// GetMemoryCardHealthOk returns a tuple with the MemoryCardHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetMemoryCardHealthOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryCardHealth) {
		return nil, false
	}
	return o.MemoryCardHealth, true
}

// HasMemoryCardHealth returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasMemoryCardHealth() bool {
	if o != nil && !IsNil(o.MemoryCardHealth) {
		return true
	}

	return false
}

// SetMemoryCardHealth gets a reference to the given string and assigns it to the MemoryCardHealth field.
func (o *ControllerCacheParametersResourceInner) SetMemoryCardHealth(v string) {
	o.MemoryCardHealth = &v
}

// GetMemoryCardHealthNumeric returns the MemoryCardHealthNumeric field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetMemoryCardHealthNumeric() int32 {
	if o == nil || IsNil(o.MemoryCardHealthNumeric) {
		var ret int32
		return ret
	}
	return *o.MemoryCardHealthNumeric
}

// GetMemoryCardHealthNumericOk returns a tuple with the MemoryCardHealthNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetMemoryCardHealthNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryCardHealthNumeric) {
		return nil, false
	}
	return o.MemoryCardHealthNumeric, true
}

// HasMemoryCardHealthNumeric returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasMemoryCardHealthNumeric() bool {
	if o != nil && !IsNil(o.MemoryCardHealthNumeric) {
		return true
	}

	return false
}

// SetMemoryCardHealthNumeric gets a reference to the given int32 and assigns it to the MemoryCardHealthNumeric field.
func (o *ControllerCacheParametersResourceInner) SetMemoryCardHealthNumeric(v int32) {
	o.MemoryCardHealthNumeric = &v
}

// GetMemoryCardStatus returns the MemoryCardStatus field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetMemoryCardStatus() string {
	if o == nil || IsNil(o.MemoryCardStatus) {
		var ret string
		return ret
	}
	return *o.MemoryCardStatus
}

// GetMemoryCardStatusOk returns a tuple with the MemoryCardStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetMemoryCardStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryCardStatus) {
		return nil, false
	}
	return o.MemoryCardStatus, true
}

// HasMemoryCardStatus returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasMemoryCardStatus() bool {
	if o != nil && !IsNil(o.MemoryCardStatus) {
		return true
	}

	return false
}

// SetMemoryCardStatus gets a reference to the given string and assigns it to the MemoryCardStatus field.
func (o *ControllerCacheParametersResourceInner) SetMemoryCardStatus(v string) {
	o.MemoryCardStatus = &v
}

// GetMemoryCardStatusNumeric returns the MemoryCardStatusNumeric field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetMemoryCardStatusNumeric() int32 {
	if o == nil || IsNil(o.MemoryCardStatusNumeric) {
		var ret int32
		return ret
	}
	return *o.MemoryCardStatusNumeric
}

// GetMemoryCardStatusNumericOk returns a tuple with the MemoryCardStatusNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetMemoryCardStatusNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryCardStatusNumeric) {
		return nil, false
	}
	return o.MemoryCardStatusNumeric, true
}

// HasMemoryCardStatusNumeric returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasMemoryCardStatusNumeric() bool {
	if o != nil && !IsNil(o.MemoryCardStatusNumeric) {
		return true
	}

	return false
}

// SetMemoryCardStatusNumeric gets a reference to the given int32 and assigns it to the MemoryCardStatusNumeric field.
func (o *ControllerCacheParametersResourceInner) SetMemoryCardStatusNumeric(v int32) {
	o.MemoryCardStatusNumeric = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ControllerCacheParametersResourceInner) SetName(v string) {
	o.Name = &v
}

// GetWriteBackStatus returns the WriteBackStatus field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetWriteBackStatus() string {
	if o == nil || IsNil(o.WriteBackStatus) {
		var ret string
		return ret
	}
	return *o.WriteBackStatus
}

// GetWriteBackStatusOk returns a tuple with the WriteBackStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetWriteBackStatusOk() (*string, bool) {
	if o == nil || IsNil(o.WriteBackStatus) {
		return nil, false
	}
	return o.WriteBackStatus, true
}

// HasWriteBackStatus returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasWriteBackStatus() bool {
	if o != nil && !IsNil(o.WriteBackStatus) {
		return true
	}

	return false
}

// SetWriteBackStatus gets a reference to the given string and assigns it to the WriteBackStatus field.
func (o *ControllerCacheParametersResourceInner) SetWriteBackStatus(v string) {
	o.WriteBackStatus = &v
}

// GetWriteBackStatusNumeric returns the WriteBackStatusNumeric field value if set, zero value otherwise.
func (o *ControllerCacheParametersResourceInner) GetWriteBackStatusNumeric() int32 {
	if o == nil || IsNil(o.WriteBackStatusNumeric) {
		var ret int32
		return ret
	}
	return *o.WriteBackStatusNumeric
}

// GetWriteBackStatusNumericOk returns a tuple with the WriteBackStatusNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllerCacheParametersResourceInner) GetWriteBackStatusNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteBackStatusNumeric) {
		return nil, false
	}
	return o.WriteBackStatusNumeric, true
}

// HasWriteBackStatusNumeric returns a boolean if a field has been set.
func (o *ControllerCacheParametersResourceInner) HasWriteBackStatusNumeric() bool {
	if o != nil && !IsNil(o.WriteBackStatusNumeric) {
		return true
	}

	return false
}

// SetWriteBackStatusNumeric gets a reference to the given int32 and assigns it to the WriteBackStatusNumeric field.
func (o *ControllerCacheParametersResourceInner) SetWriteBackStatusNumeric(v int32) {
	o.WriteBackStatusNumeric = &v
}

func (o ControllerCacheParametersResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControllerCacheParametersResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.CacheFlush) {
		toSerialize["cache-flush"] = o.CacheFlush
	}
	if !IsNil(o.CacheFlushNumeric) {
		toSerialize["cache-flush-numeric"] = o.CacheFlushNumeric
	}
	if !IsNil(o.ControllerId) {
		toSerialize["controller-id"] = o.ControllerId
	}
	if !IsNil(o.ControllerIdNumeric) {
		toSerialize["controller-id-numeric"] = o.ControllerIdNumeric
	}
	if !IsNil(o.DurableId) {
		toSerialize["durable-id"] = o.DurableId
	}
	if !IsNil(o.MemoryCardHealth) {
		toSerialize["memory-card-health"] = o.MemoryCardHealth
	}
	if !IsNil(o.MemoryCardHealthNumeric) {
		toSerialize["memory-card-health-numeric"] = o.MemoryCardHealthNumeric
	}
	if !IsNil(o.MemoryCardStatus) {
		toSerialize["memory-card-status"] = o.MemoryCardStatus
	}
	if !IsNil(o.MemoryCardStatusNumeric) {
		toSerialize["memory-card-status-numeric"] = o.MemoryCardStatusNumeric
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.WriteBackStatus) {
		toSerialize["write-back-status"] = o.WriteBackStatus
	}
	if !IsNil(o.WriteBackStatusNumeric) {
		toSerialize["write-back-status-numeric"] = o.WriteBackStatusNumeric
	}
	return toSerialize, nil
}

type NullableControllerCacheParametersResourceInner struct {
	value *ControllerCacheParametersResourceInner
	isSet bool
}

func (v NullableControllerCacheParametersResourceInner) Get() *ControllerCacheParametersResourceInner {
	return v.value
}

func (v *NullableControllerCacheParametersResourceInner) Set(val *ControllerCacheParametersResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableControllerCacheParametersResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableControllerCacheParametersResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllerCacheParametersResourceInner(val *ControllerCacheParametersResourceInner) *NullableControllerCacheParametersResourceInner {
	return &NullableControllerCacheParametersResourceInner{value: val, isSet: true}
}

func (v NullableControllerCacheParametersResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllerCacheParametersResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
