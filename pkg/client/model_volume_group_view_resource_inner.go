/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the VolumeGroupViewResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupViewResourceInner{}

// VolumeGroupViewResourceInner struct for VolumeGroupViewResourceInner
type VolumeGroupViewResourceInner struct {
	ObjectName *string `json:"object-name,omitempty"`
	Meta       *string `json:"meta,omitempty"`
	DurableId  *string `json:"durable-id,omitempty"`
	// Name of a Management Group
	GroupName    *string `json:"group-name,omitempty"`
	SerialNumber *string `json:"serial-number,omitempty"`
	// Volume Group URL
	VolumeGroupUrl *string `json:"volume-group-url,omitempty"`
}

// NewVolumeGroupViewResourceInner instantiates a new VolumeGroupViewResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupViewResourceInner() *VolumeGroupViewResourceInner {
	this := VolumeGroupViewResourceInner{}
	return &this
}

// NewVolumeGroupViewResourceInnerWithDefaults instantiates a new VolumeGroupViewResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupViewResourceInnerWithDefaults() *VolumeGroupViewResourceInner {
	this := VolumeGroupViewResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *VolumeGroupViewResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupViewResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *VolumeGroupViewResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *VolumeGroupViewResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *VolumeGroupViewResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupViewResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *VolumeGroupViewResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *VolumeGroupViewResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetDurableId returns the DurableId field value if set, zero value otherwise.
func (o *VolumeGroupViewResourceInner) GetDurableId() string {
	if o == nil || IsNil(o.DurableId) {
		var ret string
		return ret
	}
	return *o.DurableId
}

// GetDurableIdOk returns a tuple with the DurableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupViewResourceInner) GetDurableIdOk() (*string, bool) {
	if o == nil || IsNil(o.DurableId) {
		return nil, false
	}
	return o.DurableId, true
}

// HasDurableId returns a boolean if a field has been set.
func (o *VolumeGroupViewResourceInner) HasDurableId() bool {
	if o != nil && !IsNil(o.DurableId) {
		return true
	}

	return false
}

// SetDurableId gets a reference to the given string and assigns it to the DurableId field.
func (o *VolumeGroupViewResourceInner) SetDurableId(v string) {
	o.DurableId = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *VolumeGroupViewResourceInner) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupViewResourceInner) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *VolumeGroupViewResourceInner) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *VolumeGroupViewResourceInner) SetGroupName(v string) {
	o.GroupName = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *VolumeGroupViewResourceInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupViewResourceInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *VolumeGroupViewResourceInner) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *VolumeGroupViewResourceInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetVolumeGroupUrl returns the VolumeGroupUrl field value if set, zero value otherwise.
func (o *VolumeGroupViewResourceInner) GetVolumeGroupUrl() string {
	if o == nil || IsNil(o.VolumeGroupUrl) {
		var ret string
		return ret
	}
	return *o.VolumeGroupUrl
}

// GetVolumeGroupUrlOk returns a tuple with the VolumeGroupUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupViewResourceInner) GetVolumeGroupUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeGroupUrl) {
		return nil, false
	}
	return o.VolumeGroupUrl, true
}

// HasVolumeGroupUrl returns a boolean if a field has been set.
func (o *VolumeGroupViewResourceInner) HasVolumeGroupUrl() bool {
	if o != nil && !IsNil(o.VolumeGroupUrl) {
		return true
	}

	return false
}

// SetVolumeGroupUrl gets a reference to the given string and assigns it to the VolumeGroupUrl field.
func (o *VolumeGroupViewResourceInner) SetVolumeGroupUrl(v string) {
	o.VolumeGroupUrl = &v
}

func (o VolumeGroupViewResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupViewResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.DurableId) {
		toSerialize["durable-id"] = o.DurableId
	}
	if !IsNil(o.GroupName) {
		toSerialize["group-name"] = o.GroupName
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial-number"] = o.SerialNumber
	}
	if !IsNil(o.VolumeGroupUrl) {
		toSerialize["volume-group-url"] = o.VolumeGroupUrl
	}
	return toSerialize, nil
}

type NullableVolumeGroupViewResourceInner struct {
	value *VolumeGroupViewResourceInner
	isSet bool
}

func (v NullableVolumeGroupViewResourceInner) Get() *VolumeGroupViewResourceInner {
	return v.value
}

func (v *NullableVolumeGroupViewResourceInner) Set(val *VolumeGroupViewResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupViewResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupViewResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupViewResourceInner(val *VolumeGroupViewResourceInner) *NullableVolumeGroupViewResourceInner {
	return &NullableVolumeGroupViewResourceInner{value: val, isSet: true}
}

func (v NullableVolumeGroupViewResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupViewResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
