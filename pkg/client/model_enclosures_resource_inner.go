/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the EnclosuresResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnclosuresResourceInner{}

// EnclosuresResourceInner struct for EnclosuresResourceInner
type EnclosuresResourceInner struct {
	ObjectName *string `json:"object-name,omitempty"`
	Meta       *string `json:"meta,omitempty"`
	// IOM Board model
	BoardModel *string `json:"board-model,omitempty"`
	// IOM Board model( In numeric form )
<<<<<<< HEAD
	BoardModelNumeric       *int64  `json:"board-model-numeric,omitempty"`
	Columns                 *int64  `json:"columns,omitempty"`
	DashLevel               *string `json:"dash-level,omitempty"`
	Description             *string `json:"description,omitempty"`
	DriveOrientation        *string `json:"drive-orientation,omitempty"`
	DriveOrientationNumeric *int64  `json:"drive-orientation-numeric,omitempty"`
=======
	BoardModelNumeric       *int32  `json:"board-model-numeric,omitempty"`
	Columns                 *int32  `json:"columns,omitempty"`
	DashLevel               *string `json:"dash-level,omitempty"`
	Description             *string `json:"description,omitempty"`
	DriveOrientation        *string `json:"drive-orientation,omitempty"`
	DriveOrientationNumeric *int32  `json:"drive-orientation-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	DurableId               *string `json:"durable-id,omitempty"`
	EmpA                    *string `json:"emp-a,omitempty"`
	EmpABusid               *string `json:"emp-a-busid,omitempty"`
	EmpAChIdRev             *string `json:"emp-a-ch-id-rev,omitempty"`
	// Enclosure Management Processor
	EmpARev      *string `json:"emp-a-rev,omitempty"`
	EmpATargetid *string `json:"emp-a-targetid,omitempty"`
	EmpB         *string `json:"emp-b,omitempty"`
	EmpBBusid    *string `json:"emp-b-busid,omitempty"`
	EmpBChIdRev  *string `json:"emp-b-ch-id-rev,omitempty"`
	// Enclosure Management Processor
	EmpBRev                     *string `json:"emp-b-rev,omitempty"`
	EmpBTargetid                *string `json:"emp-b-targetid,omitempty"`
	EnclosureArrangement        *string `json:"enclosure-arrangement,omitempty"`
<<<<<<< HEAD
	EnclosureArrangementNumeric *int64  `json:"enclosure-arrangement-numeric,omitempty"`
	EnclosureId                 *int64  `json:"enclosure-id,omitempty"`
=======
	EnclosureArrangementNumeric *int32  `json:"enclosure-arrangement-numeric,omitempty"`
	EnclosureId                 *int32  `json:"enclosure-id,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	EnclosurePower              *string `json:"enclosure-power,omitempty"`
	// Enclosure World Wide Name
	EnclosureWwn *string `json:"enclosure-wwn,omitempty"`
	// Extended status (bits)
	ExtendedStatus       *string `json:"extended-status,omitempty"`
	FruLocation          *string `json:"fru-location,omitempty"`
	FruShortname         *string `json:"fru-shortname,omitempty"`
	FruTlapn             *string `json:"fru-tlapn,omitempty"`
	GemVersionA          *string `json:"gem-version-a,omitempty"`
	GemVersionB          *string `json:"gem-version-b,omitempty"`
	Health               *string `json:"health,omitempty"`
<<<<<<< HEAD
	HealthNumeric        *int64  `json:"health-numeric,omitempty"`
	HealthReason         *string `json:"health-reason,omitempty"`
	HealthRecommendation *string `json:"health-recommendation,omitempty"`
	IomType              *string `json:"iom-type,omitempty"`
	IomTypeNumeric       *int64  `json:"iom-type-numeric,omitempty"`
=======
	HealthNumeric        *int32  `json:"health-numeric,omitempty"`
	HealthReason         *string `json:"health-reason,omitempty"`
	HealthRecommendation *string `json:"health-recommendation,omitempty"`
	IomType              *string `json:"iom-type,omitempty"`
	IomTypeNumeric       *int32  `json:"iom-type-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	Location             *string `json:"location,omitempty"`
	// Indicates whether the locator LED is on
	LocatorLed *string `json:"locator-led,omitempty"`
	// Indicates whether the locator LED is on( In numeric form )
<<<<<<< HEAD
	LocatorLedNumeric *int64  `json:"locator-led-numeric,omitempty"`
	MfgDate           *string `json:"mfg-date,omitempty"`
	MfgDateNumeric    *int64  `json:"mfg-date-numeric,omitempty"`
	MfgLocation       *string `json:"mfg-location,omitempty"`
	// Revision level of midplane
	MidplaneRev *int64 `json:"midplane-rev,omitempty"`
=======
	LocatorLedNumeric *int32  `json:"locator-led-numeric,omitempty"`
	MfgDate           *string `json:"mfg-date,omitempty"`
	MfgDateNumeric    *int32  `json:"mfg-date-numeric,omitempty"`
	MfgLocation       *string `json:"mfg-location,omitempty"`
	// Revision level of midplane
	MidplaneRev *int32 `json:"midplane-rev,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	// Serial number of the enclosure
	MidplaneSerialNumber *string `json:"midplane-serial-number,omitempty"`
	// Type of midplane
	MidplaneType *string `json:"midplane-type,omitempty"`
	// Type of midplane( In numeric form )
<<<<<<< HEAD
	MidplaneTypeNumeric *int64  `json:"midplane-type-numeric,omitempty"`
	Model               *string `json:"model,omitempty"`
	Name                *string `json:"name,omitempty"`
	// Number of fans in the enclosure
	NumberOfCoolingsElements *int64 `json:"number-of-coolings-elements,omitempty"`
	// Number of disks in the enclosure
	NumberOfDisks *int64 `json:"number-of-disks,omitempty"`
	// Number of power supplies in the enclosure
	NumberOfPowerSupplies *int64  `json:"number-of-power-supplies,omitempty"`
=======
	MidplaneTypeNumeric *int32  `json:"midplane-type-numeric,omitempty"`
	Model               *string `json:"model,omitempty"`
	Name                *string `json:"name,omitempty"`
	// Number of fans in the enclosure
	NumberOfCoolingsElements *int32 `json:"number-of-coolings-elements,omitempty"`
	// Number of disks in the enclosure
	NumberOfDisks *int32 `json:"number-of-disks,omitempty"`
	// Number of power supplies in the enclosure
	NumberOfPowerSupplies *int32  `json:"number-of-power-supplies,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	PartNumber            *string `json:"part-number,omitempty"`
	// Enclosure is capable of using PCIe version 2
	Pcie2Capable *string `json:"pcie2-capable,omitempty"`
	// Enclosure is capable of using PCIe version 2( In numeric form )
<<<<<<< HEAD
	Pcie2CapableNumeric *int64 `json:"pcie2-capable-numeric,omitempty"`
	// HW Platform Type
	PlatformType *string `json:"platform-type,omitempty"`
	// HW Platform Type( In numeric form )
	PlatformTypeNumeric *int64 `json:"platform-type-numeric,omitempty"`
	RackNumber          *int64 `json:"rack-number,omitempty"`
	RackPosition        *int64 `json:"rack-position,omitempty"`
	// Current revision for this FRU
	Revision *string `json:"revision,omitempty"`
	Rows     *int64  `json:"rows,omitempty"`
	// The number of disk slots in this enclosure
	Slots         *int64  `json:"slots,omitempty"`
	Status        *string `json:"status,omitempty"`
	StatusNumeric *int64  `json:"status-numeric,omitempty"`
	// Type of component in this enclosure
	Type *string `json:"type,omitempty"`
	// Type of component in this enclosure( In numeric form )
	TypeNumeric *int64 `json:"type-numeric,omitempty"`
=======
	Pcie2CapableNumeric *int32 `json:"pcie2-capable-numeric,omitempty"`
	// HW Platform Type
	PlatformType *string `json:"platform-type,omitempty"`
	// HW Platform Type( In numeric form )
	PlatformTypeNumeric *int32 `json:"platform-type-numeric,omitempty"`
	RackNumber          *int32 `json:"rack-number,omitempty"`
	RackPosition        *int32 `json:"rack-position,omitempty"`
	// Current revision for this FRU
	Revision *string `json:"revision,omitempty"`
	Rows     *int32  `json:"rows,omitempty"`
	// The number of disk slots in this enclosure
	Slots         *int32  `json:"slots,omitempty"`
	Status        *string `json:"status,omitempty"`
	StatusNumeric *int32  `json:"status-numeric,omitempty"`
	// Type of component in this enclosure
	Type *string `json:"type,omitempty"`
	// Type of component in this enclosure( In numeric form )
	TypeNumeric *int32 `json:"type-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	// The resource URL
	Url           *string                      `json:"url,omitempty"`
	Vendor        *string                      `json:"vendor,omitempty"`
	Controllers   []ControllersResourceInner   `json:"controllers,omitempty"`
	PowerSupplies []PowerSuppliesResourceInner `json:"power-supplies,omitempty"`
}

// NewEnclosuresResourceInner instantiates a new EnclosuresResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnclosuresResourceInner() *EnclosuresResourceInner {
	this := EnclosuresResourceInner{}
	return &this
}

// NewEnclosuresResourceInnerWithDefaults instantiates a new EnclosuresResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnclosuresResourceInnerWithDefaults() *EnclosuresResourceInner {
	this := EnclosuresResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *EnclosuresResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *EnclosuresResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetBoardModel returns the BoardModel field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetBoardModel() string {
	if o == nil || IsNil(o.BoardModel) {
		var ret string
		return ret
	}
	return *o.BoardModel
}

// GetBoardModelOk returns a tuple with the BoardModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetBoardModelOk() (*string, bool) {
	if o == nil || IsNil(o.BoardModel) {
		return nil, false
	}
	return o.BoardModel, true
}

// HasBoardModel returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasBoardModel() bool {
	if o != nil && !IsNil(o.BoardModel) {
		return true
	}

	return false
}

// SetBoardModel gets a reference to the given string and assigns it to the BoardModel field.
func (o *EnclosuresResourceInner) SetBoardModel(v string) {
	o.BoardModel = &v
}

// GetBoardModelNumeric returns the BoardModelNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetBoardModelNumeric() int64 {
	if o == nil || IsNil(o.BoardModelNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetBoardModelNumeric() int32 {
	if o == nil || IsNil(o.BoardModelNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.BoardModelNumeric
}

// GetBoardModelNumericOk returns a tuple with the BoardModelNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetBoardModelNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetBoardModelNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.BoardModelNumeric) {
		return nil, false
	}
	return o.BoardModelNumeric, true
}

// HasBoardModelNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasBoardModelNumeric() bool {
	if o != nil && !IsNil(o.BoardModelNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetBoardModelNumeric gets a reference to the given int64 and assigns it to the BoardModelNumeric field.
func (o *EnclosuresResourceInner) SetBoardModelNumeric(v int64) {
=======
// SetBoardModelNumeric gets a reference to the given int32 and assigns it to the BoardModelNumeric field.
func (o *EnclosuresResourceInner) SetBoardModelNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.BoardModelNumeric = &v
}

// GetColumns returns the Columns field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetColumns() int64 {
	if o == nil || IsNil(o.Columns) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetColumns() int32 {
	if o == nil || IsNil(o.Columns) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetColumnsOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetColumnsOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.Columns) {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasColumns() bool {
	if o != nil && !IsNil(o.Columns) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetColumns gets a reference to the given int64 and assigns it to the Columns field.
func (o *EnclosuresResourceInner) SetColumns(v int64) {
=======
// SetColumns gets a reference to the given int32 and assigns it to the Columns field.
func (o *EnclosuresResourceInner) SetColumns(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.Columns = &v
}

// GetDashLevel returns the DashLevel field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetDashLevel() string {
	if o == nil || IsNil(o.DashLevel) {
		var ret string
		return ret
	}
	return *o.DashLevel
}

// GetDashLevelOk returns a tuple with the DashLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetDashLevelOk() (*string, bool) {
	if o == nil || IsNil(o.DashLevel) {
		return nil, false
	}
	return o.DashLevel, true
}

// HasDashLevel returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasDashLevel() bool {
	if o != nil && !IsNil(o.DashLevel) {
		return true
	}

	return false
}

// SetDashLevel gets a reference to the given string and assigns it to the DashLevel field.
func (o *EnclosuresResourceInner) SetDashLevel(v string) {
	o.DashLevel = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EnclosuresResourceInner) SetDescription(v string) {
	o.Description = &v
}

// GetDriveOrientation returns the DriveOrientation field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetDriveOrientation() string {
	if o == nil || IsNil(o.DriveOrientation) {
		var ret string
		return ret
	}
	return *o.DriveOrientation
}

// GetDriveOrientationOk returns a tuple with the DriveOrientation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetDriveOrientationOk() (*string, bool) {
	if o == nil || IsNil(o.DriveOrientation) {
		return nil, false
	}
	return o.DriveOrientation, true
}

// HasDriveOrientation returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasDriveOrientation() bool {
	if o != nil && !IsNil(o.DriveOrientation) {
		return true
	}

	return false
}

// SetDriveOrientation gets a reference to the given string and assigns it to the DriveOrientation field.
func (o *EnclosuresResourceInner) SetDriveOrientation(v string) {
	o.DriveOrientation = &v
}

// GetDriveOrientationNumeric returns the DriveOrientationNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetDriveOrientationNumeric() int64 {
	if o == nil || IsNil(o.DriveOrientationNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetDriveOrientationNumeric() int32 {
	if o == nil || IsNil(o.DriveOrientationNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.DriveOrientationNumeric
}

// GetDriveOrientationNumericOk returns a tuple with the DriveOrientationNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetDriveOrientationNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetDriveOrientationNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.DriveOrientationNumeric) {
		return nil, false
	}
	return o.DriveOrientationNumeric, true
}

// HasDriveOrientationNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasDriveOrientationNumeric() bool {
	if o != nil && !IsNil(o.DriveOrientationNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDriveOrientationNumeric gets a reference to the given int64 and assigns it to the DriveOrientationNumeric field.
func (o *EnclosuresResourceInner) SetDriveOrientationNumeric(v int64) {
=======
// SetDriveOrientationNumeric gets a reference to the given int32 and assigns it to the DriveOrientationNumeric field.
func (o *EnclosuresResourceInner) SetDriveOrientationNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.DriveOrientationNumeric = &v
}

// GetDurableId returns the DurableId field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetDurableId() string {
	if o == nil || IsNil(o.DurableId) {
		var ret string
		return ret
	}
	return *o.DurableId
}

// GetDurableIdOk returns a tuple with the DurableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetDurableIdOk() (*string, bool) {
	if o == nil || IsNil(o.DurableId) {
		return nil, false
	}
	return o.DurableId, true
}

// HasDurableId returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasDurableId() bool {
	if o != nil && !IsNil(o.DurableId) {
		return true
	}

	return false
}

// SetDurableId gets a reference to the given string and assigns it to the DurableId field.
func (o *EnclosuresResourceInner) SetDurableId(v string) {
	o.DurableId = &v
}

// GetEmpA returns the EmpA field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpA() string {
	if o == nil || IsNil(o.EmpA) {
		var ret string
		return ret
	}
	return *o.EmpA
}

// GetEmpAOk returns a tuple with the EmpA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpAOk() (*string, bool) {
	if o == nil || IsNil(o.EmpA) {
		return nil, false
	}
	return o.EmpA, true
}

// HasEmpA returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpA() bool {
	if o != nil && !IsNil(o.EmpA) {
		return true
	}

	return false
}

// SetEmpA gets a reference to the given string and assigns it to the EmpA field.
func (o *EnclosuresResourceInner) SetEmpA(v string) {
	o.EmpA = &v
}

// GetEmpABusid returns the EmpABusid field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpABusid() string {
	if o == nil || IsNil(o.EmpABusid) {
		var ret string
		return ret
	}
	return *o.EmpABusid
}

// GetEmpABusidOk returns a tuple with the EmpABusid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpABusidOk() (*string, bool) {
	if o == nil || IsNil(o.EmpABusid) {
		return nil, false
	}
	return o.EmpABusid, true
}

// HasEmpABusid returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpABusid() bool {
	if o != nil && !IsNil(o.EmpABusid) {
		return true
	}

	return false
}

// SetEmpABusid gets a reference to the given string and assigns it to the EmpABusid field.
func (o *EnclosuresResourceInner) SetEmpABusid(v string) {
	o.EmpABusid = &v
}

// GetEmpAChIdRev returns the EmpAChIdRev field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpAChIdRev() string {
	if o == nil || IsNil(o.EmpAChIdRev) {
		var ret string
		return ret
	}
	return *o.EmpAChIdRev
}

// GetEmpAChIdRevOk returns a tuple with the EmpAChIdRev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpAChIdRevOk() (*string, bool) {
	if o == nil || IsNil(o.EmpAChIdRev) {
		return nil, false
	}
	return o.EmpAChIdRev, true
}

// HasEmpAChIdRev returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpAChIdRev() bool {
	if o != nil && !IsNil(o.EmpAChIdRev) {
		return true
	}

	return false
}

// SetEmpAChIdRev gets a reference to the given string and assigns it to the EmpAChIdRev field.
func (o *EnclosuresResourceInner) SetEmpAChIdRev(v string) {
	o.EmpAChIdRev = &v
}

// GetEmpARev returns the EmpARev field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpARev() string {
	if o == nil || IsNil(o.EmpARev) {
		var ret string
		return ret
	}
	return *o.EmpARev
}

// GetEmpARevOk returns a tuple with the EmpARev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpARevOk() (*string, bool) {
	if o == nil || IsNil(o.EmpARev) {
		return nil, false
	}
	return o.EmpARev, true
}

// HasEmpARev returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpARev() bool {
	if o != nil && !IsNil(o.EmpARev) {
		return true
	}

	return false
}

// SetEmpARev gets a reference to the given string and assigns it to the EmpARev field.
func (o *EnclosuresResourceInner) SetEmpARev(v string) {
	o.EmpARev = &v
}

// GetEmpATargetid returns the EmpATargetid field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpATargetid() string {
	if o == nil || IsNil(o.EmpATargetid) {
		var ret string
		return ret
	}
	return *o.EmpATargetid
}

// GetEmpATargetidOk returns a tuple with the EmpATargetid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpATargetidOk() (*string, bool) {
	if o == nil || IsNil(o.EmpATargetid) {
		return nil, false
	}
	return o.EmpATargetid, true
}

// HasEmpATargetid returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpATargetid() bool {
	if o != nil && !IsNil(o.EmpATargetid) {
		return true
	}

	return false
}

// SetEmpATargetid gets a reference to the given string and assigns it to the EmpATargetid field.
func (o *EnclosuresResourceInner) SetEmpATargetid(v string) {
	o.EmpATargetid = &v
}

// GetEmpB returns the EmpB field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpB() string {
	if o == nil || IsNil(o.EmpB) {
		var ret string
		return ret
	}
	return *o.EmpB
}

// GetEmpBOk returns a tuple with the EmpB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpBOk() (*string, bool) {
	if o == nil || IsNil(o.EmpB) {
		return nil, false
	}
	return o.EmpB, true
}

// HasEmpB returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpB() bool {
	if o != nil && !IsNil(o.EmpB) {
		return true
	}

	return false
}

// SetEmpB gets a reference to the given string and assigns it to the EmpB field.
func (o *EnclosuresResourceInner) SetEmpB(v string) {
	o.EmpB = &v
}

// GetEmpBBusid returns the EmpBBusid field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpBBusid() string {
	if o == nil || IsNil(o.EmpBBusid) {
		var ret string
		return ret
	}
	return *o.EmpBBusid
}

// GetEmpBBusidOk returns a tuple with the EmpBBusid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpBBusidOk() (*string, bool) {
	if o == nil || IsNil(o.EmpBBusid) {
		return nil, false
	}
	return o.EmpBBusid, true
}

// HasEmpBBusid returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpBBusid() bool {
	if o != nil && !IsNil(o.EmpBBusid) {
		return true
	}

	return false
}

// SetEmpBBusid gets a reference to the given string and assigns it to the EmpBBusid field.
func (o *EnclosuresResourceInner) SetEmpBBusid(v string) {
	o.EmpBBusid = &v
}

// GetEmpBChIdRev returns the EmpBChIdRev field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpBChIdRev() string {
	if o == nil || IsNil(o.EmpBChIdRev) {
		var ret string
		return ret
	}
	return *o.EmpBChIdRev
}

// GetEmpBChIdRevOk returns a tuple with the EmpBChIdRev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpBChIdRevOk() (*string, bool) {
	if o == nil || IsNil(o.EmpBChIdRev) {
		return nil, false
	}
	return o.EmpBChIdRev, true
}

// HasEmpBChIdRev returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpBChIdRev() bool {
	if o != nil && !IsNil(o.EmpBChIdRev) {
		return true
	}

	return false
}

// SetEmpBChIdRev gets a reference to the given string and assigns it to the EmpBChIdRev field.
func (o *EnclosuresResourceInner) SetEmpBChIdRev(v string) {
	o.EmpBChIdRev = &v
}

// GetEmpBRev returns the EmpBRev field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpBRev() string {
	if o == nil || IsNil(o.EmpBRev) {
		var ret string
		return ret
	}
	return *o.EmpBRev
}

// GetEmpBRevOk returns a tuple with the EmpBRev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpBRevOk() (*string, bool) {
	if o == nil || IsNil(o.EmpBRev) {
		return nil, false
	}
	return o.EmpBRev, true
}

// HasEmpBRev returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpBRev() bool {
	if o != nil && !IsNil(o.EmpBRev) {
		return true
	}

	return false
}

// SetEmpBRev gets a reference to the given string and assigns it to the EmpBRev field.
func (o *EnclosuresResourceInner) SetEmpBRev(v string) {
	o.EmpBRev = &v
}

// GetEmpBTargetid returns the EmpBTargetid field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEmpBTargetid() string {
	if o == nil || IsNil(o.EmpBTargetid) {
		var ret string
		return ret
	}
	return *o.EmpBTargetid
}

// GetEmpBTargetidOk returns a tuple with the EmpBTargetid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEmpBTargetidOk() (*string, bool) {
	if o == nil || IsNil(o.EmpBTargetid) {
		return nil, false
	}
	return o.EmpBTargetid, true
}

// HasEmpBTargetid returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEmpBTargetid() bool {
	if o != nil && !IsNil(o.EmpBTargetid) {
		return true
	}

	return false
}

// SetEmpBTargetid gets a reference to the given string and assigns it to the EmpBTargetid field.
func (o *EnclosuresResourceInner) SetEmpBTargetid(v string) {
	o.EmpBTargetid = &v
}

// GetEnclosureArrangement returns the EnclosureArrangement field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEnclosureArrangement() string {
	if o == nil || IsNil(o.EnclosureArrangement) {
		var ret string
		return ret
	}
	return *o.EnclosureArrangement
}

// GetEnclosureArrangementOk returns a tuple with the EnclosureArrangement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEnclosureArrangementOk() (*string, bool) {
	if o == nil || IsNil(o.EnclosureArrangement) {
		return nil, false
	}
	return o.EnclosureArrangement, true
}

// HasEnclosureArrangement returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEnclosureArrangement() bool {
	if o != nil && !IsNil(o.EnclosureArrangement) {
		return true
	}

	return false
}

// SetEnclosureArrangement gets a reference to the given string and assigns it to the EnclosureArrangement field.
func (o *EnclosuresResourceInner) SetEnclosureArrangement(v string) {
	o.EnclosureArrangement = &v
}

// GetEnclosureArrangementNumeric returns the EnclosureArrangementNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetEnclosureArrangementNumeric() int64 {
	if o == nil || IsNil(o.EnclosureArrangementNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetEnclosureArrangementNumeric() int32 {
	if o == nil || IsNil(o.EnclosureArrangementNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.EnclosureArrangementNumeric
}

// GetEnclosureArrangementNumericOk returns a tuple with the EnclosureArrangementNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetEnclosureArrangementNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetEnclosureArrangementNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.EnclosureArrangementNumeric) {
		return nil, false
	}
	return o.EnclosureArrangementNumeric, true
}

// HasEnclosureArrangementNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEnclosureArrangementNumeric() bool {
	if o != nil && !IsNil(o.EnclosureArrangementNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetEnclosureArrangementNumeric gets a reference to the given int64 and assigns it to the EnclosureArrangementNumeric field.
func (o *EnclosuresResourceInner) SetEnclosureArrangementNumeric(v int64) {
=======
// SetEnclosureArrangementNumeric gets a reference to the given int32 and assigns it to the EnclosureArrangementNumeric field.
func (o *EnclosuresResourceInner) SetEnclosureArrangementNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.EnclosureArrangementNumeric = &v
}

// GetEnclosureId returns the EnclosureId field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetEnclosureId() int64 {
	if o == nil || IsNil(o.EnclosureId) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetEnclosureId() int32 {
	if o == nil || IsNil(o.EnclosureId) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.EnclosureId
}

// GetEnclosureIdOk returns a tuple with the EnclosureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetEnclosureIdOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetEnclosureIdOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.EnclosureId) {
		return nil, false
	}
	return o.EnclosureId, true
}

// HasEnclosureId returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEnclosureId() bool {
	if o != nil && !IsNil(o.EnclosureId) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetEnclosureId gets a reference to the given int64 and assigns it to the EnclosureId field.
func (o *EnclosuresResourceInner) SetEnclosureId(v int64) {
=======
// SetEnclosureId gets a reference to the given int32 and assigns it to the EnclosureId field.
func (o *EnclosuresResourceInner) SetEnclosureId(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.EnclosureId = &v
}

// GetEnclosurePower returns the EnclosurePower field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEnclosurePower() string {
	if o == nil || IsNil(o.EnclosurePower) {
		var ret string
		return ret
	}
	return *o.EnclosurePower
}

// GetEnclosurePowerOk returns a tuple with the EnclosurePower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEnclosurePowerOk() (*string, bool) {
	if o == nil || IsNil(o.EnclosurePower) {
		return nil, false
	}
	return o.EnclosurePower, true
}

// HasEnclosurePower returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEnclosurePower() bool {
	if o != nil && !IsNil(o.EnclosurePower) {
		return true
	}

	return false
}

// SetEnclosurePower gets a reference to the given string and assigns it to the EnclosurePower field.
func (o *EnclosuresResourceInner) SetEnclosurePower(v string) {
	o.EnclosurePower = &v
}

// GetEnclosureWwn returns the EnclosureWwn field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetEnclosureWwn() string {
	if o == nil || IsNil(o.EnclosureWwn) {
		var ret string
		return ret
	}
	return *o.EnclosureWwn
}

// GetEnclosureWwnOk returns a tuple with the EnclosureWwn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetEnclosureWwnOk() (*string, bool) {
	if o == nil || IsNil(o.EnclosureWwn) {
		return nil, false
	}
	return o.EnclosureWwn, true
}

// HasEnclosureWwn returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasEnclosureWwn() bool {
	if o != nil && !IsNil(o.EnclosureWwn) {
		return true
	}

	return false
}

// SetEnclosureWwn gets a reference to the given string and assigns it to the EnclosureWwn field.
func (o *EnclosuresResourceInner) SetEnclosureWwn(v string) {
	o.EnclosureWwn = &v
}

// GetExtendedStatus returns the ExtendedStatus field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetExtendedStatus() string {
	if o == nil || IsNil(o.ExtendedStatus) {
		var ret string
		return ret
	}
	return *o.ExtendedStatus
}

// GetExtendedStatusOk returns a tuple with the ExtendedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetExtendedStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedStatus) {
		return nil, false
	}
	return o.ExtendedStatus, true
}

// HasExtendedStatus returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasExtendedStatus() bool {
	if o != nil && !IsNil(o.ExtendedStatus) {
		return true
	}

	return false
}

// SetExtendedStatus gets a reference to the given string and assigns it to the ExtendedStatus field.
func (o *EnclosuresResourceInner) SetExtendedStatus(v string) {
	o.ExtendedStatus = &v
}

// GetFruLocation returns the FruLocation field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetFruLocation() string {
	if o == nil || IsNil(o.FruLocation) {
		var ret string
		return ret
	}
	return *o.FruLocation
}

// GetFruLocationOk returns a tuple with the FruLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetFruLocationOk() (*string, bool) {
	if o == nil || IsNil(o.FruLocation) {
		return nil, false
	}
	return o.FruLocation, true
}

// HasFruLocation returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasFruLocation() bool {
	if o != nil && !IsNil(o.FruLocation) {
		return true
	}

	return false
}

// SetFruLocation gets a reference to the given string and assigns it to the FruLocation field.
func (o *EnclosuresResourceInner) SetFruLocation(v string) {
	o.FruLocation = &v
}

// GetFruShortname returns the FruShortname field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetFruShortname() string {
	if o == nil || IsNil(o.FruShortname) {
		var ret string
		return ret
	}
	return *o.FruShortname
}

// GetFruShortnameOk returns a tuple with the FruShortname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetFruShortnameOk() (*string, bool) {
	if o == nil || IsNil(o.FruShortname) {
		return nil, false
	}
	return o.FruShortname, true
}

// HasFruShortname returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasFruShortname() bool {
	if o != nil && !IsNil(o.FruShortname) {
		return true
	}

	return false
}

// SetFruShortname gets a reference to the given string and assigns it to the FruShortname field.
func (o *EnclosuresResourceInner) SetFruShortname(v string) {
	o.FruShortname = &v
}

// GetFruTlapn returns the FruTlapn field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetFruTlapn() string {
	if o == nil || IsNil(o.FruTlapn) {
		var ret string
		return ret
	}
	return *o.FruTlapn
}

// GetFruTlapnOk returns a tuple with the FruTlapn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetFruTlapnOk() (*string, bool) {
	if o == nil || IsNil(o.FruTlapn) {
		return nil, false
	}
	return o.FruTlapn, true
}

// HasFruTlapn returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasFruTlapn() bool {
	if o != nil && !IsNil(o.FruTlapn) {
		return true
	}

	return false
}

// SetFruTlapn gets a reference to the given string and assigns it to the FruTlapn field.
func (o *EnclosuresResourceInner) SetFruTlapn(v string) {
	o.FruTlapn = &v
}

// GetGemVersionA returns the GemVersionA field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetGemVersionA() string {
	if o == nil || IsNil(o.GemVersionA) {
		var ret string
		return ret
	}
	return *o.GemVersionA
}

// GetGemVersionAOk returns a tuple with the GemVersionA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetGemVersionAOk() (*string, bool) {
	if o == nil || IsNil(o.GemVersionA) {
		return nil, false
	}
	return o.GemVersionA, true
}

// HasGemVersionA returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasGemVersionA() bool {
	if o != nil && !IsNil(o.GemVersionA) {
		return true
	}

	return false
}

// SetGemVersionA gets a reference to the given string and assigns it to the GemVersionA field.
func (o *EnclosuresResourceInner) SetGemVersionA(v string) {
	o.GemVersionA = &v
}

// GetGemVersionB returns the GemVersionB field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetGemVersionB() string {
	if o == nil || IsNil(o.GemVersionB) {
		var ret string
		return ret
	}
	return *o.GemVersionB
}

// GetGemVersionBOk returns a tuple with the GemVersionB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetGemVersionBOk() (*string, bool) {
	if o == nil || IsNil(o.GemVersionB) {
		return nil, false
	}
	return o.GemVersionB, true
}

// HasGemVersionB returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasGemVersionB() bool {
	if o != nil && !IsNil(o.GemVersionB) {
		return true
	}

	return false
}

// SetGemVersionB gets a reference to the given string and assigns it to the GemVersionB field.
func (o *EnclosuresResourceInner) SetGemVersionB(v string) {
	o.GemVersionB = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetHealth() string {
	if o == nil || IsNil(o.Health) {
		var ret string
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetHealthOk() (*string, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given string and assigns it to the Health field.
func (o *EnclosuresResourceInner) SetHealth(v string) {
	o.Health = &v
}

// GetHealthNumeric returns the HealthNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetHealthNumeric() int64 {
	if o == nil || IsNil(o.HealthNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetHealthNumeric() int32 {
	if o == nil || IsNil(o.HealthNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.HealthNumeric
}

// GetHealthNumericOk returns a tuple with the HealthNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetHealthNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetHealthNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.HealthNumeric) {
		return nil, false
	}
	return o.HealthNumeric, true
}

// HasHealthNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasHealthNumeric() bool {
	if o != nil && !IsNil(o.HealthNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetHealthNumeric gets a reference to the given int64 and assigns it to the HealthNumeric field.
func (o *EnclosuresResourceInner) SetHealthNumeric(v int64) {
=======
// SetHealthNumeric gets a reference to the given int32 and assigns it to the HealthNumeric field.
func (o *EnclosuresResourceInner) SetHealthNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.HealthNumeric = &v
}

// GetHealthReason returns the HealthReason field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetHealthReason() string {
	if o == nil || IsNil(o.HealthReason) {
		var ret string
		return ret
	}
	return *o.HealthReason
}

// GetHealthReasonOk returns a tuple with the HealthReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetHealthReasonOk() (*string, bool) {
	if o == nil || IsNil(o.HealthReason) {
		return nil, false
	}
	return o.HealthReason, true
}

// HasHealthReason returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasHealthReason() bool {
	if o != nil && !IsNil(o.HealthReason) {
		return true
	}

	return false
}

// SetHealthReason gets a reference to the given string and assigns it to the HealthReason field.
func (o *EnclosuresResourceInner) SetHealthReason(v string) {
	o.HealthReason = &v
}

// GetHealthRecommendation returns the HealthRecommendation field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetHealthRecommendation() string {
	if o == nil || IsNil(o.HealthRecommendation) {
		var ret string
		return ret
	}
	return *o.HealthRecommendation
}

// GetHealthRecommendationOk returns a tuple with the HealthRecommendation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetHealthRecommendationOk() (*string, bool) {
	if o == nil || IsNil(o.HealthRecommendation) {
		return nil, false
	}
	return o.HealthRecommendation, true
}

// HasHealthRecommendation returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasHealthRecommendation() bool {
	if o != nil && !IsNil(o.HealthRecommendation) {
		return true
	}

	return false
}

// SetHealthRecommendation gets a reference to the given string and assigns it to the HealthRecommendation field.
func (o *EnclosuresResourceInner) SetHealthRecommendation(v string) {
	o.HealthRecommendation = &v
}

// GetIomType returns the IomType field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetIomType() string {
	if o == nil || IsNil(o.IomType) {
		var ret string
		return ret
	}
	return *o.IomType
}

// GetIomTypeOk returns a tuple with the IomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetIomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IomType) {
		return nil, false
	}
	return o.IomType, true
}

// HasIomType returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasIomType() bool {
	if o != nil && !IsNil(o.IomType) {
		return true
	}

	return false
}

// SetIomType gets a reference to the given string and assigns it to the IomType field.
func (o *EnclosuresResourceInner) SetIomType(v string) {
	o.IomType = &v
}

// GetIomTypeNumeric returns the IomTypeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetIomTypeNumeric() int64 {
	if o == nil || IsNil(o.IomTypeNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetIomTypeNumeric() int32 {
	if o == nil || IsNil(o.IomTypeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.IomTypeNumeric
}

// GetIomTypeNumericOk returns a tuple with the IomTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetIomTypeNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetIomTypeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.IomTypeNumeric) {
		return nil, false
	}
	return o.IomTypeNumeric, true
}

// HasIomTypeNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasIomTypeNumeric() bool {
	if o != nil && !IsNil(o.IomTypeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetIomTypeNumeric gets a reference to the given int64 and assigns it to the IomTypeNumeric field.
func (o *EnclosuresResourceInner) SetIomTypeNumeric(v int64) {
=======
// SetIomTypeNumeric gets a reference to the given int32 and assigns it to the IomTypeNumeric field.
func (o *EnclosuresResourceInner) SetIomTypeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.IomTypeNumeric = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *EnclosuresResourceInner) SetLocation(v string) {
	o.Location = &v
}

// GetLocatorLed returns the LocatorLed field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetLocatorLed() string {
	if o == nil || IsNil(o.LocatorLed) {
		var ret string
		return ret
	}
	return *o.LocatorLed
}

// GetLocatorLedOk returns a tuple with the LocatorLed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetLocatorLedOk() (*string, bool) {
	if o == nil || IsNil(o.LocatorLed) {
		return nil, false
	}
	return o.LocatorLed, true
}

// HasLocatorLed returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasLocatorLed() bool {
	if o != nil && !IsNil(o.LocatorLed) {
		return true
	}

	return false
}

// SetLocatorLed gets a reference to the given string and assigns it to the LocatorLed field.
func (o *EnclosuresResourceInner) SetLocatorLed(v string) {
	o.LocatorLed = &v
}

// GetLocatorLedNumeric returns the LocatorLedNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetLocatorLedNumeric() int64 {
	if o == nil || IsNil(o.LocatorLedNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetLocatorLedNumeric() int32 {
	if o == nil || IsNil(o.LocatorLedNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.LocatorLedNumeric
}

// GetLocatorLedNumericOk returns a tuple with the LocatorLedNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetLocatorLedNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetLocatorLedNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.LocatorLedNumeric) {
		return nil, false
	}
	return o.LocatorLedNumeric, true
}

// HasLocatorLedNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasLocatorLedNumeric() bool {
	if o != nil && !IsNil(o.LocatorLedNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetLocatorLedNumeric gets a reference to the given int64 and assigns it to the LocatorLedNumeric field.
func (o *EnclosuresResourceInner) SetLocatorLedNumeric(v int64) {
=======
// SetLocatorLedNumeric gets a reference to the given int32 and assigns it to the LocatorLedNumeric field.
func (o *EnclosuresResourceInner) SetLocatorLedNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.LocatorLedNumeric = &v
}

// GetMfgDate returns the MfgDate field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetMfgDate() string {
	if o == nil || IsNil(o.MfgDate) {
		var ret string
		return ret
	}
	return *o.MfgDate
}

// GetMfgDateOk returns a tuple with the MfgDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetMfgDateOk() (*string, bool) {
	if o == nil || IsNil(o.MfgDate) {
		return nil, false
	}
	return o.MfgDate, true
}

// HasMfgDate returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasMfgDate() bool {
	if o != nil && !IsNil(o.MfgDate) {
		return true
	}

	return false
}

// SetMfgDate gets a reference to the given string and assigns it to the MfgDate field.
func (o *EnclosuresResourceInner) SetMfgDate(v string) {
	o.MfgDate = &v
}

// GetMfgDateNumeric returns the MfgDateNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetMfgDateNumeric() int64 {
	if o == nil || IsNil(o.MfgDateNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetMfgDateNumeric() int32 {
	if o == nil || IsNil(o.MfgDateNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.MfgDateNumeric
}

// GetMfgDateNumericOk returns a tuple with the MfgDateNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetMfgDateNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetMfgDateNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.MfgDateNumeric) {
		return nil, false
	}
	return o.MfgDateNumeric, true
}

// HasMfgDateNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasMfgDateNumeric() bool {
	if o != nil && !IsNil(o.MfgDateNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetMfgDateNumeric gets a reference to the given int64 and assigns it to the MfgDateNumeric field.
func (o *EnclosuresResourceInner) SetMfgDateNumeric(v int64) {
=======
// SetMfgDateNumeric gets a reference to the given int32 and assigns it to the MfgDateNumeric field.
func (o *EnclosuresResourceInner) SetMfgDateNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.MfgDateNumeric = &v
}

// GetMfgLocation returns the MfgLocation field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetMfgLocation() string {
	if o == nil || IsNil(o.MfgLocation) {
		var ret string
		return ret
	}
	return *o.MfgLocation
}

// GetMfgLocationOk returns a tuple with the MfgLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetMfgLocationOk() (*string, bool) {
	if o == nil || IsNil(o.MfgLocation) {
		return nil, false
	}
	return o.MfgLocation, true
}

// HasMfgLocation returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasMfgLocation() bool {
	if o != nil && !IsNil(o.MfgLocation) {
		return true
	}

	return false
}

// SetMfgLocation gets a reference to the given string and assigns it to the MfgLocation field.
func (o *EnclosuresResourceInner) SetMfgLocation(v string) {
	o.MfgLocation = &v
}

// GetMidplaneRev returns the MidplaneRev field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetMidplaneRev() int64 {
	if o == nil || IsNil(o.MidplaneRev) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetMidplaneRev() int32 {
	if o == nil || IsNil(o.MidplaneRev) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.MidplaneRev
}

// GetMidplaneRevOk returns a tuple with the MidplaneRev field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetMidplaneRevOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetMidplaneRevOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.MidplaneRev) {
		return nil, false
	}
	return o.MidplaneRev, true
}

// HasMidplaneRev returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasMidplaneRev() bool {
	if o != nil && !IsNil(o.MidplaneRev) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetMidplaneRev gets a reference to the given int64 and assigns it to the MidplaneRev field.
func (o *EnclosuresResourceInner) SetMidplaneRev(v int64) {
=======
// SetMidplaneRev gets a reference to the given int32 and assigns it to the MidplaneRev field.
func (o *EnclosuresResourceInner) SetMidplaneRev(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.MidplaneRev = &v
}

// GetMidplaneSerialNumber returns the MidplaneSerialNumber field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetMidplaneSerialNumber() string {
	if o == nil || IsNil(o.MidplaneSerialNumber) {
		var ret string
		return ret
	}
	return *o.MidplaneSerialNumber
}

// GetMidplaneSerialNumberOk returns a tuple with the MidplaneSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetMidplaneSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.MidplaneSerialNumber) {
		return nil, false
	}
	return o.MidplaneSerialNumber, true
}

// HasMidplaneSerialNumber returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasMidplaneSerialNumber() bool {
	if o != nil && !IsNil(o.MidplaneSerialNumber) {
		return true
	}

	return false
}

// SetMidplaneSerialNumber gets a reference to the given string and assigns it to the MidplaneSerialNumber field.
func (o *EnclosuresResourceInner) SetMidplaneSerialNumber(v string) {
	o.MidplaneSerialNumber = &v
}

// GetMidplaneType returns the MidplaneType field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetMidplaneType() string {
	if o == nil || IsNil(o.MidplaneType) {
		var ret string
		return ret
	}
	return *o.MidplaneType
}

// GetMidplaneTypeOk returns a tuple with the MidplaneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetMidplaneTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MidplaneType) {
		return nil, false
	}
	return o.MidplaneType, true
}

// HasMidplaneType returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasMidplaneType() bool {
	if o != nil && !IsNil(o.MidplaneType) {
		return true
	}

	return false
}

// SetMidplaneType gets a reference to the given string and assigns it to the MidplaneType field.
func (o *EnclosuresResourceInner) SetMidplaneType(v string) {
	o.MidplaneType = &v
}

// GetMidplaneTypeNumeric returns the MidplaneTypeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetMidplaneTypeNumeric() int64 {
	if o == nil || IsNil(o.MidplaneTypeNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetMidplaneTypeNumeric() int32 {
	if o == nil || IsNil(o.MidplaneTypeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.MidplaneTypeNumeric
}

// GetMidplaneTypeNumericOk returns a tuple with the MidplaneTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetMidplaneTypeNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetMidplaneTypeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.MidplaneTypeNumeric) {
		return nil, false
	}
	return o.MidplaneTypeNumeric, true
}

// HasMidplaneTypeNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasMidplaneTypeNumeric() bool {
	if o != nil && !IsNil(o.MidplaneTypeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetMidplaneTypeNumeric gets a reference to the given int64 and assigns it to the MidplaneTypeNumeric field.
func (o *EnclosuresResourceInner) SetMidplaneTypeNumeric(v int64) {
=======
// SetMidplaneTypeNumeric gets a reference to the given int32 and assigns it to the MidplaneTypeNumeric field.
func (o *EnclosuresResourceInner) SetMidplaneTypeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.MidplaneTypeNumeric = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *EnclosuresResourceInner) SetModel(v string) {
	o.Model = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnclosuresResourceInner) SetName(v string) {
	o.Name = &v
}

// GetNumberOfCoolingsElements returns the NumberOfCoolingsElements field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetNumberOfCoolingsElements() int64 {
	if o == nil || IsNil(o.NumberOfCoolingsElements) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetNumberOfCoolingsElements() int32 {
	if o == nil || IsNil(o.NumberOfCoolingsElements) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.NumberOfCoolingsElements
}

// GetNumberOfCoolingsElementsOk returns a tuple with the NumberOfCoolingsElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetNumberOfCoolingsElementsOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetNumberOfCoolingsElementsOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.NumberOfCoolingsElements) {
		return nil, false
	}
	return o.NumberOfCoolingsElements, true
}

// HasNumberOfCoolingsElements returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasNumberOfCoolingsElements() bool {
	if o != nil && !IsNil(o.NumberOfCoolingsElements) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetNumberOfCoolingsElements gets a reference to the given int64 and assigns it to the NumberOfCoolingsElements field.
func (o *EnclosuresResourceInner) SetNumberOfCoolingsElements(v int64) {
=======
// SetNumberOfCoolingsElements gets a reference to the given int32 and assigns it to the NumberOfCoolingsElements field.
func (o *EnclosuresResourceInner) SetNumberOfCoolingsElements(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.NumberOfCoolingsElements = &v
}

// GetNumberOfDisks returns the NumberOfDisks field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetNumberOfDisks() int64 {
	if o == nil || IsNil(o.NumberOfDisks) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetNumberOfDisks() int32 {
	if o == nil || IsNil(o.NumberOfDisks) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.NumberOfDisks
}

// GetNumberOfDisksOk returns a tuple with the NumberOfDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetNumberOfDisksOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetNumberOfDisksOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.NumberOfDisks) {
		return nil, false
	}
	return o.NumberOfDisks, true
}

// HasNumberOfDisks returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasNumberOfDisks() bool {
	if o != nil && !IsNil(o.NumberOfDisks) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetNumberOfDisks gets a reference to the given int64 and assigns it to the NumberOfDisks field.
func (o *EnclosuresResourceInner) SetNumberOfDisks(v int64) {
=======
// SetNumberOfDisks gets a reference to the given int32 and assigns it to the NumberOfDisks field.
func (o *EnclosuresResourceInner) SetNumberOfDisks(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.NumberOfDisks = &v
}

// GetNumberOfPowerSupplies returns the NumberOfPowerSupplies field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetNumberOfPowerSupplies() int64 {
	if o == nil || IsNil(o.NumberOfPowerSupplies) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetNumberOfPowerSupplies() int32 {
	if o == nil || IsNil(o.NumberOfPowerSupplies) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.NumberOfPowerSupplies
}

// GetNumberOfPowerSuppliesOk returns a tuple with the NumberOfPowerSupplies field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetNumberOfPowerSuppliesOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetNumberOfPowerSuppliesOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.NumberOfPowerSupplies) {
		return nil, false
	}
	return o.NumberOfPowerSupplies, true
}

// HasNumberOfPowerSupplies returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasNumberOfPowerSupplies() bool {
	if o != nil && !IsNil(o.NumberOfPowerSupplies) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetNumberOfPowerSupplies gets a reference to the given int64 and assigns it to the NumberOfPowerSupplies field.
func (o *EnclosuresResourceInner) SetNumberOfPowerSupplies(v int64) {
=======
// SetNumberOfPowerSupplies gets a reference to the given int32 and assigns it to the NumberOfPowerSupplies field.
func (o *EnclosuresResourceInner) SetNumberOfPowerSupplies(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.NumberOfPowerSupplies = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetPartNumber() string {
	if o == nil || IsNil(o.PartNumber) {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *EnclosuresResourceInner) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetPcie2Capable returns the Pcie2Capable field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetPcie2Capable() string {
	if o == nil || IsNil(o.Pcie2Capable) {
		var ret string
		return ret
	}
	return *o.Pcie2Capable
}

// GetPcie2CapableOk returns a tuple with the Pcie2Capable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetPcie2CapableOk() (*string, bool) {
	if o == nil || IsNil(o.Pcie2Capable) {
		return nil, false
	}
	return o.Pcie2Capable, true
}

// HasPcie2Capable returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasPcie2Capable() bool {
	if o != nil && !IsNil(o.Pcie2Capable) {
		return true
	}

	return false
}

// SetPcie2Capable gets a reference to the given string and assigns it to the Pcie2Capable field.
func (o *EnclosuresResourceInner) SetPcie2Capable(v string) {
	o.Pcie2Capable = &v
}

// GetPcie2CapableNumeric returns the Pcie2CapableNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetPcie2CapableNumeric() int64 {
	if o == nil || IsNil(o.Pcie2CapableNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetPcie2CapableNumeric() int32 {
	if o == nil || IsNil(o.Pcie2CapableNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.Pcie2CapableNumeric
}

// GetPcie2CapableNumericOk returns a tuple with the Pcie2CapableNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetPcie2CapableNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetPcie2CapableNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.Pcie2CapableNumeric) {
		return nil, false
	}
	return o.Pcie2CapableNumeric, true
}

// HasPcie2CapableNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasPcie2CapableNumeric() bool {
	if o != nil && !IsNil(o.Pcie2CapableNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPcie2CapableNumeric gets a reference to the given int64 and assigns it to the Pcie2CapableNumeric field.
func (o *EnclosuresResourceInner) SetPcie2CapableNumeric(v int64) {
=======
// SetPcie2CapableNumeric gets a reference to the given int32 and assigns it to the Pcie2CapableNumeric field.
func (o *EnclosuresResourceInner) SetPcie2CapableNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.Pcie2CapableNumeric = &v
}

// GetPlatformType returns the PlatformType field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetPlatformType() string {
	if o == nil || IsNil(o.PlatformType) {
		var ret string
		return ret
	}
	return *o.PlatformType
}

// GetPlatformTypeOk returns a tuple with the PlatformType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetPlatformTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PlatformType) {
		return nil, false
	}
	return o.PlatformType, true
}

// HasPlatformType returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasPlatformType() bool {
	if o != nil && !IsNil(o.PlatformType) {
		return true
	}

	return false
}

// SetPlatformType gets a reference to the given string and assigns it to the PlatformType field.
func (o *EnclosuresResourceInner) SetPlatformType(v string) {
	o.PlatformType = &v
}

// GetPlatformTypeNumeric returns the PlatformTypeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetPlatformTypeNumeric() int64 {
	if o == nil || IsNil(o.PlatformTypeNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetPlatformTypeNumeric() int32 {
	if o == nil || IsNil(o.PlatformTypeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.PlatformTypeNumeric
}

// GetPlatformTypeNumericOk returns a tuple with the PlatformTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetPlatformTypeNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetPlatformTypeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.PlatformTypeNumeric) {
		return nil, false
	}
	return o.PlatformTypeNumeric, true
}

// HasPlatformTypeNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasPlatformTypeNumeric() bool {
	if o != nil && !IsNil(o.PlatformTypeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPlatformTypeNumeric gets a reference to the given int64 and assigns it to the PlatformTypeNumeric field.
func (o *EnclosuresResourceInner) SetPlatformTypeNumeric(v int64) {
=======
// SetPlatformTypeNumeric gets a reference to the given int32 and assigns it to the PlatformTypeNumeric field.
func (o *EnclosuresResourceInner) SetPlatformTypeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.PlatformTypeNumeric = &v
}

// GetRackNumber returns the RackNumber field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetRackNumber() int64 {
	if o == nil || IsNil(o.RackNumber) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetRackNumber() int32 {
	if o == nil || IsNil(o.RackNumber) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.RackNumber
}

// GetRackNumberOk returns a tuple with the RackNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetRackNumberOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetRackNumberOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.RackNumber) {
		return nil, false
	}
	return o.RackNumber, true
}

// HasRackNumber returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasRackNumber() bool {
	if o != nil && !IsNil(o.RackNumber) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRackNumber gets a reference to the given int64 and assigns it to the RackNumber field.
func (o *EnclosuresResourceInner) SetRackNumber(v int64) {
=======
// SetRackNumber gets a reference to the given int32 and assigns it to the RackNumber field.
func (o *EnclosuresResourceInner) SetRackNumber(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.RackNumber = &v
}

// GetRackPosition returns the RackPosition field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetRackPosition() int64 {
	if o == nil || IsNil(o.RackPosition) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetRackPosition() int32 {
	if o == nil || IsNil(o.RackPosition) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.RackPosition
}

// GetRackPositionOk returns a tuple with the RackPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetRackPositionOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetRackPositionOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.RackPosition) {
		return nil, false
	}
	return o.RackPosition, true
}

// HasRackPosition returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasRackPosition() bool {
	if o != nil && !IsNil(o.RackPosition) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRackPosition gets a reference to the given int64 and assigns it to the RackPosition field.
func (o *EnclosuresResourceInner) SetRackPosition(v int64) {
=======
// SetRackPosition gets a reference to the given int32 and assigns it to the RackPosition field.
func (o *EnclosuresResourceInner) SetRackPosition(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.RackPosition = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *EnclosuresResourceInner) SetRevision(v string) {
	o.Revision = &v
}

// GetRows returns the Rows field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetRows() int64 {
	if o == nil || IsNil(o.Rows) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetRows() int32 {
	if o == nil || IsNil(o.Rows) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.Rows
}

// GetRowsOk returns a tuple with the Rows field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetRowsOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetRowsOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.Rows) {
		return nil, false
	}
	return o.Rows, true
}

// HasRows returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasRows() bool {
	if o != nil && !IsNil(o.Rows) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRows gets a reference to the given int64 and assigns it to the Rows field.
func (o *EnclosuresResourceInner) SetRows(v int64) {
=======
// SetRows gets a reference to the given int32 and assigns it to the Rows field.
func (o *EnclosuresResourceInner) SetRows(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.Rows = &v
}

// GetSlots returns the Slots field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetSlots() int64 {
	if o == nil || IsNil(o.Slots) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetSlots() int32 {
	if o == nil || IsNil(o.Slots) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.Slots
}

// GetSlotsOk returns a tuple with the Slots field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetSlotsOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetSlotsOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.Slots) {
		return nil, false
	}
	return o.Slots, true
}

// HasSlots returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasSlots() bool {
	if o != nil && !IsNil(o.Slots) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSlots gets a reference to the given int64 and assigns it to the Slots field.
func (o *EnclosuresResourceInner) SetSlots(v int64) {
=======
// SetSlots gets a reference to the given int32 and assigns it to the Slots field.
func (o *EnclosuresResourceInner) SetSlots(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.Slots = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EnclosuresResourceInner) SetStatus(v string) {
	o.Status = &v
}

// GetStatusNumeric returns the StatusNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetStatusNumeric() int64 {
	if o == nil || IsNil(o.StatusNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetStatusNumeric() int32 {
	if o == nil || IsNil(o.StatusNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.StatusNumeric
}

// GetStatusNumericOk returns a tuple with the StatusNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetStatusNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetStatusNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.StatusNumeric) {
		return nil, false
	}
	return o.StatusNumeric, true
}

// HasStatusNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasStatusNumeric() bool {
	if o != nil && !IsNil(o.StatusNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetStatusNumeric gets a reference to the given int64 and assigns it to the StatusNumeric field.
func (o *EnclosuresResourceInner) SetStatusNumeric(v int64) {
=======
// SetStatusNumeric gets a reference to the given int32 and assigns it to the StatusNumeric field.
func (o *EnclosuresResourceInner) SetStatusNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.StatusNumeric = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EnclosuresResourceInner) SetType(v string) {
	o.Type = &v
}

// GetTypeNumeric returns the TypeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetTypeNumeric() int64 {
	if o == nil || IsNil(o.TypeNumeric) {
		var ret int64
=======
func (o *EnclosuresResourceInner) GetTypeNumeric() int32 {
	if o == nil || IsNil(o.TypeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.TypeNumeric
}

// GetTypeNumericOk returns a tuple with the TypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *EnclosuresResourceInner) GetTypeNumericOk() (*int64, bool) {
=======
func (o *EnclosuresResourceInner) GetTypeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.TypeNumeric) {
		return nil, false
	}
	return o.TypeNumeric, true
}

// HasTypeNumeric returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasTypeNumeric() bool {
	if o != nil && !IsNil(o.TypeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetTypeNumeric gets a reference to the given int64 and assigns it to the TypeNumeric field.
func (o *EnclosuresResourceInner) SetTypeNumeric(v int64) {
=======
// SetTypeNumeric gets a reference to the given int32 and assigns it to the TypeNumeric field.
func (o *EnclosuresResourceInner) SetTypeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.TypeNumeric = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *EnclosuresResourceInner) SetUrl(v string) {
	o.Url = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *EnclosuresResourceInner) SetVendor(v string) {
	o.Vendor = &v
}

// GetControllers returns the Controllers field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetControllers() []ControllersResourceInner {
	if o == nil || IsNil(o.Controllers) {
		var ret []ControllersResourceInner
		return ret
	}
	return o.Controllers
}

// GetControllersOk returns a tuple with the Controllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetControllersOk() ([]ControllersResourceInner, bool) {
	if o == nil || IsNil(o.Controllers) {
		return nil, false
	}
	return o.Controllers, true
}

// HasControllers returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasControllers() bool {
	if o != nil && !IsNil(o.Controllers) {
		return true
	}

	return false
}

// SetControllers gets a reference to the given []ControllersResourceInner and assigns it to the Controllers field.
func (o *EnclosuresResourceInner) SetControllers(v []ControllersResourceInner) {
	o.Controllers = v
}

// GetPowerSupplies returns the PowerSupplies field value if set, zero value otherwise.
func (o *EnclosuresResourceInner) GetPowerSupplies() []PowerSuppliesResourceInner {
	if o == nil || IsNil(o.PowerSupplies) {
		var ret []PowerSuppliesResourceInner
		return ret
	}
	return o.PowerSupplies
}

// GetPowerSuppliesOk returns a tuple with the PowerSupplies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosuresResourceInner) GetPowerSuppliesOk() ([]PowerSuppliesResourceInner, bool) {
	if o == nil || IsNil(o.PowerSupplies) {
		return nil, false
	}
	return o.PowerSupplies, true
}

// HasPowerSupplies returns a boolean if a field has been set.
func (o *EnclosuresResourceInner) HasPowerSupplies() bool {
	if o != nil && !IsNil(o.PowerSupplies) {
		return true
	}

	return false
}

// SetPowerSupplies gets a reference to the given []PowerSuppliesResourceInner and assigns it to the PowerSupplies field.
func (o *EnclosuresResourceInner) SetPowerSupplies(v []PowerSuppliesResourceInner) {
	o.PowerSupplies = v
}

func (o EnclosuresResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnclosuresResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.BoardModel) {
		toSerialize["board-model"] = o.BoardModel
	}
	if !IsNil(o.BoardModelNumeric) {
		toSerialize["board-model-numeric"] = o.BoardModelNumeric
	}
	if !IsNil(o.Columns) {
		toSerialize["columns"] = o.Columns
	}
	if !IsNil(o.DashLevel) {
		toSerialize["dash-level"] = o.DashLevel
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DriveOrientation) {
		toSerialize["drive-orientation"] = o.DriveOrientation
	}
	if !IsNil(o.DriveOrientationNumeric) {
		toSerialize["drive-orientation-numeric"] = o.DriveOrientationNumeric
	}
	if !IsNil(o.DurableId) {
		toSerialize["durable-id"] = o.DurableId
	}
	if !IsNil(o.EmpA) {
		toSerialize["emp-a"] = o.EmpA
	}
	if !IsNil(o.EmpABusid) {
		toSerialize["emp-a-busid"] = o.EmpABusid
	}
	if !IsNil(o.EmpAChIdRev) {
		toSerialize["emp-a-ch-id-rev"] = o.EmpAChIdRev
	}
	if !IsNil(o.EmpARev) {
		toSerialize["emp-a-rev"] = o.EmpARev
	}
	if !IsNil(o.EmpATargetid) {
		toSerialize["emp-a-targetid"] = o.EmpATargetid
	}
	if !IsNil(o.EmpB) {
		toSerialize["emp-b"] = o.EmpB
	}
	if !IsNil(o.EmpBBusid) {
		toSerialize["emp-b-busid"] = o.EmpBBusid
	}
	if !IsNil(o.EmpBChIdRev) {
		toSerialize["emp-b-ch-id-rev"] = o.EmpBChIdRev
	}
	if !IsNil(o.EmpBRev) {
		toSerialize["emp-b-rev"] = o.EmpBRev
	}
	if !IsNil(o.EmpBTargetid) {
		toSerialize["emp-b-targetid"] = o.EmpBTargetid
	}
	if !IsNil(o.EnclosureArrangement) {
		toSerialize["enclosure-arrangement"] = o.EnclosureArrangement
	}
	if !IsNil(o.EnclosureArrangementNumeric) {
		toSerialize["enclosure-arrangement-numeric"] = o.EnclosureArrangementNumeric
	}
	if !IsNil(o.EnclosureId) {
		toSerialize["enclosure-id"] = o.EnclosureId
	}
	if !IsNil(o.EnclosurePower) {
		toSerialize["enclosure-power"] = o.EnclosurePower
	}
	if !IsNil(o.EnclosureWwn) {
		toSerialize["enclosure-wwn"] = o.EnclosureWwn
	}
	if !IsNil(o.ExtendedStatus) {
		toSerialize["extended-status"] = o.ExtendedStatus
	}
	if !IsNil(o.FruLocation) {
		toSerialize["fru-location"] = o.FruLocation
	}
	if !IsNil(o.FruShortname) {
		toSerialize["fru-shortname"] = o.FruShortname
	}
	if !IsNil(o.FruTlapn) {
		toSerialize["fru-tlapn"] = o.FruTlapn
	}
	if !IsNil(o.GemVersionA) {
		toSerialize["gem-version-a"] = o.GemVersionA
	}
	if !IsNil(o.GemVersionB) {
		toSerialize["gem-version-b"] = o.GemVersionB
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.HealthNumeric) {
		toSerialize["health-numeric"] = o.HealthNumeric
	}
	if !IsNil(o.HealthReason) {
		toSerialize["health-reason"] = o.HealthReason
	}
	if !IsNil(o.HealthRecommendation) {
		toSerialize["health-recommendation"] = o.HealthRecommendation
	}
	if !IsNil(o.IomType) {
		toSerialize["iom-type"] = o.IomType
	}
	if !IsNil(o.IomTypeNumeric) {
		toSerialize["iom-type-numeric"] = o.IomTypeNumeric
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.LocatorLed) {
		toSerialize["locator-led"] = o.LocatorLed
	}
	if !IsNil(o.LocatorLedNumeric) {
		toSerialize["locator-led-numeric"] = o.LocatorLedNumeric
	}
	if !IsNil(o.MfgDate) {
		toSerialize["mfg-date"] = o.MfgDate
	}
	if !IsNil(o.MfgDateNumeric) {
		toSerialize["mfg-date-numeric"] = o.MfgDateNumeric
	}
	if !IsNil(o.MfgLocation) {
		toSerialize["mfg-location"] = o.MfgLocation
	}
	if !IsNil(o.MidplaneRev) {
		toSerialize["midplane-rev"] = o.MidplaneRev
	}
	if !IsNil(o.MidplaneSerialNumber) {
		toSerialize["midplane-serial-number"] = o.MidplaneSerialNumber
	}
	if !IsNil(o.MidplaneType) {
		toSerialize["midplane-type"] = o.MidplaneType
	}
	if !IsNil(o.MidplaneTypeNumeric) {
		toSerialize["midplane-type-numeric"] = o.MidplaneTypeNumeric
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumberOfCoolingsElements) {
		toSerialize["number-of-coolings-elements"] = o.NumberOfCoolingsElements
	}
	if !IsNil(o.NumberOfDisks) {
		toSerialize["number-of-disks"] = o.NumberOfDisks
	}
	if !IsNil(o.NumberOfPowerSupplies) {
		toSerialize["number-of-power-supplies"] = o.NumberOfPowerSupplies
	}
	if !IsNil(o.PartNumber) {
		toSerialize["part-number"] = o.PartNumber
	}
	if !IsNil(o.Pcie2Capable) {
		toSerialize["pcie2-capable"] = o.Pcie2Capable
	}
	if !IsNil(o.Pcie2CapableNumeric) {
		toSerialize["pcie2-capable-numeric"] = o.Pcie2CapableNumeric
	}
	if !IsNil(o.PlatformType) {
		toSerialize["platform-type"] = o.PlatformType
	}
	if !IsNil(o.PlatformTypeNumeric) {
		toSerialize["platform-type-numeric"] = o.PlatformTypeNumeric
	}
	if !IsNil(o.RackNumber) {
		toSerialize["rack-number"] = o.RackNumber
	}
	if !IsNil(o.RackPosition) {
		toSerialize["rack-position"] = o.RackPosition
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.Rows) {
		toSerialize["rows"] = o.Rows
	}
	if !IsNil(o.Slots) {
		toSerialize["slots"] = o.Slots
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusNumeric) {
		toSerialize["status-numeric"] = o.StatusNumeric
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TypeNumeric) {
		toSerialize["type-numeric"] = o.TypeNumeric
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Controllers) {
		toSerialize["controllers"] = o.Controllers
	}
	if !IsNil(o.PowerSupplies) {
		toSerialize["power-supplies"] = o.PowerSupplies
	}
	return toSerialize, nil
}

type NullableEnclosuresResourceInner struct {
	value *EnclosuresResourceInner
	isSet bool
}

func (v NullableEnclosuresResourceInner) Get() *EnclosuresResourceInner {
	return v.value
}

func (v *NullableEnclosuresResourceInner) Set(val *EnclosuresResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEnclosuresResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEnclosuresResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnclosuresResourceInner(val *EnclosuresResourceInner) *NullableEnclosuresResourceInner {
	return &NullableEnclosuresResourceInner{value: val, isSet: true}
}

func (v NullableEnclosuresResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnclosuresResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
