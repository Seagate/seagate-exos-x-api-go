/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ControllersResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControllersResourceInner{}

// ControllersResourceInner struct for ControllersResourceInner
type ControllersResourceInner struct {
	ObjectName *string `json:"object-name,omitempty"`
	Meta       *string `json:"meta,omitempty"`
	// IPv6 Address autoconfiguration
	Autoconfig *string `json:"autoconfig,omitempty"`
	// IPv6 Address autoconfiguration( In numeric form )
<<<<<<< HEAD
	AutoconfigNumeric   *int64  `json:"autoconfig-numeric,omitempty"`
	CacheLock           *string `json:"cache-lock,omitempty"`
	CacheLockNumeric    *int64  `json:"cache-lock-numeric,omitempty"`
	CacheMemorySize     *int64  `json:"cache-memory-size,omitempty"`
	ControllerId        *string `json:"controller-id,omitempty"`
	ControllerIdNumeric *int64  `json:"controller-id-numeric,omitempty"`
=======
	AutoconfigNumeric   *int32  `json:"autoconfig-numeric,omitempty"`
	CacheLock           *string `json:"cache-lock,omitempty"`
	CacheLockNumeric    *int32  `json:"cache-lock-numeric,omitempty"`
	CacheMemorySize     *int32  `json:"cache-memory-size,omitempty"`
	ControllerId        *string `json:"controller-id,omitempty"`
	ControllerIdNumeric *int32  `json:"controller-id-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	// Complex Programmable Logic Device
	CpldVersion           *string `json:"cpld-version,omitempty"`
	DashLevel             *string `json:"dash-level,omitempty"`
	Description           *string `json:"description,omitempty"`
	Dhcpv6                *string `json:"dhcpv6,omitempty"`
<<<<<<< HEAD
	Disks                 *int64  `json:"disks,omitempty"`
	DriveBusType          *string `json:"drive-bus-type,omitempty"`
	DriveBusTypeNumeric   *int64  `json:"drive-bus-type-numeric,omitempty"`
	DriveChannels         *int64  `json:"drive-channels,omitempty"`
	DurableId             *string `json:"durable-id,omitempty"`
	FailOverReason        *string `json:"fail-over-reason,omitempty"`
	FailOverReasonNumeric *int64  `json:"fail-over-reason-numeric,omitempty"`
	FailedOver            *string `json:"failed-over,omitempty"`
	FailedOverNumeric     *int64  `json:"failed-over-numeric,omitempty"`
	FramDisabled0         *string `json:"fram-disabled-0,omitempty"`
	FramDisabled0Numeric  *int64  `json:"fram-disabled-0-numeric,omitempty"`
	FramDisabled1         *string `json:"fram-disabled-1,omitempty"`
	FramDisabled1Numeric  *int64  `json:"fram-disabled-1-numeric,omitempty"`
	FramModel0            *string `json:"fram-model-0,omitempty"`
	FramModel0Numeric     *int64  `json:"fram-model-0-numeric,omitempty"`
	FramModel1            *string `json:"fram-model-1,omitempty"`
	FramModel1Numeric     *int64  `json:"fram-model-1-numeric,omitempty"`
	FramVersion0          *int64  `json:"fram-version-0,omitempty"`
	FramVersion1          *int64  `json:"fram-version-1,omitempty"`
	FruShortname          *string `json:"fru-shortname,omitempty"`
	HardwareVersion       *string `json:"hardware-version,omitempty"`
	Health                *string `json:"health,omitempty"`
	HealthNumeric         *int64  `json:"health-numeric,omitempty"`
	HealthReason          *string `json:"health-reason,omitempty"`
	HealthRecommendation  *string `json:"health-recommendation,omitempty"`
	HostPorts             *int64  `json:"host-ports,omitempty"`
=======
	Disks                 *int32  `json:"disks,omitempty"`
	DriveBusType          *string `json:"drive-bus-type,omitempty"`
	DriveBusTypeNumeric   *int32  `json:"drive-bus-type-numeric,omitempty"`
	DriveChannels         *int32  `json:"drive-channels,omitempty"`
	DurableId             *string `json:"durable-id,omitempty"`
	FailOverReason        *string `json:"fail-over-reason,omitempty"`
	FailOverReasonNumeric *int32  `json:"fail-over-reason-numeric,omitempty"`
	FailedOver            *string `json:"failed-over,omitempty"`
	FailedOverNumeric     *int32  `json:"failed-over-numeric,omitempty"`
	FramDisabled0         *string `json:"fram-disabled-0,omitempty"`
	FramDisabled0Numeric  *int32  `json:"fram-disabled-0-numeric,omitempty"`
	FramDisabled1         *string `json:"fram-disabled-1,omitempty"`
	FramDisabled1Numeric  *int32  `json:"fram-disabled-1-numeric,omitempty"`
	FramModel0            *string `json:"fram-model-0,omitempty"`
	FramModel0Numeric     *int32  `json:"fram-model-0-numeric,omitempty"`
	FramModel1            *string `json:"fram-model-1,omitempty"`
	FramModel1Numeric     *int32  `json:"fram-model-1-numeric,omitempty"`
	FramVersion0          *int32  `json:"fram-version-0,omitempty"`
	FramVersion1          *int32  `json:"fram-version-1,omitempty"`
	FruShortname          *string `json:"fru-shortname,omitempty"`
	HardwareVersion       *string `json:"hardware-version,omitempty"`
	Health                *string `json:"health,omitempty"`
	HealthNumeric         *int32  `json:"health-numeric,omitempty"`
	HealthReason          *string `json:"health-reason,omitempty"`
	HealthRecommendation  *string `json:"health-recommendation,omitempty"`
	HostPorts             *int32  `json:"host-ports,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	// Internal Controller Serial Number
	InternalSerialNumber        *string `json:"internal-serial-number,omitempty"`
	IpAddress                   *string `json:"ip-address,omitempty"`
	IpGateway                   *string `json:"ip-gateway,omitempty"`
	IpSubnetMask                *string `json:"ip-subnet-mask,omitempty"`
	Ip6AutoAddress              *string `json:"ip6-auto-address,omitempty"`
	Ip6AutoAddressSource        *string `json:"ip6-auto-address-source,omitempty"`
<<<<<<< HEAD
	Ip6AutoAddressSourceNumeric *int64  `json:"ip6-auto-address-source-numeric,omitempty"`
=======
	Ip6AutoAddressSourceNumeric *int32  `json:"ip6-auto-address-source-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	Ip6AutoGateway              *string `json:"ip6-auto-gateway,omitempty"`
	Ip6LinkLocalAddress         *string `json:"ip6-link-local-address,omitempty"`
	Ip6LinkLocalGateway         *string `json:"ip6-link-local-gateway,omitempty"`
	Ip61Address                 *string `json:"ip61-address,omitempty"`
	Ip61Gateway                 *string `json:"ip61-gateway,omitempty"`
	Ip62Address                 *string `json:"ip62-address,omitempty"`
	Ip62Gateway                 *string `json:"ip62-gateway,omitempty"`
	Ip63Address                 *string `json:"ip63-address,omitempty"`
	Ip63Gateway                 *string `json:"ip63-gateway,omitempty"`
	Ip64Address                 *string `json:"ip64-address,omitempty"`
	Ip64Gateway                 *string `json:"ip64-gateway,omitempty"`
	// Indicates whether the locator LED is on
	LocatorLed *string `json:"locator-led,omitempty"`
	// Indicates whether the locator LED is on( In numeric form )
<<<<<<< HEAD
	LocatorLedNumeric *int64 `json:"locator-led-numeric,omitempty"`
	// MAC address for the network port
	MacAddress       *string `json:"mac-address,omitempty"`
	MfgDate          *string `json:"mfg-date,omitempty"`
	MfgDateNumeric   *int64  `json:"mfg-date-numeric,omitempty"`
=======
	LocatorLedNumeric *int32 `json:"locator-led-numeric,omitempty"`
	// MAC address for the network port
	MacAddress       *string `json:"mac-address,omitempty"`
	MfgDate          *string `json:"mfg-date,omitempty"`
	MfgDateNumeric   *int32  `json:"mfg-date-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	MfgLocation      *string `json:"mfg-location,omitempty"`
	MfgVendorId      *string `json:"mfg-vendor-id,omitempty"`
	Model            *string `json:"model,omitempty"`
	Multicore        *string `json:"multicore,omitempty"`
<<<<<<< HEAD
	MulticoreNumeric *int64  `json:"multicore-numeric,omitempty"`
	// World Wide Node Name of the system
	NodeWwn *string `json:"node-wwn,omitempty"`
	// Number of Virtual Pools per Controller
	NumberOfStoragePools *int64  `json:"number-of-storage-pools,omitempty"`
	PartNumber           *string `json:"part-number,omitempty"`
	PhyIsolation         *string `json:"phy-isolation,omitempty"`
	PhyIsolationNumeric  *int64  `json:"phy-isolation-numeric,omitempty"`
	// HW Platform Type
	PlatformType *string `json:"platform-type,omitempty"`
	// HW Platform Type( In numeric form )
	PlatformTypeNumeric *int64 `json:"platform-type-numeric,omitempty"`
	// Position of the component in the enclosure
	Position *string `json:"position,omitempty"`
	// Position of the component in the enclosure( In numeric form )
	PositionNumeric *int64 `json:"position-numeric,omitempty"`
	// Mode in which the controllers are operating
	RedundancyMode *string `json:"redundancy-mode,omitempty"`
	// Mode in which the controllers are operating( In numeric form )
	RedundancyModeNumeric *int64 `json:"redundancy-mode-numeric,omitempty"`
	// Current operational state of the controllers
	RedundancyStatus *string `json:"redundancy-status,omitempty"`
	// Current operational state of the controllers( In numeric form )
	RedundancyStatusNumeric *int64 `json:"redundancy-status-numeric,omitempty"`
=======
	MulticoreNumeric *int32  `json:"multicore-numeric,omitempty"`
	// World Wide Node Name of the system
	NodeWwn *string `json:"node-wwn,omitempty"`
	// Number of Virtual Pools per Controller
	NumberOfStoragePools *int32  `json:"number-of-storage-pools,omitempty"`
	PartNumber           *string `json:"part-number,omitempty"`
	PhyIsolation         *string `json:"phy-isolation,omitempty"`
	PhyIsolationNumeric  *int32  `json:"phy-isolation-numeric,omitempty"`
	// HW Platform Type
	PlatformType *string `json:"platform-type,omitempty"`
	// HW Platform Type( In numeric form )
	PlatformTypeNumeric *int32 `json:"platform-type-numeric,omitempty"`
	// Position of the component in the enclosure
	Position *string `json:"position,omitempty"`
	// Position of the component in the enclosure( In numeric form )
	PositionNumeric *int32 `json:"position-numeric,omitempty"`
	// Mode in which the controllers are operating
	RedundancyMode *string `json:"redundancy-mode,omitempty"`
	// Mode in which the controllers are operating( In numeric form )
	RedundancyModeNumeric *int32 `json:"redundancy-mode-numeric,omitempty"`
	// Current operational state of the controllers
	RedundancyStatus *string `json:"redundancy-status,omitempty"`
	// Current operational state of the controllers( In numeric form )
	RedundancyStatusNumeric *int32 `json:"redundancy-status-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	// Current revision for this FRU
	Revision *string `json:"revision,omitempty"`
	// FRU rotation
	Rotation *string `json:"rotation,omitempty"`
	// FRU rotation( In numeric form )
<<<<<<< HEAD
	RotationNumeric *int64 `json:"rotation-numeric,omitempty"`
	// Storage Controller processor speed
	ScCpuSpeed *int64 `json:"sc-cpu-speed,omitempty"`
=======
	RotationNumeric *int32 `json:"rotation-numeric,omitempty"`
	// Storage Controller processor speed
	ScCpuSpeed *int32 `json:"sc-cpu-speed,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	// The Storage Controller processor type
	ScCpuType *string `json:"sc-cpu-type,omitempty"`
	// The Storage Controller main ('app') firmware version
	ScFw         *string `json:"sc-fw,omitempty"`
	SerialNumber *string `json:"serial-number,omitempty"`
	SlaacIp      *string `json:"slaac-ip,omitempty"`
	// IO count before sending to alt ssd path
<<<<<<< HEAD
	SsdAltPathIoCount *int64  `json:"ssd-alt-path-io-count,omitempty"`
	Status            *string `json:"status,omitempty"`
	StatusNumeric     *int64  `json:"status-numeric,omitempty"`
	SystemMemorySize  *int64  `json:"system-memory-size,omitempty"`
	// The resource URL
	Url          *string `json:"url,omitempty"`
	Vendor       *string `json:"vendor,omitempty"`
	VirtualDisks *int64  `json:"virtual-disks,omitempty"`
	// The write-back cache mode
	WritePolicy *string `json:"write-policy,omitempty"`
	// The write-back cache mode( In numeric form )
	WritePolicyNumeric *int64                           `json:"write-policy-numeric,omitempty"`
=======
	SsdAltPathIoCount *int32  `json:"ssd-alt-path-io-count,omitempty"`
	Status            *string `json:"status,omitempty"`
	StatusNumeric     *int32  `json:"status-numeric,omitempty"`
	SystemMemorySize  *int32  `json:"system-memory-size,omitempty"`
	// The resource URL
	Url          *string `json:"url,omitempty"`
	Vendor       *string `json:"vendor,omitempty"`
	VirtualDisks *int32  `json:"virtual-disks,omitempty"`
	// The write-back cache mode
	WritePolicy *string `json:"write-policy,omitempty"`
	// The write-back cache mode( In numeric form )
	WritePolicyNumeric *int32                           `json:"write-policy-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	NetworkParameters  []NetworkParametersResourceInner `json:"network-parameters,omitempty"`
	Port               []PortResourceInner              `json:"port,omitempty"`
	ExpanderPorts      []ExpanderPortsResourceInner     `json:"expander-ports,omitempty"`
	Expanders          []ExpandersResourceInner         `json:"expanders,omitempty"`
}

// NewControllersResourceInner instantiates a new ControllersResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersResourceInner() *ControllersResourceInner {
	this := ControllersResourceInner{}
	return &this
}

// NewControllersResourceInnerWithDefaults instantiates a new ControllersResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersResourceInnerWithDefaults() *ControllersResourceInner {
	this := ControllersResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *ControllersResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *ControllersResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetAutoconfig returns the Autoconfig field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetAutoconfig() string {
	if o == nil || IsNil(o.Autoconfig) {
		var ret string
		return ret
	}
	return *o.Autoconfig
}

// GetAutoconfigOk returns a tuple with the Autoconfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetAutoconfigOk() (*string, bool) {
	if o == nil || IsNil(o.Autoconfig) {
		return nil, false
	}
	return o.Autoconfig, true
}

// HasAutoconfig returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasAutoconfig() bool {
	if o != nil && !IsNil(o.Autoconfig) {
		return true
	}

	return false
}

// SetAutoconfig gets a reference to the given string and assigns it to the Autoconfig field.
func (o *ControllersResourceInner) SetAutoconfig(v string) {
	o.Autoconfig = &v
}

// GetAutoconfigNumeric returns the AutoconfigNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetAutoconfigNumeric() int64 {
	if o == nil || IsNil(o.AutoconfigNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetAutoconfigNumeric() int32 {
	if o == nil || IsNil(o.AutoconfigNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.AutoconfigNumeric
}

// GetAutoconfigNumericOk returns a tuple with the AutoconfigNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetAutoconfigNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetAutoconfigNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.AutoconfigNumeric) {
		return nil, false
	}
	return o.AutoconfigNumeric, true
}

// HasAutoconfigNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasAutoconfigNumeric() bool {
	if o != nil && !IsNil(o.AutoconfigNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetAutoconfigNumeric gets a reference to the given int64 and assigns it to the AutoconfigNumeric field.
func (o *ControllersResourceInner) SetAutoconfigNumeric(v int64) {
=======
// SetAutoconfigNumeric gets a reference to the given int32 and assigns it to the AutoconfigNumeric field.
func (o *ControllersResourceInner) SetAutoconfigNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.AutoconfigNumeric = &v
}

// GetCacheLock returns the CacheLock field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetCacheLock() string {
	if o == nil || IsNil(o.CacheLock) {
		var ret string
		return ret
	}
	return *o.CacheLock
}

// GetCacheLockOk returns a tuple with the CacheLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetCacheLockOk() (*string, bool) {
	if o == nil || IsNil(o.CacheLock) {
		return nil, false
	}
	return o.CacheLock, true
}

// HasCacheLock returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasCacheLock() bool {
	if o != nil && !IsNil(o.CacheLock) {
		return true
	}

	return false
}

// SetCacheLock gets a reference to the given string and assigns it to the CacheLock field.
func (o *ControllersResourceInner) SetCacheLock(v string) {
	o.CacheLock = &v
}

// GetCacheLockNumeric returns the CacheLockNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetCacheLockNumeric() int64 {
	if o == nil || IsNil(o.CacheLockNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetCacheLockNumeric() int32 {
	if o == nil || IsNil(o.CacheLockNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.CacheLockNumeric
}

// GetCacheLockNumericOk returns a tuple with the CacheLockNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetCacheLockNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetCacheLockNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.CacheLockNumeric) {
		return nil, false
	}
	return o.CacheLockNumeric, true
}

// HasCacheLockNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasCacheLockNumeric() bool {
	if o != nil && !IsNil(o.CacheLockNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetCacheLockNumeric gets a reference to the given int64 and assigns it to the CacheLockNumeric field.
func (o *ControllersResourceInner) SetCacheLockNumeric(v int64) {
=======
// SetCacheLockNumeric gets a reference to the given int32 and assigns it to the CacheLockNumeric field.
func (o *ControllersResourceInner) SetCacheLockNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.CacheLockNumeric = &v
}

// GetCacheMemorySize returns the CacheMemorySize field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetCacheMemorySize() int64 {
	if o == nil || IsNil(o.CacheMemorySize) {
		var ret int64
=======
func (o *ControllersResourceInner) GetCacheMemorySize() int32 {
	if o == nil || IsNil(o.CacheMemorySize) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.CacheMemorySize
}

// GetCacheMemorySizeOk returns a tuple with the CacheMemorySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetCacheMemorySizeOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetCacheMemorySizeOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.CacheMemorySize) {
		return nil, false
	}
	return o.CacheMemorySize, true
}

// HasCacheMemorySize returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasCacheMemorySize() bool {
	if o != nil && !IsNil(o.CacheMemorySize) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetCacheMemorySize gets a reference to the given int64 and assigns it to the CacheMemorySize field.
func (o *ControllersResourceInner) SetCacheMemorySize(v int64) {
=======
// SetCacheMemorySize gets a reference to the given int32 and assigns it to the CacheMemorySize field.
func (o *ControllersResourceInner) SetCacheMemorySize(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.CacheMemorySize = &v
}

// GetControllerId returns the ControllerId field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetControllerId() string {
	if o == nil || IsNil(o.ControllerId) {
		var ret string
		return ret
	}
	return *o.ControllerId
}

// GetControllerIdOk returns a tuple with the ControllerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetControllerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ControllerId) {
		return nil, false
	}
	return o.ControllerId, true
}

// HasControllerId returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasControllerId() bool {
	if o != nil && !IsNil(o.ControllerId) {
		return true
	}

	return false
}

// SetControllerId gets a reference to the given string and assigns it to the ControllerId field.
func (o *ControllersResourceInner) SetControllerId(v string) {
	o.ControllerId = &v
}

// GetControllerIdNumeric returns the ControllerIdNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetControllerIdNumeric() int64 {
	if o == nil || IsNil(o.ControllerIdNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetControllerIdNumeric() int32 {
	if o == nil || IsNil(o.ControllerIdNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.ControllerIdNumeric
}

// GetControllerIdNumericOk returns a tuple with the ControllerIdNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetControllerIdNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetControllerIdNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.ControllerIdNumeric) {
		return nil, false
	}
	return o.ControllerIdNumeric, true
}

// HasControllerIdNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasControllerIdNumeric() bool {
	if o != nil && !IsNil(o.ControllerIdNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetControllerIdNumeric gets a reference to the given int64 and assigns it to the ControllerIdNumeric field.
func (o *ControllersResourceInner) SetControllerIdNumeric(v int64) {
=======
// SetControllerIdNumeric gets a reference to the given int32 and assigns it to the ControllerIdNumeric field.
func (o *ControllersResourceInner) SetControllerIdNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.ControllerIdNumeric = &v
}

// GetCpldVersion returns the CpldVersion field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetCpldVersion() string {
	if o == nil || IsNil(o.CpldVersion) {
		var ret string
		return ret
	}
	return *o.CpldVersion
}

// GetCpldVersionOk returns a tuple with the CpldVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetCpldVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CpldVersion) {
		return nil, false
	}
	return o.CpldVersion, true
}

// HasCpldVersion returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasCpldVersion() bool {
	if o != nil && !IsNil(o.CpldVersion) {
		return true
	}

	return false
}

// SetCpldVersion gets a reference to the given string and assigns it to the CpldVersion field.
func (o *ControllersResourceInner) SetCpldVersion(v string) {
	o.CpldVersion = &v
}

// GetDashLevel returns the DashLevel field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetDashLevel() string {
	if o == nil || IsNil(o.DashLevel) {
		var ret string
		return ret
	}
	return *o.DashLevel
}

// GetDashLevelOk returns a tuple with the DashLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetDashLevelOk() (*string, bool) {
	if o == nil || IsNil(o.DashLevel) {
		return nil, false
	}
	return o.DashLevel, true
}

// HasDashLevel returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasDashLevel() bool {
	if o != nil && !IsNil(o.DashLevel) {
		return true
	}

	return false
}

// SetDashLevel gets a reference to the given string and assigns it to the DashLevel field.
func (o *ControllersResourceInner) SetDashLevel(v string) {
	o.DashLevel = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ControllersResourceInner) SetDescription(v string) {
	o.Description = &v
}

// GetDhcpv6 returns the Dhcpv6 field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetDhcpv6() string {
	if o == nil || IsNil(o.Dhcpv6) {
		var ret string
		return ret
	}
	return *o.Dhcpv6
}

// GetDhcpv6Ok returns a tuple with the Dhcpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetDhcpv6Ok() (*string, bool) {
	if o == nil || IsNil(o.Dhcpv6) {
		return nil, false
	}
	return o.Dhcpv6, true
}

// HasDhcpv6 returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasDhcpv6() bool {
	if o != nil && !IsNil(o.Dhcpv6) {
		return true
	}

	return false
}

// SetDhcpv6 gets a reference to the given string and assigns it to the Dhcpv6 field.
func (o *ControllersResourceInner) SetDhcpv6(v string) {
	o.Dhcpv6 = &v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetDisks() int64 {
	if o == nil || IsNil(o.Disks) {
		var ret int64
=======
func (o *ControllersResourceInner) GetDisks() int32 {
	if o == nil || IsNil(o.Disks) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetDisksOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetDisksOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDisks gets a reference to the given int64 and assigns it to the Disks field.
func (o *ControllersResourceInner) SetDisks(v int64) {
=======
// SetDisks gets a reference to the given int32 and assigns it to the Disks field.
func (o *ControllersResourceInner) SetDisks(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.Disks = &v
}

// GetDriveBusType returns the DriveBusType field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetDriveBusType() string {
	if o == nil || IsNil(o.DriveBusType) {
		var ret string
		return ret
	}
	return *o.DriveBusType
}

// GetDriveBusTypeOk returns a tuple with the DriveBusType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetDriveBusTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DriveBusType) {
		return nil, false
	}
	return o.DriveBusType, true
}

// HasDriveBusType returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasDriveBusType() bool {
	if o != nil && !IsNil(o.DriveBusType) {
		return true
	}

	return false
}

// SetDriveBusType gets a reference to the given string and assigns it to the DriveBusType field.
func (o *ControllersResourceInner) SetDriveBusType(v string) {
	o.DriveBusType = &v
}

// GetDriveBusTypeNumeric returns the DriveBusTypeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetDriveBusTypeNumeric() int64 {
	if o == nil || IsNil(o.DriveBusTypeNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetDriveBusTypeNumeric() int32 {
	if o == nil || IsNil(o.DriveBusTypeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.DriveBusTypeNumeric
}

// GetDriveBusTypeNumericOk returns a tuple with the DriveBusTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetDriveBusTypeNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetDriveBusTypeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.DriveBusTypeNumeric) {
		return nil, false
	}
	return o.DriveBusTypeNumeric, true
}

// HasDriveBusTypeNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasDriveBusTypeNumeric() bool {
	if o != nil && !IsNil(o.DriveBusTypeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDriveBusTypeNumeric gets a reference to the given int64 and assigns it to the DriveBusTypeNumeric field.
func (o *ControllersResourceInner) SetDriveBusTypeNumeric(v int64) {
=======
// SetDriveBusTypeNumeric gets a reference to the given int32 and assigns it to the DriveBusTypeNumeric field.
func (o *ControllersResourceInner) SetDriveBusTypeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.DriveBusTypeNumeric = &v
}

// GetDriveChannels returns the DriveChannels field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetDriveChannels() int64 {
	if o == nil || IsNil(o.DriveChannels) {
		var ret int64
=======
func (o *ControllersResourceInner) GetDriveChannels() int32 {
	if o == nil || IsNil(o.DriveChannels) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.DriveChannels
}

// GetDriveChannelsOk returns a tuple with the DriveChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetDriveChannelsOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetDriveChannelsOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.DriveChannels) {
		return nil, false
	}
	return o.DriveChannels, true
}

// HasDriveChannels returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasDriveChannels() bool {
	if o != nil && !IsNil(o.DriveChannels) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDriveChannels gets a reference to the given int64 and assigns it to the DriveChannels field.
func (o *ControllersResourceInner) SetDriveChannels(v int64) {
=======
// SetDriveChannels gets a reference to the given int32 and assigns it to the DriveChannels field.
func (o *ControllersResourceInner) SetDriveChannels(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.DriveChannels = &v
}

// GetDurableId returns the DurableId field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetDurableId() string {
	if o == nil || IsNil(o.DurableId) {
		var ret string
		return ret
	}
	return *o.DurableId
}

// GetDurableIdOk returns a tuple with the DurableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetDurableIdOk() (*string, bool) {
	if o == nil || IsNil(o.DurableId) {
		return nil, false
	}
	return o.DurableId, true
}

// HasDurableId returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasDurableId() bool {
	if o != nil && !IsNil(o.DurableId) {
		return true
	}

	return false
}

// SetDurableId gets a reference to the given string and assigns it to the DurableId field.
func (o *ControllersResourceInner) SetDurableId(v string) {
	o.DurableId = &v
}

// GetFailOverReason returns the FailOverReason field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetFailOverReason() string {
	if o == nil || IsNil(o.FailOverReason) {
		var ret string
		return ret
	}
	return *o.FailOverReason
}

// GetFailOverReasonOk returns a tuple with the FailOverReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetFailOverReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailOverReason) {
		return nil, false
	}
	return o.FailOverReason, true
}

// HasFailOverReason returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFailOverReason() bool {
	if o != nil && !IsNil(o.FailOverReason) {
		return true
	}

	return false
}

// SetFailOverReason gets a reference to the given string and assigns it to the FailOverReason field.
func (o *ControllersResourceInner) SetFailOverReason(v string) {
	o.FailOverReason = &v
}

// GetFailOverReasonNumeric returns the FailOverReasonNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFailOverReasonNumeric() int64 {
	if o == nil || IsNil(o.FailOverReasonNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetFailOverReasonNumeric() int32 {
	if o == nil || IsNil(o.FailOverReasonNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FailOverReasonNumeric
}

// GetFailOverReasonNumericOk returns a tuple with the FailOverReasonNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFailOverReasonNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetFailOverReasonNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FailOverReasonNumeric) {
		return nil, false
	}
	return o.FailOverReasonNumeric, true
}

// HasFailOverReasonNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFailOverReasonNumeric() bool {
	if o != nil && !IsNil(o.FailOverReasonNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFailOverReasonNumeric gets a reference to the given int64 and assigns it to the FailOverReasonNumeric field.
func (o *ControllersResourceInner) SetFailOverReasonNumeric(v int64) {
=======
// SetFailOverReasonNumeric gets a reference to the given int32 and assigns it to the FailOverReasonNumeric field.
func (o *ControllersResourceInner) SetFailOverReasonNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FailOverReasonNumeric = &v
}

// GetFailedOver returns the FailedOver field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetFailedOver() string {
	if o == nil || IsNil(o.FailedOver) {
		var ret string
		return ret
	}
	return *o.FailedOver
}

// GetFailedOverOk returns a tuple with the FailedOver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetFailedOverOk() (*string, bool) {
	if o == nil || IsNil(o.FailedOver) {
		return nil, false
	}
	return o.FailedOver, true
}

// HasFailedOver returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFailedOver() bool {
	if o != nil && !IsNil(o.FailedOver) {
		return true
	}

	return false
}

// SetFailedOver gets a reference to the given string and assigns it to the FailedOver field.
func (o *ControllersResourceInner) SetFailedOver(v string) {
	o.FailedOver = &v
}

// GetFailedOverNumeric returns the FailedOverNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFailedOverNumeric() int64 {
	if o == nil || IsNil(o.FailedOverNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetFailedOverNumeric() int32 {
	if o == nil || IsNil(o.FailedOverNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FailedOverNumeric
}

// GetFailedOverNumericOk returns a tuple with the FailedOverNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFailedOverNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetFailedOverNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FailedOverNumeric) {
		return nil, false
	}
	return o.FailedOverNumeric, true
}

// HasFailedOverNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFailedOverNumeric() bool {
	if o != nil && !IsNil(o.FailedOverNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFailedOverNumeric gets a reference to the given int64 and assigns it to the FailedOverNumeric field.
func (o *ControllersResourceInner) SetFailedOverNumeric(v int64) {
=======
// SetFailedOverNumeric gets a reference to the given int32 and assigns it to the FailedOverNumeric field.
func (o *ControllersResourceInner) SetFailedOverNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FailedOverNumeric = &v
}

// GetFramDisabled0 returns the FramDisabled0 field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetFramDisabled0() string {
	if o == nil || IsNil(o.FramDisabled0) {
		var ret string
		return ret
	}
	return *o.FramDisabled0
}

// GetFramDisabled0Ok returns a tuple with the FramDisabled0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetFramDisabled0Ok() (*string, bool) {
	if o == nil || IsNil(o.FramDisabled0) {
		return nil, false
	}
	return o.FramDisabled0, true
}

// HasFramDisabled0 returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramDisabled0() bool {
	if o != nil && !IsNil(o.FramDisabled0) {
		return true
	}

	return false
}

// SetFramDisabled0 gets a reference to the given string and assigns it to the FramDisabled0 field.
func (o *ControllersResourceInner) SetFramDisabled0(v string) {
	o.FramDisabled0 = &v
}

// GetFramDisabled0Numeric returns the FramDisabled0Numeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramDisabled0Numeric() int64 {
	if o == nil || IsNil(o.FramDisabled0Numeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetFramDisabled0Numeric() int32 {
	if o == nil || IsNil(o.FramDisabled0Numeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FramDisabled0Numeric
}

// GetFramDisabled0NumericOk returns a tuple with the FramDisabled0Numeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramDisabled0NumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetFramDisabled0NumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FramDisabled0Numeric) {
		return nil, false
	}
	return o.FramDisabled0Numeric, true
}

// HasFramDisabled0Numeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramDisabled0Numeric() bool {
	if o != nil && !IsNil(o.FramDisabled0Numeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFramDisabled0Numeric gets a reference to the given int64 and assigns it to the FramDisabled0Numeric field.
func (o *ControllersResourceInner) SetFramDisabled0Numeric(v int64) {
=======
// SetFramDisabled0Numeric gets a reference to the given int32 and assigns it to the FramDisabled0Numeric field.
func (o *ControllersResourceInner) SetFramDisabled0Numeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FramDisabled0Numeric = &v
}

// GetFramDisabled1 returns the FramDisabled1 field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetFramDisabled1() string {
	if o == nil || IsNil(o.FramDisabled1) {
		var ret string
		return ret
	}
	return *o.FramDisabled1
}

// GetFramDisabled1Ok returns a tuple with the FramDisabled1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetFramDisabled1Ok() (*string, bool) {
	if o == nil || IsNil(o.FramDisabled1) {
		return nil, false
	}
	return o.FramDisabled1, true
}

// HasFramDisabled1 returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramDisabled1() bool {
	if o != nil && !IsNil(o.FramDisabled1) {
		return true
	}

	return false
}

// SetFramDisabled1 gets a reference to the given string and assigns it to the FramDisabled1 field.
func (o *ControllersResourceInner) SetFramDisabled1(v string) {
	o.FramDisabled1 = &v
}

// GetFramDisabled1Numeric returns the FramDisabled1Numeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramDisabled1Numeric() int64 {
	if o == nil || IsNil(o.FramDisabled1Numeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetFramDisabled1Numeric() int32 {
	if o == nil || IsNil(o.FramDisabled1Numeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FramDisabled1Numeric
}

// GetFramDisabled1NumericOk returns a tuple with the FramDisabled1Numeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramDisabled1NumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetFramDisabled1NumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FramDisabled1Numeric) {
		return nil, false
	}
	return o.FramDisabled1Numeric, true
}

// HasFramDisabled1Numeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramDisabled1Numeric() bool {
	if o != nil && !IsNil(o.FramDisabled1Numeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFramDisabled1Numeric gets a reference to the given int64 and assigns it to the FramDisabled1Numeric field.
func (o *ControllersResourceInner) SetFramDisabled1Numeric(v int64) {
=======
// SetFramDisabled1Numeric gets a reference to the given int32 and assigns it to the FramDisabled1Numeric field.
func (o *ControllersResourceInner) SetFramDisabled1Numeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FramDisabled1Numeric = &v
}

// GetFramModel0 returns the FramModel0 field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetFramModel0() string {
	if o == nil || IsNil(o.FramModel0) {
		var ret string
		return ret
	}
	return *o.FramModel0
}

// GetFramModel0Ok returns a tuple with the FramModel0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetFramModel0Ok() (*string, bool) {
	if o == nil || IsNil(o.FramModel0) {
		return nil, false
	}
	return o.FramModel0, true
}

// HasFramModel0 returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramModel0() bool {
	if o != nil && !IsNil(o.FramModel0) {
		return true
	}

	return false
}

// SetFramModel0 gets a reference to the given string and assigns it to the FramModel0 field.
func (o *ControllersResourceInner) SetFramModel0(v string) {
	o.FramModel0 = &v
}

// GetFramModel0Numeric returns the FramModel0Numeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramModel0Numeric() int64 {
	if o == nil || IsNil(o.FramModel0Numeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetFramModel0Numeric() int32 {
	if o == nil || IsNil(o.FramModel0Numeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FramModel0Numeric
}

// GetFramModel0NumericOk returns a tuple with the FramModel0Numeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramModel0NumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetFramModel0NumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FramModel0Numeric) {
		return nil, false
	}
	return o.FramModel0Numeric, true
}

// HasFramModel0Numeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramModel0Numeric() bool {
	if o != nil && !IsNil(o.FramModel0Numeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFramModel0Numeric gets a reference to the given int64 and assigns it to the FramModel0Numeric field.
func (o *ControllersResourceInner) SetFramModel0Numeric(v int64) {
=======
// SetFramModel0Numeric gets a reference to the given int32 and assigns it to the FramModel0Numeric field.
func (o *ControllersResourceInner) SetFramModel0Numeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FramModel0Numeric = &v
}

// GetFramModel1 returns the FramModel1 field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetFramModel1() string {
	if o == nil || IsNil(o.FramModel1) {
		var ret string
		return ret
	}
	return *o.FramModel1
}

// GetFramModel1Ok returns a tuple with the FramModel1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetFramModel1Ok() (*string, bool) {
	if o == nil || IsNil(o.FramModel1) {
		return nil, false
	}
	return o.FramModel1, true
}

// HasFramModel1 returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramModel1() bool {
	if o != nil && !IsNil(o.FramModel1) {
		return true
	}

	return false
}

// SetFramModel1 gets a reference to the given string and assigns it to the FramModel1 field.
func (o *ControllersResourceInner) SetFramModel1(v string) {
	o.FramModel1 = &v
}

// GetFramModel1Numeric returns the FramModel1Numeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramModel1Numeric() int64 {
	if o == nil || IsNil(o.FramModel1Numeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetFramModel1Numeric() int32 {
	if o == nil || IsNil(o.FramModel1Numeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FramModel1Numeric
}

// GetFramModel1NumericOk returns a tuple with the FramModel1Numeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramModel1NumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetFramModel1NumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FramModel1Numeric) {
		return nil, false
	}
	return o.FramModel1Numeric, true
}

// HasFramModel1Numeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramModel1Numeric() bool {
	if o != nil && !IsNil(o.FramModel1Numeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFramModel1Numeric gets a reference to the given int64 and assigns it to the FramModel1Numeric field.
func (o *ControllersResourceInner) SetFramModel1Numeric(v int64) {
=======
// SetFramModel1Numeric gets a reference to the given int32 and assigns it to the FramModel1Numeric field.
func (o *ControllersResourceInner) SetFramModel1Numeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FramModel1Numeric = &v
}

// GetFramVersion0 returns the FramVersion0 field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramVersion0() int64 {
	if o == nil || IsNil(o.FramVersion0) {
		var ret int64
=======
func (o *ControllersResourceInner) GetFramVersion0() int32 {
	if o == nil || IsNil(o.FramVersion0) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FramVersion0
}

// GetFramVersion0Ok returns a tuple with the FramVersion0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramVersion0Ok() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetFramVersion0Ok() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FramVersion0) {
		return nil, false
	}
	return o.FramVersion0, true
}

// HasFramVersion0 returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramVersion0() bool {
	if o != nil && !IsNil(o.FramVersion0) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFramVersion0 gets a reference to the given int64 and assigns it to the FramVersion0 field.
func (o *ControllersResourceInner) SetFramVersion0(v int64) {
=======
// SetFramVersion0 gets a reference to the given int32 and assigns it to the FramVersion0 field.
func (o *ControllersResourceInner) SetFramVersion0(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FramVersion0 = &v
}

// GetFramVersion1 returns the FramVersion1 field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramVersion1() int64 {
	if o == nil || IsNil(o.FramVersion1) {
		var ret int64
=======
func (o *ControllersResourceInner) GetFramVersion1() int32 {
	if o == nil || IsNil(o.FramVersion1) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FramVersion1
}

// GetFramVersion1Ok returns a tuple with the FramVersion1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetFramVersion1Ok() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetFramVersion1Ok() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FramVersion1) {
		return nil, false
	}
	return o.FramVersion1, true
}

// HasFramVersion1 returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFramVersion1() bool {
	if o != nil && !IsNil(o.FramVersion1) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFramVersion1 gets a reference to the given int64 and assigns it to the FramVersion1 field.
func (o *ControllersResourceInner) SetFramVersion1(v int64) {
=======
// SetFramVersion1 gets a reference to the given int32 and assigns it to the FramVersion1 field.
func (o *ControllersResourceInner) SetFramVersion1(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FramVersion1 = &v
}

// GetFruShortname returns the FruShortname field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetFruShortname() string {
	if o == nil || IsNil(o.FruShortname) {
		var ret string
		return ret
	}
	return *o.FruShortname
}

// GetFruShortnameOk returns a tuple with the FruShortname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetFruShortnameOk() (*string, bool) {
	if o == nil || IsNil(o.FruShortname) {
		return nil, false
	}
	return o.FruShortname, true
}

// HasFruShortname returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasFruShortname() bool {
	if o != nil && !IsNil(o.FruShortname) {
		return true
	}

	return false
}

// SetFruShortname gets a reference to the given string and assigns it to the FruShortname field.
func (o *ControllersResourceInner) SetFruShortname(v string) {
	o.FruShortname = &v
}

// GetHardwareVersion returns the HardwareVersion field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetHardwareVersion() string {
	if o == nil || IsNil(o.HardwareVersion) {
		var ret string
		return ret
	}
	return *o.HardwareVersion
}

// GetHardwareVersionOk returns a tuple with the HardwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetHardwareVersionOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareVersion) {
		return nil, false
	}
	return o.HardwareVersion, true
}

// HasHardwareVersion returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasHardwareVersion() bool {
	if o != nil && !IsNil(o.HardwareVersion) {
		return true
	}

	return false
}

// SetHardwareVersion gets a reference to the given string and assigns it to the HardwareVersion field.
func (o *ControllersResourceInner) SetHardwareVersion(v string) {
	o.HardwareVersion = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetHealth() string {
	if o == nil || IsNil(o.Health) {
		var ret string
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetHealthOk() (*string, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given string and assigns it to the Health field.
func (o *ControllersResourceInner) SetHealth(v string) {
	o.Health = &v
}

// GetHealthNumeric returns the HealthNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetHealthNumeric() int64 {
	if o == nil || IsNil(o.HealthNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetHealthNumeric() int32 {
	if o == nil || IsNil(o.HealthNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.HealthNumeric
}

// GetHealthNumericOk returns a tuple with the HealthNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetHealthNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetHealthNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.HealthNumeric) {
		return nil, false
	}
	return o.HealthNumeric, true
}

// HasHealthNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasHealthNumeric() bool {
	if o != nil && !IsNil(o.HealthNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetHealthNumeric gets a reference to the given int64 and assigns it to the HealthNumeric field.
func (o *ControllersResourceInner) SetHealthNumeric(v int64) {
=======
// SetHealthNumeric gets a reference to the given int32 and assigns it to the HealthNumeric field.
func (o *ControllersResourceInner) SetHealthNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.HealthNumeric = &v
}

// GetHealthReason returns the HealthReason field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetHealthReason() string {
	if o == nil || IsNil(o.HealthReason) {
		var ret string
		return ret
	}
	return *o.HealthReason
}

// GetHealthReasonOk returns a tuple with the HealthReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetHealthReasonOk() (*string, bool) {
	if o == nil || IsNil(o.HealthReason) {
		return nil, false
	}
	return o.HealthReason, true
}

// HasHealthReason returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasHealthReason() bool {
	if o != nil && !IsNil(o.HealthReason) {
		return true
	}

	return false
}

// SetHealthReason gets a reference to the given string and assigns it to the HealthReason field.
func (o *ControllersResourceInner) SetHealthReason(v string) {
	o.HealthReason = &v
}

// GetHealthRecommendation returns the HealthRecommendation field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetHealthRecommendation() string {
	if o == nil || IsNil(o.HealthRecommendation) {
		var ret string
		return ret
	}
	return *o.HealthRecommendation
}

// GetHealthRecommendationOk returns a tuple with the HealthRecommendation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetHealthRecommendationOk() (*string, bool) {
	if o == nil || IsNil(o.HealthRecommendation) {
		return nil, false
	}
	return o.HealthRecommendation, true
}

// HasHealthRecommendation returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasHealthRecommendation() bool {
	if o != nil && !IsNil(o.HealthRecommendation) {
		return true
	}

	return false
}

// SetHealthRecommendation gets a reference to the given string and assigns it to the HealthRecommendation field.
func (o *ControllersResourceInner) SetHealthRecommendation(v string) {
	o.HealthRecommendation = &v
}

// GetHostPorts returns the HostPorts field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetHostPorts() int64 {
	if o == nil || IsNil(o.HostPorts) {
		var ret int64
=======
func (o *ControllersResourceInner) GetHostPorts() int32 {
	if o == nil || IsNil(o.HostPorts) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.HostPorts
}

// GetHostPortsOk returns a tuple with the HostPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetHostPortsOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetHostPortsOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.HostPorts) {
		return nil, false
	}
	return o.HostPorts, true
}

// HasHostPorts returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasHostPorts() bool {
	if o != nil && !IsNil(o.HostPorts) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetHostPorts gets a reference to the given int64 and assigns it to the HostPorts field.
func (o *ControllersResourceInner) SetHostPorts(v int64) {
=======
// SetHostPorts gets a reference to the given int32 and assigns it to the HostPorts field.
func (o *ControllersResourceInner) SetHostPorts(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.HostPorts = &v
}

// GetInternalSerialNumber returns the InternalSerialNumber field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetInternalSerialNumber() string {
	if o == nil || IsNil(o.InternalSerialNumber) {
		var ret string
		return ret
	}
	return *o.InternalSerialNumber
}

// GetInternalSerialNumberOk returns a tuple with the InternalSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetInternalSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InternalSerialNumber) {
		return nil, false
	}
	return o.InternalSerialNumber, true
}

// HasInternalSerialNumber returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasInternalSerialNumber() bool {
	if o != nil && !IsNil(o.InternalSerialNumber) {
		return true
	}

	return false
}

// SetInternalSerialNumber gets a reference to the given string and assigns it to the InternalSerialNumber field.
func (o *ControllersResourceInner) SetInternalSerialNumber(v string) {
	o.InternalSerialNumber = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ControllersResourceInner) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetIpGateway returns the IpGateway field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIpGateway() string {
	if o == nil || IsNil(o.IpGateway) {
		var ret string
		return ret
	}
	return *o.IpGateway
}

// GetIpGatewayOk returns a tuple with the IpGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIpGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.IpGateway) {
		return nil, false
	}
	return o.IpGateway, true
}

// HasIpGateway returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIpGateway() bool {
	if o != nil && !IsNil(o.IpGateway) {
		return true
	}

	return false
}

// SetIpGateway gets a reference to the given string and assigns it to the IpGateway field.
func (o *ControllersResourceInner) SetIpGateway(v string) {
	o.IpGateway = &v
}

// GetIpSubnetMask returns the IpSubnetMask field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIpSubnetMask() string {
	if o == nil || IsNil(o.IpSubnetMask) {
		var ret string
		return ret
	}
	return *o.IpSubnetMask
}

// GetIpSubnetMaskOk returns a tuple with the IpSubnetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIpSubnetMaskOk() (*string, bool) {
	if o == nil || IsNil(o.IpSubnetMask) {
		return nil, false
	}
	return o.IpSubnetMask, true
}

// HasIpSubnetMask returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIpSubnetMask() bool {
	if o != nil && !IsNil(o.IpSubnetMask) {
		return true
	}

	return false
}

// SetIpSubnetMask gets a reference to the given string and assigns it to the IpSubnetMask field.
func (o *ControllersResourceInner) SetIpSubnetMask(v string) {
	o.IpSubnetMask = &v
}

// GetIp6AutoAddress returns the Ip6AutoAddress field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp6AutoAddress() string {
	if o == nil || IsNil(o.Ip6AutoAddress) {
		var ret string
		return ret
	}
	return *o.Ip6AutoAddress
}

// GetIp6AutoAddressOk returns a tuple with the Ip6AutoAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp6AutoAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ip6AutoAddress) {
		return nil, false
	}
	return o.Ip6AutoAddress, true
}

// HasIp6AutoAddress returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp6AutoAddress() bool {
	if o != nil && !IsNil(o.Ip6AutoAddress) {
		return true
	}

	return false
}

// SetIp6AutoAddress gets a reference to the given string and assigns it to the Ip6AutoAddress field.
func (o *ControllersResourceInner) SetIp6AutoAddress(v string) {
	o.Ip6AutoAddress = &v
}

// GetIp6AutoAddressSource returns the Ip6AutoAddressSource field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp6AutoAddressSource() string {
	if o == nil || IsNil(o.Ip6AutoAddressSource) {
		var ret string
		return ret
	}
	return *o.Ip6AutoAddressSource
}

// GetIp6AutoAddressSourceOk returns a tuple with the Ip6AutoAddressSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp6AutoAddressSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Ip6AutoAddressSource) {
		return nil, false
	}
	return o.Ip6AutoAddressSource, true
}

// HasIp6AutoAddressSource returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp6AutoAddressSource() bool {
	if o != nil && !IsNil(o.Ip6AutoAddressSource) {
		return true
	}

	return false
}

// SetIp6AutoAddressSource gets a reference to the given string and assigns it to the Ip6AutoAddressSource field.
func (o *ControllersResourceInner) SetIp6AutoAddressSource(v string) {
	o.Ip6AutoAddressSource = &v
}

// GetIp6AutoAddressSourceNumeric returns the Ip6AutoAddressSourceNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetIp6AutoAddressSourceNumeric() int64 {
	if o == nil || IsNil(o.Ip6AutoAddressSourceNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetIp6AutoAddressSourceNumeric() int32 {
	if o == nil || IsNil(o.Ip6AutoAddressSourceNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.Ip6AutoAddressSourceNumeric
}

// GetIp6AutoAddressSourceNumericOk returns a tuple with the Ip6AutoAddressSourceNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetIp6AutoAddressSourceNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetIp6AutoAddressSourceNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.Ip6AutoAddressSourceNumeric) {
		return nil, false
	}
	return o.Ip6AutoAddressSourceNumeric, true
}

// HasIp6AutoAddressSourceNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp6AutoAddressSourceNumeric() bool {
	if o != nil && !IsNil(o.Ip6AutoAddressSourceNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetIp6AutoAddressSourceNumeric gets a reference to the given int64 and assigns it to the Ip6AutoAddressSourceNumeric field.
func (o *ControllersResourceInner) SetIp6AutoAddressSourceNumeric(v int64) {
=======
// SetIp6AutoAddressSourceNumeric gets a reference to the given int32 and assigns it to the Ip6AutoAddressSourceNumeric field.
func (o *ControllersResourceInner) SetIp6AutoAddressSourceNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.Ip6AutoAddressSourceNumeric = &v
}

// GetIp6AutoGateway returns the Ip6AutoGateway field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp6AutoGateway() string {
	if o == nil || IsNil(o.Ip6AutoGateway) {
		var ret string
		return ret
	}
	return *o.Ip6AutoGateway
}

// GetIp6AutoGatewayOk returns a tuple with the Ip6AutoGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp6AutoGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Ip6AutoGateway) {
		return nil, false
	}
	return o.Ip6AutoGateway, true
}

// HasIp6AutoGateway returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp6AutoGateway() bool {
	if o != nil && !IsNil(o.Ip6AutoGateway) {
		return true
	}

	return false
}

// SetIp6AutoGateway gets a reference to the given string and assigns it to the Ip6AutoGateway field.
func (o *ControllersResourceInner) SetIp6AutoGateway(v string) {
	o.Ip6AutoGateway = &v
}

// GetIp6LinkLocalAddress returns the Ip6LinkLocalAddress field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp6LinkLocalAddress() string {
	if o == nil || IsNil(o.Ip6LinkLocalAddress) {
		var ret string
		return ret
	}
	return *o.Ip6LinkLocalAddress
}

// GetIp6LinkLocalAddressOk returns a tuple with the Ip6LinkLocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp6LinkLocalAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ip6LinkLocalAddress) {
		return nil, false
	}
	return o.Ip6LinkLocalAddress, true
}

// HasIp6LinkLocalAddress returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp6LinkLocalAddress() bool {
	if o != nil && !IsNil(o.Ip6LinkLocalAddress) {
		return true
	}

	return false
}

// SetIp6LinkLocalAddress gets a reference to the given string and assigns it to the Ip6LinkLocalAddress field.
func (o *ControllersResourceInner) SetIp6LinkLocalAddress(v string) {
	o.Ip6LinkLocalAddress = &v
}

// GetIp6LinkLocalGateway returns the Ip6LinkLocalGateway field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp6LinkLocalGateway() string {
	if o == nil || IsNil(o.Ip6LinkLocalGateway) {
		var ret string
		return ret
	}
	return *o.Ip6LinkLocalGateway
}

// GetIp6LinkLocalGatewayOk returns a tuple with the Ip6LinkLocalGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp6LinkLocalGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Ip6LinkLocalGateway) {
		return nil, false
	}
	return o.Ip6LinkLocalGateway, true
}

// HasIp6LinkLocalGateway returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp6LinkLocalGateway() bool {
	if o != nil && !IsNil(o.Ip6LinkLocalGateway) {
		return true
	}

	return false
}

// SetIp6LinkLocalGateway gets a reference to the given string and assigns it to the Ip6LinkLocalGateway field.
func (o *ControllersResourceInner) SetIp6LinkLocalGateway(v string) {
	o.Ip6LinkLocalGateway = &v
}

// GetIp61Address returns the Ip61Address field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp61Address() string {
	if o == nil || IsNil(o.Ip61Address) {
		var ret string
		return ret
	}
	return *o.Ip61Address
}

// GetIp61AddressOk returns a tuple with the Ip61Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp61AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ip61Address) {
		return nil, false
	}
	return o.Ip61Address, true
}

// HasIp61Address returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp61Address() bool {
	if o != nil && !IsNil(o.Ip61Address) {
		return true
	}

	return false
}

// SetIp61Address gets a reference to the given string and assigns it to the Ip61Address field.
func (o *ControllersResourceInner) SetIp61Address(v string) {
	o.Ip61Address = &v
}

// GetIp61Gateway returns the Ip61Gateway field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp61Gateway() string {
	if o == nil || IsNil(o.Ip61Gateway) {
		var ret string
		return ret
	}
	return *o.Ip61Gateway
}

// GetIp61GatewayOk returns a tuple with the Ip61Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp61GatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Ip61Gateway) {
		return nil, false
	}
	return o.Ip61Gateway, true
}

// HasIp61Gateway returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp61Gateway() bool {
	if o != nil && !IsNil(o.Ip61Gateway) {
		return true
	}

	return false
}

// SetIp61Gateway gets a reference to the given string and assigns it to the Ip61Gateway field.
func (o *ControllersResourceInner) SetIp61Gateway(v string) {
	o.Ip61Gateway = &v
}

// GetIp62Address returns the Ip62Address field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp62Address() string {
	if o == nil || IsNil(o.Ip62Address) {
		var ret string
		return ret
	}
	return *o.Ip62Address
}

// GetIp62AddressOk returns a tuple with the Ip62Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp62AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ip62Address) {
		return nil, false
	}
	return o.Ip62Address, true
}

// HasIp62Address returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp62Address() bool {
	if o != nil && !IsNil(o.Ip62Address) {
		return true
	}

	return false
}

// SetIp62Address gets a reference to the given string and assigns it to the Ip62Address field.
func (o *ControllersResourceInner) SetIp62Address(v string) {
	o.Ip62Address = &v
}

// GetIp62Gateway returns the Ip62Gateway field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp62Gateway() string {
	if o == nil || IsNil(o.Ip62Gateway) {
		var ret string
		return ret
	}
	return *o.Ip62Gateway
}

// GetIp62GatewayOk returns a tuple with the Ip62Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp62GatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Ip62Gateway) {
		return nil, false
	}
	return o.Ip62Gateway, true
}

// HasIp62Gateway returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp62Gateway() bool {
	if o != nil && !IsNil(o.Ip62Gateway) {
		return true
	}

	return false
}

// SetIp62Gateway gets a reference to the given string and assigns it to the Ip62Gateway field.
func (o *ControllersResourceInner) SetIp62Gateway(v string) {
	o.Ip62Gateway = &v
}

// GetIp63Address returns the Ip63Address field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp63Address() string {
	if o == nil || IsNil(o.Ip63Address) {
		var ret string
		return ret
	}
	return *o.Ip63Address
}

// GetIp63AddressOk returns a tuple with the Ip63Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp63AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ip63Address) {
		return nil, false
	}
	return o.Ip63Address, true
}

// HasIp63Address returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp63Address() bool {
	if o != nil && !IsNil(o.Ip63Address) {
		return true
	}

	return false
}

// SetIp63Address gets a reference to the given string and assigns it to the Ip63Address field.
func (o *ControllersResourceInner) SetIp63Address(v string) {
	o.Ip63Address = &v
}

// GetIp63Gateway returns the Ip63Gateway field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp63Gateway() string {
	if o == nil || IsNil(o.Ip63Gateway) {
		var ret string
		return ret
	}
	return *o.Ip63Gateway
}

// GetIp63GatewayOk returns a tuple with the Ip63Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp63GatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Ip63Gateway) {
		return nil, false
	}
	return o.Ip63Gateway, true
}

// HasIp63Gateway returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp63Gateway() bool {
	if o != nil && !IsNil(o.Ip63Gateway) {
		return true
	}

	return false
}

// SetIp63Gateway gets a reference to the given string and assigns it to the Ip63Gateway field.
func (o *ControllersResourceInner) SetIp63Gateway(v string) {
	o.Ip63Gateway = &v
}

// GetIp64Address returns the Ip64Address field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp64Address() string {
	if o == nil || IsNil(o.Ip64Address) {
		var ret string
		return ret
	}
	return *o.Ip64Address
}

// GetIp64AddressOk returns a tuple with the Ip64Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp64AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ip64Address) {
		return nil, false
	}
	return o.Ip64Address, true
}

// HasIp64Address returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp64Address() bool {
	if o != nil && !IsNil(o.Ip64Address) {
		return true
	}

	return false
}

// SetIp64Address gets a reference to the given string and assigns it to the Ip64Address field.
func (o *ControllersResourceInner) SetIp64Address(v string) {
	o.Ip64Address = &v
}

// GetIp64Gateway returns the Ip64Gateway field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetIp64Gateway() string {
	if o == nil || IsNil(o.Ip64Gateway) {
		var ret string
		return ret
	}
	return *o.Ip64Gateway
}

// GetIp64GatewayOk returns a tuple with the Ip64Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetIp64GatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Ip64Gateway) {
		return nil, false
	}
	return o.Ip64Gateway, true
}

// HasIp64Gateway returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasIp64Gateway() bool {
	if o != nil && !IsNil(o.Ip64Gateway) {
		return true
	}

	return false
}

// SetIp64Gateway gets a reference to the given string and assigns it to the Ip64Gateway field.
func (o *ControllersResourceInner) SetIp64Gateway(v string) {
	o.Ip64Gateway = &v
}

// GetLocatorLed returns the LocatorLed field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetLocatorLed() string {
	if o == nil || IsNil(o.LocatorLed) {
		var ret string
		return ret
	}
	return *o.LocatorLed
}

// GetLocatorLedOk returns a tuple with the LocatorLed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetLocatorLedOk() (*string, bool) {
	if o == nil || IsNil(o.LocatorLed) {
		return nil, false
	}
	return o.LocatorLed, true
}

// HasLocatorLed returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasLocatorLed() bool {
	if o != nil && !IsNil(o.LocatorLed) {
		return true
	}

	return false
}

// SetLocatorLed gets a reference to the given string and assigns it to the LocatorLed field.
func (o *ControllersResourceInner) SetLocatorLed(v string) {
	o.LocatorLed = &v
}

// GetLocatorLedNumeric returns the LocatorLedNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetLocatorLedNumeric() int64 {
	if o == nil || IsNil(o.LocatorLedNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetLocatorLedNumeric() int32 {
	if o == nil || IsNil(o.LocatorLedNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.LocatorLedNumeric
}

// GetLocatorLedNumericOk returns a tuple with the LocatorLedNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetLocatorLedNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetLocatorLedNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.LocatorLedNumeric) {
		return nil, false
	}
	return o.LocatorLedNumeric, true
}

// HasLocatorLedNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasLocatorLedNumeric() bool {
	if o != nil && !IsNil(o.LocatorLedNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetLocatorLedNumeric gets a reference to the given int64 and assigns it to the LocatorLedNumeric field.
func (o *ControllersResourceInner) SetLocatorLedNumeric(v int64) {
=======
// SetLocatorLedNumeric gets a reference to the given int32 and assigns it to the LocatorLedNumeric field.
func (o *ControllersResourceInner) SetLocatorLedNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.LocatorLedNumeric = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *ControllersResourceInner) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetMfgDate returns the MfgDate field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetMfgDate() string {
	if o == nil || IsNil(o.MfgDate) {
		var ret string
		return ret
	}
	return *o.MfgDate
}

// GetMfgDateOk returns a tuple with the MfgDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetMfgDateOk() (*string, bool) {
	if o == nil || IsNil(o.MfgDate) {
		return nil, false
	}
	return o.MfgDate, true
}

// HasMfgDate returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasMfgDate() bool {
	if o != nil && !IsNil(o.MfgDate) {
		return true
	}

	return false
}

// SetMfgDate gets a reference to the given string and assigns it to the MfgDate field.
func (o *ControllersResourceInner) SetMfgDate(v string) {
	o.MfgDate = &v
}

// GetMfgDateNumeric returns the MfgDateNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetMfgDateNumeric() int64 {
	if o == nil || IsNil(o.MfgDateNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetMfgDateNumeric() int32 {
	if o == nil || IsNil(o.MfgDateNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.MfgDateNumeric
}

// GetMfgDateNumericOk returns a tuple with the MfgDateNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetMfgDateNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetMfgDateNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.MfgDateNumeric) {
		return nil, false
	}
	return o.MfgDateNumeric, true
}

// HasMfgDateNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasMfgDateNumeric() bool {
	if o != nil && !IsNil(o.MfgDateNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetMfgDateNumeric gets a reference to the given int64 and assigns it to the MfgDateNumeric field.
func (o *ControllersResourceInner) SetMfgDateNumeric(v int64) {
=======
// SetMfgDateNumeric gets a reference to the given int32 and assigns it to the MfgDateNumeric field.
func (o *ControllersResourceInner) SetMfgDateNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.MfgDateNumeric = &v
}

// GetMfgLocation returns the MfgLocation field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetMfgLocation() string {
	if o == nil || IsNil(o.MfgLocation) {
		var ret string
		return ret
	}
	return *o.MfgLocation
}

// GetMfgLocationOk returns a tuple with the MfgLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetMfgLocationOk() (*string, bool) {
	if o == nil || IsNil(o.MfgLocation) {
		return nil, false
	}
	return o.MfgLocation, true
}

// HasMfgLocation returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasMfgLocation() bool {
	if o != nil && !IsNil(o.MfgLocation) {
		return true
	}

	return false
}

// SetMfgLocation gets a reference to the given string and assigns it to the MfgLocation field.
func (o *ControllersResourceInner) SetMfgLocation(v string) {
	o.MfgLocation = &v
}

// GetMfgVendorId returns the MfgVendorId field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetMfgVendorId() string {
	if o == nil || IsNil(o.MfgVendorId) {
		var ret string
		return ret
	}
	return *o.MfgVendorId
}

// GetMfgVendorIdOk returns a tuple with the MfgVendorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetMfgVendorIdOk() (*string, bool) {
	if o == nil || IsNil(o.MfgVendorId) {
		return nil, false
	}
	return o.MfgVendorId, true
}

// HasMfgVendorId returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasMfgVendorId() bool {
	if o != nil && !IsNil(o.MfgVendorId) {
		return true
	}

	return false
}

// SetMfgVendorId gets a reference to the given string and assigns it to the MfgVendorId field.
func (o *ControllersResourceInner) SetMfgVendorId(v string) {
	o.MfgVendorId = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ControllersResourceInner) SetModel(v string) {
	o.Model = &v
}

// GetMulticore returns the Multicore field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetMulticore() string {
	if o == nil || IsNil(o.Multicore) {
		var ret string
		return ret
	}
	return *o.Multicore
}

// GetMulticoreOk returns a tuple with the Multicore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetMulticoreOk() (*string, bool) {
	if o == nil || IsNil(o.Multicore) {
		return nil, false
	}
	return o.Multicore, true
}

// HasMulticore returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasMulticore() bool {
	if o != nil && !IsNil(o.Multicore) {
		return true
	}

	return false
}

// SetMulticore gets a reference to the given string and assigns it to the Multicore field.
func (o *ControllersResourceInner) SetMulticore(v string) {
	o.Multicore = &v
}

// GetMulticoreNumeric returns the MulticoreNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetMulticoreNumeric() int64 {
	if o == nil || IsNil(o.MulticoreNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetMulticoreNumeric() int32 {
	if o == nil || IsNil(o.MulticoreNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.MulticoreNumeric
}

// GetMulticoreNumericOk returns a tuple with the MulticoreNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetMulticoreNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetMulticoreNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.MulticoreNumeric) {
		return nil, false
	}
	return o.MulticoreNumeric, true
}

// HasMulticoreNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasMulticoreNumeric() bool {
	if o != nil && !IsNil(o.MulticoreNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetMulticoreNumeric gets a reference to the given int64 and assigns it to the MulticoreNumeric field.
func (o *ControllersResourceInner) SetMulticoreNumeric(v int64) {
=======
// SetMulticoreNumeric gets a reference to the given int32 and assigns it to the MulticoreNumeric field.
func (o *ControllersResourceInner) SetMulticoreNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.MulticoreNumeric = &v
}

// GetNodeWwn returns the NodeWwn field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetNodeWwn() string {
	if o == nil || IsNil(o.NodeWwn) {
		var ret string
		return ret
	}
	return *o.NodeWwn
}

// GetNodeWwnOk returns a tuple with the NodeWwn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetNodeWwnOk() (*string, bool) {
	if o == nil || IsNil(o.NodeWwn) {
		return nil, false
	}
	return o.NodeWwn, true
}

// HasNodeWwn returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasNodeWwn() bool {
	if o != nil && !IsNil(o.NodeWwn) {
		return true
	}

	return false
}

// SetNodeWwn gets a reference to the given string and assigns it to the NodeWwn field.
func (o *ControllersResourceInner) SetNodeWwn(v string) {
	o.NodeWwn = &v
}

// GetNumberOfStoragePools returns the NumberOfStoragePools field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetNumberOfStoragePools() int64 {
	if o == nil || IsNil(o.NumberOfStoragePools) {
		var ret int64
=======
func (o *ControllersResourceInner) GetNumberOfStoragePools() int32 {
	if o == nil || IsNil(o.NumberOfStoragePools) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.NumberOfStoragePools
}

// GetNumberOfStoragePoolsOk returns a tuple with the NumberOfStoragePools field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetNumberOfStoragePoolsOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetNumberOfStoragePoolsOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.NumberOfStoragePools) {
		return nil, false
	}
	return o.NumberOfStoragePools, true
}

// HasNumberOfStoragePools returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasNumberOfStoragePools() bool {
	if o != nil && !IsNil(o.NumberOfStoragePools) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetNumberOfStoragePools gets a reference to the given int64 and assigns it to the NumberOfStoragePools field.
func (o *ControllersResourceInner) SetNumberOfStoragePools(v int64) {
=======
// SetNumberOfStoragePools gets a reference to the given int32 and assigns it to the NumberOfStoragePools field.
func (o *ControllersResourceInner) SetNumberOfStoragePools(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.NumberOfStoragePools = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetPartNumber() string {
	if o == nil || IsNil(o.PartNumber) {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *ControllersResourceInner) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetPhyIsolation returns the PhyIsolation field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetPhyIsolation() string {
	if o == nil || IsNil(o.PhyIsolation) {
		var ret string
		return ret
	}
	return *o.PhyIsolation
}

// GetPhyIsolationOk returns a tuple with the PhyIsolation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetPhyIsolationOk() (*string, bool) {
	if o == nil || IsNil(o.PhyIsolation) {
		return nil, false
	}
	return o.PhyIsolation, true
}

// HasPhyIsolation returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasPhyIsolation() bool {
	if o != nil && !IsNil(o.PhyIsolation) {
		return true
	}

	return false
}

// SetPhyIsolation gets a reference to the given string and assigns it to the PhyIsolation field.
func (o *ControllersResourceInner) SetPhyIsolation(v string) {
	o.PhyIsolation = &v
}

// GetPhyIsolationNumeric returns the PhyIsolationNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetPhyIsolationNumeric() int64 {
	if o == nil || IsNil(o.PhyIsolationNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetPhyIsolationNumeric() int32 {
	if o == nil || IsNil(o.PhyIsolationNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.PhyIsolationNumeric
}

// GetPhyIsolationNumericOk returns a tuple with the PhyIsolationNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetPhyIsolationNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetPhyIsolationNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.PhyIsolationNumeric) {
		return nil, false
	}
	return o.PhyIsolationNumeric, true
}

// HasPhyIsolationNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasPhyIsolationNumeric() bool {
	if o != nil && !IsNil(o.PhyIsolationNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPhyIsolationNumeric gets a reference to the given int64 and assigns it to the PhyIsolationNumeric field.
func (o *ControllersResourceInner) SetPhyIsolationNumeric(v int64) {
=======
// SetPhyIsolationNumeric gets a reference to the given int32 and assigns it to the PhyIsolationNumeric field.
func (o *ControllersResourceInner) SetPhyIsolationNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.PhyIsolationNumeric = &v
}

// GetPlatformType returns the PlatformType field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetPlatformType() string {
	if o == nil || IsNil(o.PlatformType) {
		var ret string
		return ret
	}
	return *o.PlatformType
}

// GetPlatformTypeOk returns a tuple with the PlatformType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetPlatformTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PlatformType) {
		return nil, false
	}
	return o.PlatformType, true
}

// HasPlatformType returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasPlatformType() bool {
	if o != nil && !IsNil(o.PlatformType) {
		return true
	}

	return false
}

// SetPlatformType gets a reference to the given string and assigns it to the PlatformType field.
func (o *ControllersResourceInner) SetPlatformType(v string) {
	o.PlatformType = &v
}

// GetPlatformTypeNumeric returns the PlatformTypeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetPlatformTypeNumeric() int64 {
	if o == nil || IsNil(o.PlatformTypeNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetPlatformTypeNumeric() int32 {
	if o == nil || IsNil(o.PlatformTypeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.PlatformTypeNumeric
}

// GetPlatformTypeNumericOk returns a tuple with the PlatformTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetPlatformTypeNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetPlatformTypeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.PlatformTypeNumeric) {
		return nil, false
	}
	return o.PlatformTypeNumeric, true
}

// HasPlatformTypeNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasPlatformTypeNumeric() bool {
	if o != nil && !IsNil(o.PlatformTypeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPlatformTypeNumeric gets a reference to the given int64 and assigns it to the PlatformTypeNumeric field.
func (o *ControllersResourceInner) SetPlatformTypeNumeric(v int64) {
=======
// SetPlatformTypeNumeric gets a reference to the given int32 and assigns it to the PlatformTypeNumeric field.
func (o *ControllersResourceInner) SetPlatformTypeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.PlatformTypeNumeric = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetPosition() string {
	if o == nil || IsNil(o.Position) {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetPositionOk() (*string, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *ControllersResourceInner) SetPosition(v string) {
	o.Position = &v
}

// GetPositionNumeric returns the PositionNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetPositionNumeric() int64 {
	if o == nil || IsNil(o.PositionNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetPositionNumeric() int32 {
	if o == nil || IsNil(o.PositionNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.PositionNumeric
}

// GetPositionNumericOk returns a tuple with the PositionNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetPositionNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetPositionNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.PositionNumeric) {
		return nil, false
	}
	return o.PositionNumeric, true
}

// HasPositionNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasPositionNumeric() bool {
	if o != nil && !IsNil(o.PositionNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPositionNumeric gets a reference to the given int64 and assigns it to the PositionNumeric field.
func (o *ControllersResourceInner) SetPositionNumeric(v int64) {
=======
// SetPositionNumeric gets a reference to the given int32 and assigns it to the PositionNumeric field.
func (o *ControllersResourceInner) SetPositionNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.PositionNumeric = &v
}

// GetRedundancyMode returns the RedundancyMode field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetRedundancyMode() string {
	if o == nil || IsNil(o.RedundancyMode) {
		var ret string
		return ret
	}
	return *o.RedundancyMode
}

// GetRedundancyModeOk returns a tuple with the RedundancyMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetRedundancyModeOk() (*string, bool) {
	if o == nil || IsNil(o.RedundancyMode) {
		return nil, false
	}
	return o.RedundancyMode, true
}

// HasRedundancyMode returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasRedundancyMode() bool {
	if o != nil && !IsNil(o.RedundancyMode) {
		return true
	}

	return false
}

// SetRedundancyMode gets a reference to the given string and assigns it to the RedundancyMode field.
func (o *ControllersResourceInner) SetRedundancyMode(v string) {
	o.RedundancyMode = &v
}

// GetRedundancyModeNumeric returns the RedundancyModeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetRedundancyModeNumeric() int64 {
	if o == nil || IsNil(o.RedundancyModeNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetRedundancyModeNumeric() int32 {
	if o == nil || IsNil(o.RedundancyModeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.RedundancyModeNumeric
}

// GetRedundancyModeNumericOk returns a tuple with the RedundancyModeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetRedundancyModeNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetRedundancyModeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.RedundancyModeNumeric) {
		return nil, false
	}
	return o.RedundancyModeNumeric, true
}

// HasRedundancyModeNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasRedundancyModeNumeric() bool {
	if o != nil && !IsNil(o.RedundancyModeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRedundancyModeNumeric gets a reference to the given int64 and assigns it to the RedundancyModeNumeric field.
func (o *ControllersResourceInner) SetRedundancyModeNumeric(v int64) {
=======
// SetRedundancyModeNumeric gets a reference to the given int32 and assigns it to the RedundancyModeNumeric field.
func (o *ControllersResourceInner) SetRedundancyModeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.RedundancyModeNumeric = &v
}

// GetRedundancyStatus returns the RedundancyStatus field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetRedundancyStatus() string {
	if o == nil || IsNil(o.RedundancyStatus) {
		var ret string
		return ret
	}
	return *o.RedundancyStatus
}

// GetRedundancyStatusOk returns a tuple with the RedundancyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetRedundancyStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RedundancyStatus) {
		return nil, false
	}
	return o.RedundancyStatus, true
}

// HasRedundancyStatus returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasRedundancyStatus() bool {
	if o != nil && !IsNil(o.RedundancyStatus) {
		return true
	}

	return false
}

// SetRedundancyStatus gets a reference to the given string and assigns it to the RedundancyStatus field.
func (o *ControllersResourceInner) SetRedundancyStatus(v string) {
	o.RedundancyStatus = &v
}

// GetRedundancyStatusNumeric returns the RedundancyStatusNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetRedundancyStatusNumeric() int64 {
	if o == nil || IsNil(o.RedundancyStatusNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetRedundancyStatusNumeric() int32 {
	if o == nil || IsNil(o.RedundancyStatusNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.RedundancyStatusNumeric
}

// GetRedundancyStatusNumericOk returns a tuple with the RedundancyStatusNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetRedundancyStatusNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetRedundancyStatusNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.RedundancyStatusNumeric) {
		return nil, false
	}
	return o.RedundancyStatusNumeric, true
}

// HasRedundancyStatusNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasRedundancyStatusNumeric() bool {
	if o != nil && !IsNil(o.RedundancyStatusNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRedundancyStatusNumeric gets a reference to the given int64 and assigns it to the RedundancyStatusNumeric field.
func (o *ControllersResourceInner) SetRedundancyStatusNumeric(v int64) {
=======
// SetRedundancyStatusNumeric gets a reference to the given int32 and assigns it to the RedundancyStatusNumeric field.
func (o *ControllersResourceInner) SetRedundancyStatusNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.RedundancyStatusNumeric = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *ControllersResourceInner) SetRevision(v string) {
	o.Revision = &v
}

// GetRotation returns the Rotation field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetRotation() string {
	if o == nil || IsNil(o.Rotation) {
		var ret string
		return ret
	}
	return *o.Rotation
}

// GetRotationOk returns a tuple with the Rotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetRotationOk() (*string, bool) {
	if o == nil || IsNil(o.Rotation) {
		return nil, false
	}
	return o.Rotation, true
}

// HasRotation returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasRotation() bool {
	if o != nil && !IsNil(o.Rotation) {
		return true
	}

	return false
}

// SetRotation gets a reference to the given string and assigns it to the Rotation field.
func (o *ControllersResourceInner) SetRotation(v string) {
	o.Rotation = &v
}

// GetRotationNumeric returns the RotationNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetRotationNumeric() int64 {
	if o == nil || IsNil(o.RotationNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetRotationNumeric() int32 {
	if o == nil || IsNil(o.RotationNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.RotationNumeric
}

// GetRotationNumericOk returns a tuple with the RotationNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetRotationNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetRotationNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.RotationNumeric) {
		return nil, false
	}
	return o.RotationNumeric, true
}

// HasRotationNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasRotationNumeric() bool {
	if o != nil && !IsNil(o.RotationNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRotationNumeric gets a reference to the given int64 and assigns it to the RotationNumeric field.
func (o *ControllersResourceInner) SetRotationNumeric(v int64) {
=======
// SetRotationNumeric gets a reference to the given int32 and assigns it to the RotationNumeric field.
func (o *ControllersResourceInner) SetRotationNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.RotationNumeric = &v
}

// GetScCpuSpeed returns the ScCpuSpeed field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetScCpuSpeed() int64 {
	if o == nil || IsNil(o.ScCpuSpeed) {
		var ret int64
=======
func (o *ControllersResourceInner) GetScCpuSpeed() int32 {
	if o == nil || IsNil(o.ScCpuSpeed) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.ScCpuSpeed
}

// GetScCpuSpeedOk returns a tuple with the ScCpuSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetScCpuSpeedOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetScCpuSpeedOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.ScCpuSpeed) {
		return nil, false
	}
	return o.ScCpuSpeed, true
}

// HasScCpuSpeed returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasScCpuSpeed() bool {
	if o != nil && !IsNil(o.ScCpuSpeed) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetScCpuSpeed gets a reference to the given int64 and assigns it to the ScCpuSpeed field.
func (o *ControllersResourceInner) SetScCpuSpeed(v int64) {
=======
// SetScCpuSpeed gets a reference to the given int32 and assigns it to the ScCpuSpeed field.
func (o *ControllersResourceInner) SetScCpuSpeed(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.ScCpuSpeed = &v
}

// GetScCpuType returns the ScCpuType field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetScCpuType() string {
	if o == nil || IsNil(o.ScCpuType) {
		var ret string
		return ret
	}
	return *o.ScCpuType
}

// GetScCpuTypeOk returns a tuple with the ScCpuType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetScCpuTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ScCpuType) {
		return nil, false
	}
	return o.ScCpuType, true
}

// HasScCpuType returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasScCpuType() bool {
	if o != nil && !IsNil(o.ScCpuType) {
		return true
	}

	return false
}

// SetScCpuType gets a reference to the given string and assigns it to the ScCpuType field.
func (o *ControllersResourceInner) SetScCpuType(v string) {
	o.ScCpuType = &v
}

// GetScFw returns the ScFw field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetScFw() string {
	if o == nil || IsNil(o.ScFw) {
		var ret string
		return ret
	}
	return *o.ScFw
}

// GetScFwOk returns a tuple with the ScFw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetScFwOk() (*string, bool) {
	if o == nil || IsNil(o.ScFw) {
		return nil, false
	}
	return o.ScFw, true
}

// HasScFw returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasScFw() bool {
	if o != nil && !IsNil(o.ScFw) {
		return true
	}

	return false
}

// SetScFw gets a reference to the given string and assigns it to the ScFw field.
func (o *ControllersResourceInner) SetScFw(v string) {
	o.ScFw = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *ControllersResourceInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSlaacIp returns the SlaacIp field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetSlaacIp() string {
	if o == nil || IsNil(o.SlaacIp) {
		var ret string
		return ret
	}
	return *o.SlaacIp
}

// GetSlaacIpOk returns a tuple with the SlaacIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetSlaacIpOk() (*string, bool) {
	if o == nil || IsNil(o.SlaacIp) {
		return nil, false
	}
	return o.SlaacIp, true
}

// HasSlaacIp returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasSlaacIp() bool {
	if o != nil && !IsNil(o.SlaacIp) {
		return true
	}

	return false
}

// SetSlaacIp gets a reference to the given string and assigns it to the SlaacIp field.
func (o *ControllersResourceInner) SetSlaacIp(v string) {
	o.SlaacIp = &v
}

// GetSsdAltPathIoCount returns the SsdAltPathIoCount field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetSsdAltPathIoCount() int64 {
	if o == nil || IsNil(o.SsdAltPathIoCount) {
		var ret int64
=======
func (o *ControllersResourceInner) GetSsdAltPathIoCount() int32 {
	if o == nil || IsNil(o.SsdAltPathIoCount) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SsdAltPathIoCount
}

// GetSsdAltPathIoCountOk returns a tuple with the SsdAltPathIoCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetSsdAltPathIoCountOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetSsdAltPathIoCountOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SsdAltPathIoCount) {
		return nil, false
	}
	return o.SsdAltPathIoCount, true
}

// HasSsdAltPathIoCount returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasSsdAltPathIoCount() bool {
	if o != nil && !IsNil(o.SsdAltPathIoCount) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSsdAltPathIoCount gets a reference to the given int64 and assigns it to the SsdAltPathIoCount field.
func (o *ControllersResourceInner) SetSsdAltPathIoCount(v int64) {
=======
// SetSsdAltPathIoCount gets a reference to the given int32 and assigns it to the SsdAltPathIoCount field.
func (o *ControllersResourceInner) SetSsdAltPathIoCount(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SsdAltPathIoCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ControllersResourceInner) SetStatus(v string) {
	o.Status = &v
}

// GetStatusNumeric returns the StatusNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetStatusNumeric() int64 {
	if o == nil || IsNil(o.StatusNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetStatusNumeric() int32 {
	if o == nil || IsNil(o.StatusNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.StatusNumeric
}

// GetStatusNumericOk returns a tuple with the StatusNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetStatusNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetStatusNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.StatusNumeric) {
		return nil, false
	}
	return o.StatusNumeric, true
}

// HasStatusNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasStatusNumeric() bool {
	if o != nil && !IsNil(o.StatusNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetStatusNumeric gets a reference to the given int64 and assigns it to the StatusNumeric field.
func (o *ControllersResourceInner) SetStatusNumeric(v int64) {
=======
// SetStatusNumeric gets a reference to the given int32 and assigns it to the StatusNumeric field.
func (o *ControllersResourceInner) SetStatusNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.StatusNumeric = &v
}

// GetSystemMemorySize returns the SystemMemorySize field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetSystemMemorySize() int64 {
	if o == nil || IsNil(o.SystemMemorySize) {
		var ret int64
=======
func (o *ControllersResourceInner) GetSystemMemorySize() int32 {
	if o == nil || IsNil(o.SystemMemorySize) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SystemMemorySize
}

// GetSystemMemorySizeOk returns a tuple with the SystemMemorySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetSystemMemorySizeOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetSystemMemorySizeOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SystemMemorySize) {
		return nil, false
	}
	return o.SystemMemorySize, true
}

// HasSystemMemorySize returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasSystemMemorySize() bool {
	if o != nil && !IsNil(o.SystemMemorySize) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSystemMemorySize gets a reference to the given int64 and assigns it to the SystemMemorySize field.
func (o *ControllersResourceInner) SetSystemMemorySize(v int64) {
=======
// SetSystemMemorySize gets a reference to the given int32 and assigns it to the SystemMemorySize field.
func (o *ControllersResourceInner) SetSystemMemorySize(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SystemMemorySize = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ControllersResourceInner) SetUrl(v string) {
	o.Url = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *ControllersResourceInner) SetVendor(v string) {
	o.Vendor = &v
}

// GetVirtualDisks returns the VirtualDisks field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetVirtualDisks() int64 {
	if o == nil || IsNil(o.VirtualDisks) {
		var ret int64
=======
func (o *ControllersResourceInner) GetVirtualDisks() int32 {
	if o == nil || IsNil(o.VirtualDisks) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.VirtualDisks
}

// GetVirtualDisksOk returns a tuple with the VirtualDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetVirtualDisksOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetVirtualDisksOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.VirtualDisks) {
		return nil, false
	}
	return o.VirtualDisks, true
}

// HasVirtualDisks returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasVirtualDisks() bool {
	if o != nil && !IsNil(o.VirtualDisks) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetVirtualDisks gets a reference to the given int64 and assigns it to the VirtualDisks field.
func (o *ControllersResourceInner) SetVirtualDisks(v int64) {
=======
// SetVirtualDisks gets a reference to the given int32 and assigns it to the VirtualDisks field.
func (o *ControllersResourceInner) SetVirtualDisks(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.VirtualDisks = &v
}

// GetWritePolicy returns the WritePolicy field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetWritePolicy() string {
	if o == nil || IsNil(o.WritePolicy) {
		var ret string
		return ret
	}
	return *o.WritePolicy
}

// GetWritePolicyOk returns a tuple with the WritePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetWritePolicyOk() (*string, bool) {
	if o == nil || IsNil(o.WritePolicy) {
		return nil, false
	}
	return o.WritePolicy, true
}

// HasWritePolicy returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasWritePolicy() bool {
	if o != nil && !IsNil(o.WritePolicy) {
		return true
	}

	return false
}

// SetWritePolicy gets a reference to the given string and assigns it to the WritePolicy field.
func (o *ControllersResourceInner) SetWritePolicy(v string) {
	o.WritePolicy = &v
}

// GetWritePolicyNumeric returns the WritePolicyNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetWritePolicyNumeric() int64 {
	if o == nil || IsNil(o.WritePolicyNumeric) {
		var ret int64
=======
func (o *ControllersResourceInner) GetWritePolicyNumeric() int32 {
	if o == nil || IsNil(o.WritePolicyNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.WritePolicyNumeric
}

// GetWritePolicyNumericOk returns a tuple with the WritePolicyNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *ControllersResourceInner) GetWritePolicyNumericOk() (*int64, bool) {
=======
func (o *ControllersResourceInner) GetWritePolicyNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.WritePolicyNumeric) {
		return nil, false
	}
	return o.WritePolicyNumeric, true
}

// HasWritePolicyNumeric returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasWritePolicyNumeric() bool {
	if o != nil && !IsNil(o.WritePolicyNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetWritePolicyNumeric gets a reference to the given int64 and assigns it to the WritePolicyNumeric field.
func (o *ControllersResourceInner) SetWritePolicyNumeric(v int64) {
=======
// SetWritePolicyNumeric gets a reference to the given int32 and assigns it to the WritePolicyNumeric field.
func (o *ControllersResourceInner) SetWritePolicyNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.WritePolicyNumeric = &v
}

// GetNetworkParameters returns the NetworkParameters field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetNetworkParameters() []NetworkParametersResourceInner {
	if o == nil || IsNil(o.NetworkParameters) {
		var ret []NetworkParametersResourceInner
		return ret
	}
	return o.NetworkParameters
}

// GetNetworkParametersOk returns a tuple with the NetworkParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetNetworkParametersOk() ([]NetworkParametersResourceInner, bool) {
	if o == nil || IsNil(o.NetworkParameters) {
		return nil, false
	}
	return o.NetworkParameters, true
}

// HasNetworkParameters returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasNetworkParameters() bool {
	if o != nil && !IsNil(o.NetworkParameters) {
		return true
	}

	return false
}

// SetNetworkParameters gets a reference to the given []NetworkParametersResourceInner and assigns it to the NetworkParameters field.
func (o *ControllersResourceInner) SetNetworkParameters(v []NetworkParametersResourceInner) {
	o.NetworkParameters = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetPort() []PortResourceInner {
	if o == nil || IsNil(o.Port) {
		var ret []PortResourceInner
		return ret
	}
	return o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetPortOk() ([]PortResourceInner, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given []PortResourceInner and assigns it to the Port field.
func (o *ControllersResourceInner) SetPort(v []PortResourceInner) {
	o.Port = v
}

// GetExpanderPorts returns the ExpanderPorts field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetExpanderPorts() []ExpanderPortsResourceInner {
	if o == nil || IsNil(o.ExpanderPorts) {
		var ret []ExpanderPortsResourceInner
		return ret
	}
	return o.ExpanderPorts
}

// GetExpanderPortsOk returns a tuple with the ExpanderPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetExpanderPortsOk() ([]ExpanderPortsResourceInner, bool) {
	if o == nil || IsNil(o.ExpanderPorts) {
		return nil, false
	}
	return o.ExpanderPorts, true
}

// HasExpanderPorts returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasExpanderPorts() bool {
	if o != nil && !IsNil(o.ExpanderPorts) {
		return true
	}

	return false
}

// SetExpanderPorts gets a reference to the given []ExpanderPortsResourceInner and assigns it to the ExpanderPorts field.
func (o *ControllersResourceInner) SetExpanderPorts(v []ExpanderPortsResourceInner) {
	o.ExpanderPorts = v
}

// GetExpanders returns the Expanders field value if set, zero value otherwise.
func (o *ControllersResourceInner) GetExpanders() []ExpandersResourceInner {
	if o == nil || IsNil(o.Expanders) {
		var ret []ExpandersResourceInner
		return ret
	}
	return o.Expanders
}

// GetExpandersOk returns a tuple with the Expanders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceInner) GetExpandersOk() ([]ExpandersResourceInner, bool) {
	if o == nil || IsNil(o.Expanders) {
		return nil, false
	}
	return o.Expanders, true
}

// HasExpanders returns a boolean if a field has been set.
func (o *ControllersResourceInner) HasExpanders() bool {
	if o != nil && !IsNil(o.Expanders) {
		return true
	}

	return false
}

// SetExpanders gets a reference to the given []ExpandersResourceInner and assigns it to the Expanders field.
func (o *ControllersResourceInner) SetExpanders(v []ExpandersResourceInner) {
	o.Expanders = v
}

func (o ControllersResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControllersResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Autoconfig) {
		toSerialize["autoconfig"] = o.Autoconfig
	}
	if !IsNil(o.AutoconfigNumeric) {
		toSerialize["autoconfig-numeric"] = o.AutoconfigNumeric
	}
	if !IsNil(o.CacheLock) {
		toSerialize["cache-lock"] = o.CacheLock
	}
	if !IsNil(o.CacheLockNumeric) {
		toSerialize["cache-lock-numeric"] = o.CacheLockNumeric
	}
	if !IsNil(o.CacheMemorySize) {
		toSerialize["cache-memory-size"] = o.CacheMemorySize
	}
	if !IsNil(o.ControllerId) {
		toSerialize["controller-id"] = o.ControllerId
	}
	if !IsNil(o.ControllerIdNumeric) {
		toSerialize["controller-id-numeric"] = o.ControllerIdNumeric
	}
	if !IsNil(o.CpldVersion) {
		toSerialize["cpld-version"] = o.CpldVersion
	}
	if !IsNil(o.DashLevel) {
		toSerialize["dash-level"] = o.DashLevel
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Dhcpv6) {
		toSerialize["dhcpv6"] = o.Dhcpv6
	}
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !IsNil(o.DriveBusType) {
		toSerialize["drive-bus-type"] = o.DriveBusType
	}
	if !IsNil(o.DriveBusTypeNumeric) {
		toSerialize["drive-bus-type-numeric"] = o.DriveBusTypeNumeric
	}
	if !IsNil(o.DriveChannels) {
		toSerialize["drive-channels"] = o.DriveChannels
	}
	if !IsNil(o.DurableId) {
		toSerialize["durable-id"] = o.DurableId
	}
	if !IsNil(o.FailOverReason) {
		toSerialize["fail-over-reason"] = o.FailOverReason
	}
	if !IsNil(o.FailOverReasonNumeric) {
		toSerialize["fail-over-reason-numeric"] = o.FailOverReasonNumeric
	}
	if !IsNil(o.FailedOver) {
		toSerialize["failed-over"] = o.FailedOver
	}
	if !IsNil(o.FailedOverNumeric) {
		toSerialize["failed-over-numeric"] = o.FailedOverNumeric
	}
	if !IsNil(o.FramDisabled0) {
		toSerialize["fram-disabled-0"] = o.FramDisabled0
	}
	if !IsNil(o.FramDisabled0Numeric) {
		toSerialize["fram-disabled-0-numeric"] = o.FramDisabled0Numeric
	}
	if !IsNil(o.FramDisabled1) {
		toSerialize["fram-disabled-1"] = o.FramDisabled1
	}
	if !IsNil(o.FramDisabled1Numeric) {
		toSerialize["fram-disabled-1-numeric"] = o.FramDisabled1Numeric
	}
	if !IsNil(o.FramModel0) {
		toSerialize["fram-model-0"] = o.FramModel0
	}
	if !IsNil(o.FramModel0Numeric) {
		toSerialize["fram-model-0-numeric"] = o.FramModel0Numeric
	}
	if !IsNil(o.FramModel1) {
		toSerialize["fram-model-1"] = o.FramModel1
	}
	if !IsNil(o.FramModel1Numeric) {
		toSerialize["fram-model-1-numeric"] = o.FramModel1Numeric
	}
	if !IsNil(o.FramVersion0) {
		toSerialize["fram-version-0"] = o.FramVersion0
	}
	if !IsNil(o.FramVersion1) {
		toSerialize["fram-version-1"] = o.FramVersion1
	}
	if !IsNil(o.FruShortname) {
		toSerialize["fru-shortname"] = o.FruShortname
	}
	if !IsNil(o.HardwareVersion) {
		toSerialize["hardware-version"] = o.HardwareVersion
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.HealthNumeric) {
		toSerialize["health-numeric"] = o.HealthNumeric
	}
	if !IsNil(o.HealthReason) {
		toSerialize["health-reason"] = o.HealthReason
	}
	if !IsNil(o.HealthRecommendation) {
		toSerialize["health-recommendation"] = o.HealthRecommendation
	}
	if !IsNil(o.HostPorts) {
		toSerialize["host-ports"] = o.HostPorts
	}
	if !IsNil(o.InternalSerialNumber) {
		toSerialize["internal-serial-number"] = o.InternalSerialNumber
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip-address"] = o.IpAddress
	}
	if !IsNil(o.IpGateway) {
		toSerialize["ip-gateway"] = o.IpGateway
	}
	if !IsNil(o.IpSubnetMask) {
		toSerialize["ip-subnet-mask"] = o.IpSubnetMask
	}
	if !IsNil(o.Ip6AutoAddress) {
		toSerialize["ip6-auto-address"] = o.Ip6AutoAddress
	}
	if !IsNil(o.Ip6AutoAddressSource) {
		toSerialize["ip6-auto-address-source"] = o.Ip6AutoAddressSource
	}
	if !IsNil(o.Ip6AutoAddressSourceNumeric) {
		toSerialize["ip6-auto-address-source-numeric"] = o.Ip6AutoAddressSourceNumeric
	}
	if !IsNil(o.Ip6AutoGateway) {
		toSerialize["ip6-auto-gateway"] = o.Ip6AutoGateway
	}
	if !IsNil(o.Ip6LinkLocalAddress) {
		toSerialize["ip6-link-local-address"] = o.Ip6LinkLocalAddress
	}
	if !IsNil(o.Ip6LinkLocalGateway) {
		toSerialize["ip6-link-local-gateway"] = o.Ip6LinkLocalGateway
	}
	if !IsNil(o.Ip61Address) {
		toSerialize["ip61-address"] = o.Ip61Address
	}
	if !IsNil(o.Ip61Gateway) {
		toSerialize["ip61-gateway"] = o.Ip61Gateway
	}
	if !IsNil(o.Ip62Address) {
		toSerialize["ip62-address"] = o.Ip62Address
	}
	if !IsNil(o.Ip62Gateway) {
		toSerialize["ip62-gateway"] = o.Ip62Gateway
	}
	if !IsNil(o.Ip63Address) {
		toSerialize["ip63-address"] = o.Ip63Address
	}
	if !IsNil(o.Ip63Gateway) {
		toSerialize["ip63-gateway"] = o.Ip63Gateway
	}
	if !IsNil(o.Ip64Address) {
		toSerialize["ip64-address"] = o.Ip64Address
	}
	if !IsNil(o.Ip64Gateway) {
		toSerialize["ip64-gateway"] = o.Ip64Gateway
	}
	if !IsNil(o.LocatorLed) {
		toSerialize["locator-led"] = o.LocatorLed
	}
	if !IsNil(o.LocatorLedNumeric) {
		toSerialize["locator-led-numeric"] = o.LocatorLedNumeric
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac-address"] = o.MacAddress
	}
	if !IsNil(o.MfgDate) {
		toSerialize["mfg-date"] = o.MfgDate
	}
	if !IsNil(o.MfgDateNumeric) {
		toSerialize["mfg-date-numeric"] = o.MfgDateNumeric
	}
	if !IsNil(o.MfgLocation) {
		toSerialize["mfg-location"] = o.MfgLocation
	}
	if !IsNil(o.MfgVendorId) {
		toSerialize["mfg-vendor-id"] = o.MfgVendorId
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Multicore) {
		toSerialize["multicore"] = o.Multicore
	}
	if !IsNil(o.MulticoreNumeric) {
		toSerialize["multicore-numeric"] = o.MulticoreNumeric
	}
	if !IsNil(o.NodeWwn) {
		toSerialize["node-wwn"] = o.NodeWwn
	}
	if !IsNil(o.NumberOfStoragePools) {
		toSerialize["number-of-storage-pools"] = o.NumberOfStoragePools
	}
	if !IsNil(o.PartNumber) {
		toSerialize["part-number"] = o.PartNumber
	}
	if !IsNil(o.PhyIsolation) {
		toSerialize["phy-isolation"] = o.PhyIsolation
	}
	if !IsNil(o.PhyIsolationNumeric) {
		toSerialize["phy-isolation-numeric"] = o.PhyIsolationNumeric
	}
	if !IsNil(o.PlatformType) {
		toSerialize["platform-type"] = o.PlatformType
	}
	if !IsNil(o.PlatformTypeNumeric) {
		toSerialize["platform-type-numeric"] = o.PlatformTypeNumeric
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.PositionNumeric) {
		toSerialize["position-numeric"] = o.PositionNumeric
	}
	if !IsNil(o.RedundancyMode) {
		toSerialize["redundancy-mode"] = o.RedundancyMode
	}
	if !IsNil(o.RedundancyModeNumeric) {
		toSerialize["redundancy-mode-numeric"] = o.RedundancyModeNumeric
	}
	if !IsNil(o.RedundancyStatus) {
		toSerialize["redundancy-status"] = o.RedundancyStatus
	}
	if !IsNil(o.RedundancyStatusNumeric) {
		toSerialize["redundancy-status-numeric"] = o.RedundancyStatusNumeric
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.Rotation) {
		toSerialize["rotation"] = o.Rotation
	}
	if !IsNil(o.RotationNumeric) {
		toSerialize["rotation-numeric"] = o.RotationNumeric
	}
	if !IsNil(o.ScCpuSpeed) {
		toSerialize["sc-cpu-speed"] = o.ScCpuSpeed
	}
	if !IsNil(o.ScCpuType) {
		toSerialize["sc-cpu-type"] = o.ScCpuType
	}
	if !IsNil(o.ScFw) {
		toSerialize["sc-fw"] = o.ScFw
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial-number"] = o.SerialNumber
	}
	if !IsNil(o.SlaacIp) {
		toSerialize["slaac-ip"] = o.SlaacIp
	}
	if !IsNil(o.SsdAltPathIoCount) {
		toSerialize["ssd-alt-path-io-count"] = o.SsdAltPathIoCount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusNumeric) {
		toSerialize["status-numeric"] = o.StatusNumeric
	}
	if !IsNil(o.SystemMemorySize) {
		toSerialize["system-memory-size"] = o.SystemMemorySize
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.VirtualDisks) {
		toSerialize["virtual-disks"] = o.VirtualDisks
	}
	if !IsNil(o.WritePolicy) {
		toSerialize["write-policy"] = o.WritePolicy
	}
	if !IsNil(o.WritePolicyNumeric) {
		toSerialize["write-policy-numeric"] = o.WritePolicyNumeric
	}
	if !IsNil(o.NetworkParameters) {
		toSerialize["network-parameters"] = o.NetworkParameters
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.ExpanderPorts) {
		toSerialize["expander-ports"] = o.ExpanderPorts
	}
	if !IsNil(o.Expanders) {
		toSerialize["expanders"] = o.Expanders
	}
	return toSerialize, nil
}

type NullableControllersResourceInner struct {
	value *ControllersResourceInner
	isSet bool
}

func (v NullableControllersResourceInner) Get() *ControllersResourceInner {
	return v.value
}

func (v *NullableControllersResourceInner) Set(val *ControllersResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersResourceInner(val *ControllersResourceInner) *NullableControllersResourceInner {
	return &NullableControllersResourceInner{value: val, isSet: true}
}

func (v NullableControllersResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
