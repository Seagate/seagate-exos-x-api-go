/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DiskGroupsResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiskGroupsResourceInner{}

// DiskGroupsResourceInner struct for DiskGroupsResourceInner
type DiskGroupsResourceInner struct {
	ObjectName                 *string `json:"object-name,omitempty"`
	Meta                       *string `json:"meta,omitempty"`
	ActualSpareCapacity        *string `json:"actual-spare-capacity,omitempty"`
	ActualSpareCapacityNumeric *int32  `json:"actual-spare-capacity-numeric,omitempty"`
	// Number of pages allocated
	AllocatedPages *int32 `json:"allocated-pages,omitempty"`
	// Disk interface type
	ArrayDriveType *string `json:"array-drive-type,omitempty"`
	// Disk interface type( In numeric form )
	ArrayDriveTypeNumeric *int32 `json:"array-drive-type-numeric,omitempty"`
	// Available pages
	AvailablePages *int32 `json:"available-pages,omitempty"`
	// The size in blocks
	Blocks                *int32  `json:"blocks,omitempty"`
	Blocksize             *int32  `json:"blocksize,omitempty"`
	CacheFlushPeriod      *int32  `json:"cache-flush-period,omitempty"`
	CacheReadAhead        *string `json:"cache-read-ahead,omitempty"`
	CacheReadAheadNumeric *int32  `json:"cache-read-ahead-numeric,omitempty"`
	// Smallest block of usable space
	Chunksize               *string `json:"chunksize,omitempty"`
	CreateDate              *string `json:"create-date,omitempty"`
	CreateDateNumeric       *int32  `json:"create-date-numeric,omitempty"`
	CriticalCapacity        *string `json:"critical-capacity,omitempty"`
	CriticalCapacityNumeric *int32  `json:"critical-capacity-numeric,omitempty"`
	CurrentJob              *string `json:"current-job,omitempty"`
	CurrentJobCompletion    *string `json:"current-job-completion,omitempty"`
	CurrentJobNumeric       *int32  `json:"current-job-numeric,omitempty"`
	DegradedCapacity        *string `json:"degraded-capacity,omitempty"`
	DegradedCapacityNumeric *int32  `json:"degraded-capacity-numeric,omitempty"`
	// Disk interface Description
	DiskDescription *string `json:"disk-description,omitempty"`
	// Disk interface Description( In numeric form )
	DiskDescriptionNumeric    *int32  `json:"disk-description-numeric,omitempty"`
	DiskDsdDelayVdisk         *int32  `json:"disk-dsd-delay-vdisk,omitempty"`
	DiskDsdEnableVdisk        *string `json:"disk-dsd-enable-vdisk,omitempty"`
	DiskDsdEnableVdiskNumeric *int32  `json:"disk-dsd-enable-vdisk-numeric,omitempty"`
	// Number of disks
	Diskcount *int32 `json:"diskcount,omitempty"`
	// Extended status (bits)
	ExtendedStatus *int32 `json:"extended-status,omitempty"`
	// Amount of free space in the vdisk
	Freespace *string `json:"freespace,omitempty"`
	// Amount of free space in the vdisk( In numeric form )
	FreespaceNumeric                 *int32  `json:"freespace-numeric,omitempty"`
	Health                           *string `json:"health,omitempty"`
	HealthNumeric                    *int32  `json:"health-numeric,omitempty"`
	HealthReason                     *string `json:"health-reason,omitempty"`
	HealthReasonNumeric              *int32  `json:"health-reason-numeric,omitempty"`
	HealthRecommendation             *string `json:"health-recommendation,omitempty"`
	HealthRecommendationNumeric      *int32  `json:"health-recommendation-numeric,omitempty"`
	InterleavedVolumeCount           *int32  `json:"interleaved-volume-count,omitempty"`
	IsJobAutoAbortable               *string `json:"is-job-auto-abortable,omitempty"`
	IsJobAutoAbortableNumeric        *int32  `json:"is-job-auto-abortable-numeric,omitempty"`
	JobRunning                       *string `json:"job-running,omitempty"`
	LargestFreePartitionSpace        *string `json:"largest-free-partition-space,omitempty"`
	LargestFreePartitionSpaceNumeric *int32  `json:"largest-free-partition-space-numeric,omitempty"`
	LinearVolumeBoundary             *int32  `json:"linear-volume-boundary,omitempty"`
	// Logical Unit Number
	Lun *int32 `json:"lun,omitempty"`
	// Disk Group Metadata Capacity
	MetadataSize *string `json:"metadata-size,omitempty"`
	// Disk Group Metadata Capacity( In numeric form )
	MetadataSizeNumeric *int32 `json:"metadata-size-numeric,omitempty"`
	// Smallest disk size that can be used for this disk group
	MinDriveSize *string `json:"min-drive-size,omitempty"`
	// Smallest disk size that can be used for this disk group( In numeric form )
	MinDriveSizeNumeric *int32  `json:"min-drive-size-numeric,omitempty"`
	Name                *string `json:"name,omitempty"`
	// LBA used for the next volume that will be created
	NewPartitionLba *string `json:"new-partition-lba,omitempty"`
	// LBA used for the next volume that will be created( In numeric form )
	NewPartitionLbaNumeric *int32 `json:"new-partition-lba-numeric,omitempty"`
	// Number of volumes in this vdisk
	NumArrayPartitions *int32 `json:"num-array-partitions,omitempty"`
	// Number of disks in the RAID 10 or 50 subgroup
	NumDrivesPerLowLevelArray *int32  `json:"num-drives-per-low-level-array,omitempty"`
	NumExpansionPartitions    *int32  `json:"num-expansion-partitions,omitempty"`
	NumPartitionSegments      *int32  `json:"num-partition-segments,omitempty"`
	Overhead                  *string `json:"overhead,omitempty"`
	OverheadNumeric           *int32  `json:"overhead-numeric,omitempty"`
	// Controller owning the component
	Owner *string `json:"owner,omitempty"`
	// Controller owning the component( In numeric form )
	OwnerNumeric *int32 `json:"owner-numeric,omitempty"`
	// Disk group performance rank within the virtual pool
	PerformanceRank *int32 `json:"performance-rank,omitempty"`
	// Pool
	Pool *string `json:"pool,omitempty"`
	// Portion of the virtual pool used by this disk group
	PoolPercentage *int32 `json:"pool-percentage,omitempty"`
	// Pool Sector Format
	PoolSectorFormat *string `json:"pool-sector-format,omitempty"`
	// Pool Sector Format( In numeric form )
	PoolSectorFormatNumeric *int32 `json:"pool-sector-format-numeric,omitempty"`
	// Serial number of the pool
	PoolSerialNumber *string `json:"pool-serial-number,omitempty"`
	// URL for associated Storage Pool
	PoolsUrl *string `json:"pools-url,omitempty"`
	// Configured owner
	PreferredOwner *string `json:"preferred-owner,omitempty"`
	// Configured owner( In numeric form )
	PreferredOwnerNumeric *int32 `json:"preferred-owner-numeric,omitempty"`
	// RAID level
	Raidtype *string `json:"raidtype,omitempty"`
	// RAID level( In numeric form )
	RaidtypeNumeric *int32  `json:"raidtype-numeric,omitempty"`
	RawSize         *string `json:"raw-size,omitempty"`
	RawSizeNumeric  *int32  `json:"raw-size-numeric,omitempty"`
	// Indicates whether read-ahead cache mode is enabled
	ReadAheadEnabled *string `json:"read-ahead-enabled,omitempty"`
	// Indicates whether read-ahead cache mode is enabled( In numeric form )
	ReadAheadEnabledNumeric *int32 `json:"read-ahead-enabled-numeric,omitempty"`
	// Preferred duration for vdisk scrub utility
	ScrubDurationGoal *int32  `json:"scrub-duration-goal,omitempty"`
	SerialNumber      *string `json:"serial-number,omitempty"`
	// The size or capacity formatted with the current session base, precision, and units
	Size *string `json:"size,omitempty"`
	// The size or capacity formatted with the current session base, precision, and units( In numeric form )
	SizeNumeric *int32 `json:"size-numeric,omitempty"`
	// Number of spare disks currently configured
	Sparecount    *int32  `json:"sparecount,omitempty"`
	Spear         *string `json:"spear,omitempty"`
	SpearNumeric  *int32  `json:"spear-numeric,omitempty"`
	Status        *string `json:"status,omitempty"`
	StatusNumeric *int32  `json:"status-numeric,omitempty"`
	// Disk group tier assignment for tiered migration
	StorageTier *string `json:"storage-tier,omitempty"`
	// Disk group tier assignment for tiered migration( In numeric form )
	StorageTierNumeric *int32 `json:"storage-tier-numeric,omitempty"`
	// Storage type
	StorageType *string `json:"storage-type,omitempty"`
	// Storage type( In numeric form )
	StorageTypeNumeric         *int32  `json:"storage-type-numeric,omitempty"`
	StripeWidth                *string `json:"stripe-width,omitempty"`
	StripeWidthNumeric         *int32  `json:"stripe-width-numeric,omitempty"`
	TargetSpareCapacity        *string `json:"target-spare-capacity,omitempty"`
	TargetSpareCapacityNumeric *int32  `json:"target-spare-capacity-numeric,omitempty"`
	TotalPages                 *int32  `json:"total-pages,omitempty"`
	// The resource URL
	Url *string `json:"url,omitempty"`
	// Indicates whether disk write-back cache is enabled
	WriteBackEnabled *string `json:"write-back-enabled,omitempty"`
	// Indicates whether disk write-back cache is enabled( In numeric form )
	WriteBackEnabledNumeric *int32 `json:"write-back-enabled-numeric,omitempty"`
}

// NewDiskGroupsResourceInner instantiates a new DiskGroupsResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiskGroupsResourceInner() *DiskGroupsResourceInner {
	this := DiskGroupsResourceInner{}
	return &this
}

// NewDiskGroupsResourceInnerWithDefaults instantiates a new DiskGroupsResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiskGroupsResourceInnerWithDefaults() *DiskGroupsResourceInner {
	this := DiskGroupsResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *DiskGroupsResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *DiskGroupsResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetActualSpareCapacity returns the ActualSpareCapacity field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetActualSpareCapacity() string {
	if o == nil || IsNil(o.ActualSpareCapacity) {
		var ret string
		return ret
	}
	return *o.ActualSpareCapacity
}

// GetActualSpareCapacityOk returns a tuple with the ActualSpareCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetActualSpareCapacityOk() (*string, bool) {
	if o == nil || IsNil(o.ActualSpareCapacity) {
		return nil, false
	}
	return o.ActualSpareCapacity, true
}

// HasActualSpareCapacity returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasActualSpareCapacity() bool {
	if o != nil && !IsNil(o.ActualSpareCapacity) {
		return true
	}

	return false
}

// SetActualSpareCapacity gets a reference to the given string and assigns it to the ActualSpareCapacity field.
func (o *DiskGroupsResourceInner) SetActualSpareCapacity(v string) {
	o.ActualSpareCapacity = &v
}

// GetActualSpareCapacityNumeric returns the ActualSpareCapacityNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetActualSpareCapacityNumeric() int32 {
	if o == nil || IsNil(o.ActualSpareCapacityNumeric) {
		var ret int32
		return ret
	}
	return *o.ActualSpareCapacityNumeric
}

// GetActualSpareCapacityNumericOk returns a tuple with the ActualSpareCapacityNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetActualSpareCapacityNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.ActualSpareCapacityNumeric) {
		return nil, false
	}
	return o.ActualSpareCapacityNumeric, true
}

// HasActualSpareCapacityNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasActualSpareCapacityNumeric() bool {
	if o != nil && !IsNil(o.ActualSpareCapacityNumeric) {
		return true
	}

	return false
}

// SetActualSpareCapacityNumeric gets a reference to the given int32 and assigns it to the ActualSpareCapacityNumeric field.
func (o *DiskGroupsResourceInner) SetActualSpareCapacityNumeric(v int32) {
	o.ActualSpareCapacityNumeric = &v
}

// GetAllocatedPages returns the AllocatedPages field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetAllocatedPages() int32 {
	if o == nil || IsNil(o.AllocatedPages) {
		var ret int32
		return ret
	}
	return *o.AllocatedPages
}

// GetAllocatedPagesOk returns a tuple with the AllocatedPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetAllocatedPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.AllocatedPages) {
		return nil, false
	}
	return o.AllocatedPages, true
}

// HasAllocatedPages returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasAllocatedPages() bool {
	if o != nil && !IsNil(o.AllocatedPages) {
		return true
	}

	return false
}

// SetAllocatedPages gets a reference to the given int32 and assigns it to the AllocatedPages field.
func (o *DiskGroupsResourceInner) SetAllocatedPages(v int32) {
	o.AllocatedPages = &v
}

// GetArrayDriveType returns the ArrayDriveType field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetArrayDriveType() string {
	if o == nil || IsNil(o.ArrayDriveType) {
		var ret string
		return ret
	}
	return *o.ArrayDriveType
}

// GetArrayDriveTypeOk returns a tuple with the ArrayDriveType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetArrayDriveTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ArrayDriveType) {
		return nil, false
	}
	return o.ArrayDriveType, true
}

// HasArrayDriveType returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasArrayDriveType() bool {
	if o != nil && !IsNil(o.ArrayDriveType) {
		return true
	}

	return false
}

// SetArrayDriveType gets a reference to the given string and assigns it to the ArrayDriveType field.
func (o *DiskGroupsResourceInner) SetArrayDriveType(v string) {
	o.ArrayDriveType = &v
}

// GetArrayDriveTypeNumeric returns the ArrayDriveTypeNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetArrayDriveTypeNumeric() int32 {
	if o == nil || IsNil(o.ArrayDriveTypeNumeric) {
		var ret int32
		return ret
	}
	return *o.ArrayDriveTypeNumeric
}

// GetArrayDriveTypeNumericOk returns a tuple with the ArrayDriveTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetArrayDriveTypeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.ArrayDriveTypeNumeric) {
		return nil, false
	}
	return o.ArrayDriveTypeNumeric, true
}

// HasArrayDriveTypeNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasArrayDriveTypeNumeric() bool {
	if o != nil && !IsNil(o.ArrayDriveTypeNumeric) {
		return true
	}

	return false
}

// SetArrayDriveTypeNumeric gets a reference to the given int32 and assigns it to the ArrayDriveTypeNumeric field.
func (o *DiskGroupsResourceInner) SetArrayDriveTypeNumeric(v int32) {
	o.ArrayDriveTypeNumeric = &v
}

// GetAvailablePages returns the AvailablePages field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetAvailablePages() int32 {
	if o == nil || IsNil(o.AvailablePages) {
		var ret int32
		return ret
	}
	return *o.AvailablePages
}

// GetAvailablePagesOk returns a tuple with the AvailablePages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetAvailablePagesOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailablePages) {
		return nil, false
	}
	return o.AvailablePages, true
}

// HasAvailablePages returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasAvailablePages() bool {
	if o != nil && !IsNil(o.AvailablePages) {
		return true
	}

	return false
}

// SetAvailablePages gets a reference to the given int32 and assigns it to the AvailablePages field.
func (o *DiskGroupsResourceInner) SetAvailablePages(v int32) {
	o.AvailablePages = &v
}

// GetBlocks returns the Blocks field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetBlocks() int32 {
	if o == nil || IsNil(o.Blocks) {
		var ret int32
		return ret
	}
	return *o.Blocks
}

// GetBlocksOk returns a tuple with the Blocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetBlocksOk() (*int32, bool) {
	if o == nil || IsNil(o.Blocks) {
		return nil, false
	}
	return o.Blocks, true
}

// HasBlocks returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasBlocks() bool {
	if o != nil && !IsNil(o.Blocks) {
		return true
	}

	return false
}

// SetBlocks gets a reference to the given int32 and assigns it to the Blocks field.
func (o *DiskGroupsResourceInner) SetBlocks(v int32) {
	o.Blocks = &v
}

// GetBlocksize returns the Blocksize field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetBlocksize() int32 {
	if o == nil || IsNil(o.Blocksize) {
		var ret int32
		return ret
	}
	return *o.Blocksize
}

// GetBlocksizeOk returns a tuple with the Blocksize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetBlocksizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Blocksize) {
		return nil, false
	}
	return o.Blocksize, true
}

// HasBlocksize returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasBlocksize() bool {
	if o != nil && !IsNil(o.Blocksize) {
		return true
	}

	return false
}

// SetBlocksize gets a reference to the given int32 and assigns it to the Blocksize field.
func (o *DiskGroupsResourceInner) SetBlocksize(v int32) {
	o.Blocksize = &v
}

// GetCacheFlushPeriod returns the CacheFlushPeriod field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCacheFlushPeriod() int32 {
	if o == nil || IsNil(o.CacheFlushPeriod) {
		var ret int32
		return ret
	}
	return *o.CacheFlushPeriod
}

// GetCacheFlushPeriodOk returns a tuple with the CacheFlushPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCacheFlushPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.CacheFlushPeriod) {
		return nil, false
	}
	return o.CacheFlushPeriod, true
}

// HasCacheFlushPeriod returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCacheFlushPeriod() bool {
	if o != nil && !IsNil(o.CacheFlushPeriod) {
		return true
	}

	return false
}

// SetCacheFlushPeriod gets a reference to the given int32 and assigns it to the CacheFlushPeriod field.
func (o *DiskGroupsResourceInner) SetCacheFlushPeriod(v int32) {
	o.CacheFlushPeriod = &v
}

// GetCacheReadAhead returns the CacheReadAhead field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCacheReadAhead() string {
	if o == nil || IsNil(o.CacheReadAhead) {
		var ret string
		return ret
	}
	return *o.CacheReadAhead
}

// GetCacheReadAheadOk returns a tuple with the CacheReadAhead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCacheReadAheadOk() (*string, bool) {
	if o == nil || IsNil(o.CacheReadAhead) {
		return nil, false
	}
	return o.CacheReadAhead, true
}

// HasCacheReadAhead returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCacheReadAhead() bool {
	if o != nil && !IsNil(o.CacheReadAhead) {
		return true
	}

	return false
}

// SetCacheReadAhead gets a reference to the given string and assigns it to the CacheReadAhead field.
func (o *DiskGroupsResourceInner) SetCacheReadAhead(v string) {
	o.CacheReadAhead = &v
}

// GetCacheReadAheadNumeric returns the CacheReadAheadNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCacheReadAheadNumeric() int32 {
	if o == nil || IsNil(o.CacheReadAheadNumeric) {
		var ret int32
		return ret
	}
	return *o.CacheReadAheadNumeric
}

// GetCacheReadAheadNumericOk returns a tuple with the CacheReadAheadNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCacheReadAheadNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.CacheReadAheadNumeric) {
		return nil, false
	}
	return o.CacheReadAheadNumeric, true
}

// HasCacheReadAheadNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCacheReadAheadNumeric() bool {
	if o != nil && !IsNil(o.CacheReadAheadNumeric) {
		return true
	}

	return false
}

// SetCacheReadAheadNumeric gets a reference to the given int32 and assigns it to the CacheReadAheadNumeric field.
func (o *DiskGroupsResourceInner) SetCacheReadAheadNumeric(v int32) {
	o.CacheReadAheadNumeric = &v
}

// GetChunksize returns the Chunksize field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetChunksize() string {
	if o == nil || IsNil(o.Chunksize) {
		var ret string
		return ret
	}
	return *o.Chunksize
}

// GetChunksizeOk returns a tuple with the Chunksize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetChunksizeOk() (*string, bool) {
	if o == nil || IsNil(o.Chunksize) {
		return nil, false
	}
	return o.Chunksize, true
}

// HasChunksize returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasChunksize() bool {
	if o != nil && !IsNil(o.Chunksize) {
		return true
	}

	return false
}

// SetChunksize gets a reference to the given string and assigns it to the Chunksize field.
func (o *DiskGroupsResourceInner) SetChunksize(v string) {
	o.Chunksize = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCreateDate() string {
	if o == nil || IsNil(o.CreateDate) {
		var ret string
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCreateDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given string and assigns it to the CreateDate field.
func (o *DiskGroupsResourceInner) SetCreateDate(v string) {
	o.CreateDate = &v
}

// GetCreateDateNumeric returns the CreateDateNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCreateDateNumeric() int32 {
	if o == nil || IsNil(o.CreateDateNumeric) {
		var ret int32
		return ret
	}
	return *o.CreateDateNumeric
}

// GetCreateDateNumericOk returns a tuple with the CreateDateNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCreateDateNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateDateNumeric) {
		return nil, false
	}
	return o.CreateDateNumeric, true
}

// HasCreateDateNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCreateDateNumeric() bool {
	if o != nil && !IsNil(o.CreateDateNumeric) {
		return true
	}

	return false
}

// SetCreateDateNumeric gets a reference to the given int32 and assigns it to the CreateDateNumeric field.
func (o *DiskGroupsResourceInner) SetCreateDateNumeric(v int32) {
	o.CreateDateNumeric = &v
}

// GetCriticalCapacity returns the CriticalCapacity field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCriticalCapacity() string {
	if o == nil || IsNil(o.CriticalCapacity) {
		var ret string
		return ret
	}
	return *o.CriticalCapacity
}

// GetCriticalCapacityOk returns a tuple with the CriticalCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCriticalCapacityOk() (*string, bool) {
	if o == nil || IsNil(o.CriticalCapacity) {
		return nil, false
	}
	return o.CriticalCapacity, true
}

// HasCriticalCapacity returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCriticalCapacity() bool {
	if o != nil && !IsNil(o.CriticalCapacity) {
		return true
	}

	return false
}

// SetCriticalCapacity gets a reference to the given string and assigns it to the CriticalCapacity field.
func (o *DiskGroupsResourceInner) SetCriticalCapacity(v string) {
	o.CriticalCapacity = &v
}

// GetCriticalCapacityNumeric returns the CriticalCapacityNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCriticalCapacityNumeric() int32 {
	if o == nil || IsNil(o.CriticalCapacityNumeric) {
		var ret int32
		return ret
	}
	return *o.CriticalCapacityNumeric
}

// GetCriticalCapacityNumericOk returns a tuple with the CriticalCapacityNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCriticalCapacityNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.CriticalCapacityNumeric) {
		return nil, false
	}
	return o.CriticalCapacityNumeric, true
}

// HasCriticalCapacityNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCriticalCapacityNumeric() bool {
	if o != nil && !IsNil(o.CriticalCapacityNumeric) {
		return true
	}

	return false
}

// SetCriticalCapacityNumeric gets a reference to the given int32 and assigns it to the CriticalCapacityNumeric field.
func (o *DiskGroupsResourceInner) SetCriticalCapacityNumeric(v int32) {
	o.CriticalCapacityNumeric = &v
}

// GetCurrentJob returns the CurrentJob field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCurrentJob() string {
	if o == nil || IsNil(o.CurrentJob) {
		var ret string
		return ret
	}
	return *o.CurrentJob
}

// GetCurrentJobOk returns a tuple with the CurrentJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCurrentJobOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentJob) {
		return nil, false
	}
	return o.CurrentJob, true
}

// HasCurrentJob returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCurrentJob() bool {
	if o != nil && !IsNil(o.CurrentJob) {
		return true
	}

	return false
}

// SetCurrentJob gets a reference to the given string and assigns it to the CurrentJob field.
func (o *DiskGroupsResourceInner) SetCurrentJob(v string) {
	o.CurrentJob = &v
}

// GetCurrentJobCompletion returns the CurrentJobCompletion field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCurrentJobCompletion() string {
	if o == nil || IsNil(o.CurrentJobCompletion) {
		var ret string
		return ret
	}
	return *o.CurrentJobCompletion
}

// GetCurrentJobCompletionOk returns a tuple with the CurrentJobCompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCurrentJobCompletionOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentJobCompletion) {
		return nil, false
	}
	return o.CurrentJobCompletion, true
}

// HasCurrentJobCompletion returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCurrentJobCompletion() bool {
	if o != nil && !IsNil(o.CurrentJobCompletion) {
		return true
	}

	return false
}

// SetCurrentJobCompletion gets a reference to the given string and assigns it to the CurrentJobCompletion field.
func (o *DiskGroupsResourceInner) SetCurrentJobCompletion(v string) {
	o.CurrentJobCompletion = &v
}

// GetCurrentJobNumeric returns the CurrentJobNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetCurrentJobNumeric() int32 {
	if o == nil || IsNil(o.CurrentJobNumeric) {
		var ret int32
		return ret
	}
	return *o.CurrentJobNumeric
}

// GetCurrentJobNumericOk returns a tuple with the CurrentJobNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetCurrentJobNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentJobNumeric) {
		return nil, false
	}
	return o.CurrentJobNumeric, true
}

// HasCurrentJobNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasCurrentJobNumeric() bool {
	if o != nil && !IsNil(o.CurrentJobNumeric) {
		return true
	}

	return false
}

// SetCurrentJobNumeric gets a reference to the given int32 and assigns it to the CurrentJobNumeric field.
func (o *DiskGroupsResourceInner) SetCurrentJobNumeric(v int32) {
	o.CurrentJobNumeric = &v
}

// GetDegradedCapacity returns the DegradedCapacity field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetDegradedCapacity() string {
	if o == nil || IsNil(o.DegradedCapacity) {
		var ret string
		return ret
	}
	return *o.DegradedCapacity
}

// GetDegradedCapacityOk returns a tuple with the DegradedCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetDegradedCapacityOk() (*string, bool) {
	if o == nil || IsNil(o.DegradedCapacity) {
		return nil, false
	}
	return o.DegradedCapacity, true
}

// HasDegradedCapacity returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasDegradedCapacity() bool {
	if o != nil && !IsNil(o.DegradedCapacity) {
		return true
	}

	return false
}

// SetDegradedCapacity gets a reference to the given string and assigns it to the DegradedCapacity field.
func (o *DiskGroupsResourceInner) SetDegradedCapacity(v string) {
	o.DegradedCapacity = &v
}

// GetDegradedCapacityNumeric returns the DegradedCapacityNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetDegradedCapacityNumeric() int32 {
	if o == nil || IsNil(o.DegradedCapacityNumeric) {
		var ret int32
		return ret
	}
	return *o.DegradedCapacityNumeric
}

// GetDegradedCapacityNumericOk returns a tuple with the DegradedCapacityNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetDegradedCapacityNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.DegradedCapacityNumeric) {
		return nil, false
	}
	return o.DegradedCapacityNumeric, true
}

// HasDegradedCapacityNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasDegradedCapacityNumeric() bool {
	if o != nil && !IsNil(o.DegradedCapacityNumeric) {
		return true
	}

	return false
}

// SetDegradedCapacityNumeric gets a reference to the given int32 and assigns it to the DegradedCapacityNumeric field.
func (o *DiskGroupsResourceInner) SetDegradedCapacityNumeric(v int32) {
	o.DegradedCapacityNumeric = &v
}

// GetDiskDescription returns the DiskDescription field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetDiskDescription() string {
	if o == nil || IsNil(o.DiskDescription) {
		var ret string
		return ret
	}
	return *o.DiskDescription
}

// GetDiskDescriptionOk returns a tuple with the DiskDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetDiskDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DiskDescription) {
		return nil, false
	}
	return o.DiskDescription, true
}

// HasDiskDescription returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasDiskDescription() bool {
	if o != nil && !IsNil(o.DiskDescription) {
		return true
	}

	return false
}

// SetDiskDescription gets a reference to the given string and assigns it to the DiskDescription field.
func (o *DiskGroupsResourceInner) SetDiskDescription(v string) {
	o.DiskDescription = &v
}

// GetDiskDescriptionNumeric returns the DiskDescriptionNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetDiskDescriptionNumeric() int32 {
	if o == nil || IsNil(o.DiskDescriptionNumeric) {
		var ret int32
		return ret
	}
	return *o.DiskDescriptionNumeric
}

// GetDiskDescriptionNumericOk returns a tuple with the DiskDescriptionNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetDiskDescriptionNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskDescriptionNumeric) {
		return nil, false
	}
	return o.DiskDescriptionNumeric, true
}

// HasDiskDescriptionNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasDiskDescriptionNumeric() bool {
	if o != nil && !IsNil(o.DiskDescriptionNumeric) {
		return true
	}

	return false
}

// SetDiskDescriptionNumeric gets a reference to the given int32 and assigns it to the DiskDescriptionNumeric field.
func (o *DiskGroupsResourceInner) SetDiskDescriptionNumeric(v int32) {
	o.DiskDescriptionNumeric = &v
}

// GetDiskDsdDelayVdisk returns the DiskDsdDelayVdisk field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetDiskDsdDelayVdisk() int32 {
	if o == nil || IsNil(o.DiskDsdDelayVdisk) {
		var ret int32
		return ret
	}
	return *o.DiskDsdDelayVdisk
}

// GetDiskDsdDelayVdiskOk returns a tuple with the DiskDsdDelayVdisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetDiskDsdDelayVdiskOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskDsdDelayVdisk) {
		return nil, false
	}
	return o.DiskDsdDelayVdisk, true
}

// HasDiskDsdDelayVdisk returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasDiskDsdDelayVdisk() bool {
	if o != nil && !IsNil(o.DiskDsdDelayVdisk) {
		return true
	}

	return false
}

// SetDiskDsdDelayVdisk gets a reference to the given int32 and assigns it to the DiskDsdDelayVdisk field.
func (o *DiskGroupsResourceInner) SetDiskDsdDelayVdisk(v int32) {
	o.DiskDsdDelayVdisk = &v
}

// GetDiskDsdEnableVdisk returns the DiskDsdEnableVdisk field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetDiskDsdEnableVdisk() string {
	if o == nil || IsNil(o.DiskDsdEnableVdisk) {
		var ret string
		return ret
	}
	return *o.DiskDsdEnableVdisk
}

// GetDiskDsdEnableVdiskOk returns a tuple with the DiskDsdEnableVdisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetDiskDsdEnableVdiskOk() (*string, bool) {
	if o == nil || IsNil(o.DiskDsdEnableVdisk) {
		return nil, false
	}
	return o.DiskDsdEnableVdisk, true
}

// HasDiskDsdEnableVdisk returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasDiskDsdEnableVdisk() bool {
	if o != nil && !IsNil(o.DiskDsdEnableVdisk) {
		return true
	}

	return false
}

// SetDiskDsdEnableVdisk gets a reference to the given string and assigns it to the DiskDsdEnableVdisk field.
func (o *DiskGroupsResourceInner) SetDiskDsdEnableVdisk(v string) {
	o.DiskDsdEnableVdisk = &v
}

// GetDiskDsdEnableVdiskNumeric returns the DiskDsdEnableVdiskNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetDiskDsdEnableVdiskNumeric() int32 {
	if o == nil || IsNil(o.DiskDsdEnableVdiskNumeric) {
		var ret int32
		return ret
	}
	return *o.DiskDsdEnableVdiskNumeric
}

// GetDiskDsdEnableVdiskNumericOk returns a tuple with the DiskDsdEnableVdiskNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetDiskDsdEnableVdiskNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskDsdEnableVdiskNumeric) {
		return nil, false
	}
	return o.DiskDsdEnableVdiskNumeric, true
}

// HasDiskDsdEnableVdiskNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasDiskDsdEnableVdiskNumeric() bool {
	if o != nil && !IsNil(o.DiskDsdEnableVdiskNumeric) {
		return true
	}

	return false
}

// SetDiskDsdEnableVdiskNumeric gets a reference to the given int32 and assigns it to the DiskDsdEnableVdiskNumeric field.
func (o *DiskGroupsResourceInner) SetDiskDsdEnableVdiskNumeric(v int32) {
	o.DiskDsdEnableVdiskNumeric = &v
}

// GetDiskcount returns the Diskcount field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetDiskcount() int32 {
	if o == nil || IsNil(o.Diskcount) {
		var ret int32
		return ret
	}
	return *o.Diskcount
}

// GetDiskcountOk returns a tuple with the Diskcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetDiskcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Diskcount) {
		return nil, false
	}
	return o.Diskcount, true
}

// HasDiskcount returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasDiskcount() bool {
	if o != nil && !IsNil(o.Diskcount) {
		return true
	}

	return false
}

// SetDiskcount gets a reference to the given int32 and assigns it to the Diskcount field.
func (o *DiskGroupsResourceInner) SetDiskcount(v int32) {
	o.Diskcount = &v
}

// GetExtendedStatus returns the ExtendedStatus field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetExtendedStatus() int32 {
	if o == nil || IsNil(o.ExtendedStatus) {
		var ret int32
		return ret
	}
	return *o.ExtendedStatus
}

// GetExtendedStatusOk returns a tuple with the ExtendedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetExtendedStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.ExtendedStatus) {
		return nil, false
	}
	return o.ExtendedStatus, true
}

// HasExtendedStatus returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasExtendedStatus() bool {
	if o != nil && !IsNil(o.ExtendedStatus) {
		return true
	}

	return false
}

// SetExtendedStatus gets a reference to the given int32 and assigns it to the ExtendedStatus field.
func (o *DiskGroupsResourceInner) SetExtendedStatus(v int32) {
	o.ExtendedStatus = &v
}

// GetFreespace returns the Freespace field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetFreespace() string {
	if o == nil || IsNil(o.Freespace) {
		var ret string
		return ret
	}
	return *o.Freespace
}

// GetFreespaceOk returns a tuple with the Freespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetFreespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Freespace) {
		return nil, false
	}
	return o.Freespace, true
}

// HasFreespace returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasFreespace() bool {
	if o != nil && !IsNil(o.Freespace) {
		return true
	}

	return false
}

// SetFreespace gets a reference to the given string and assigns it to the Freespace field.
func (o *DiskGroupsResourceInner) SetFreespace(v string) {
	o.Freespace = &v
}

// GetFreespaceNumeric returns the FreespaceNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetFreespaceNumeric() int32 {
	if o == nil || IsNil(o.FreespaceNumeric) {
		var ret int32
		return ret
	}
	return *o.FreespaceNumeric
}

// GetFreespaceNumericOk returns a tuple with the FreespaceNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetFreespaceNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.FreespaceNumeric) {
		return nil, false
	}
	return o.FreespaceNumeric, true
}

// HasFreespaceNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasFreespaceNumeric() bool {
	if o != nil && !IsNil(o.FreespaceNumeric) {
		return true
	}

	return false
}

// SetFreespaceNumeric gets a reference to the given int32 and assigns it to the FreespaceNumeric field.
func (o *DiskGroupsResourceInner) SetFreespaceNumeric(v int32) {
	o.FreespaceNumeric = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetHealth() string {
	if o == nil || IsNil(o.Health) {
		var ret string
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetHealthOk() (*string, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given string and assigns it to the Health field.
func (o *DiskGroupsResourceInner) SetHealth(v string) {
	o.Health = &v
}

// GetHealthNumeric returns the HealthNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetHealthNumeric() int32 {
	if o == nil || IsNil(o.HealthNumeric) {
		var ret int32
		return ret
	}
	return *o.HealthNumeric
}

// GetHealthNumericOk returns a tuple with the HealthNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetHealthNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.HealthNumeric) {
		return nil, false
	}
	return o.HealthNumeric, true
}

// HasHealthNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasHealthNumeric() bool {
	if o != nil && !IsNil(o.HealthNumeric) {
		return true
	}

	return false
}

// SetHealthNumeric gets a reference to the given int32 and assigns it to the HealthNumeric field.
func (o *DiskGroupsResourceInner) SetHealthNumeric(v int32) {
	o.HealthNumeric = &v
}

// GetHealthReason returns the HealthReason field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetHealthReason() string {
	if o == nil || IsNil(o.HealthReason) {
		var ret string
		return ret
	}
	return *o.HealthReason
}

// GetHealthReasonOk returns a tuple with the HealthReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetHealthReasonOk() (*string, bool) {
	if o == nil || IsNil(o.HealthReason) {
		return nil, false
	}
	return o.HealthReason, true
}

// HasHealthReason returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasHealthReason() bool {
	if o != nil && !IsNil(o.HealthReason) {
		return true
	}

	return false
}

// SetHealthReason gets a reference to the given string and assigns it to the HealthReason field.
func (o *DiskGroupsResourceInner) SetHealthReason(v string) {
	o.HealthReason = &v
}

// GetHealthReasonNumeric returns the HealthReasonNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetHealthReasonNumeric() int32 {
	if o == nil || IsNil(o.HealthReasonNumeric) {
		var ret int32
		return ret
	}
	return *o.HealthReasonNumeric
}

// GetHealthReasonNumericOk returns a tuple with the HealthReasonNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetHealthReasonNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.HealthReasonNumeric) {
		return nil, false
	}
	return o.HealthReasonNumeric, true
}

// HasHealthReasonNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasHealthReasonNumeric() bool {
	if o != nil && !IsNil(o.HealthReasonNumeric) {
		return true
	}

	return false
}

// SetHealthReasonNumeric gets a reference to the given int32 and assigns it to the HealthReasonNumeric field.
func (o *DiskGroupsResourceInner) SetHealthReasonNumeric(v int32) {
	o.HealthReasonNumeric = &v
}

// GetHealthRecommendation returns the HealthRecommendation field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetHealthRecommendation() string {
	if o == nil || IsNil(o.HealthRecommendation) {
		var ret string
		return ret
	}
	return *o.HealthRecommendation
}

// GetHealthRecommendationOk returns a tuple with the HealthRecommendation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetHealthRecommendationOk() (*string, bool) {
	if o == nil || IsNil(o.HealthRecommendation) {
		return nil, false
	}
	return o.HealthRecommendation, true
}

// HasHealthRecommendation returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasHealthRecommendation() bool {
	if o != nil && !IsNil(o.HealthRecommendation) {
		return true
	}

	return false
}

// SetHealthRecommendation gets a reference to the given string and assigns it to the HealthRecommendation field.
func (o *DiskGroupsResourceInner) SetHealthRecommendation(v string) {
	o.HealthRecommendation = &v
}

// GetHealthRecommendationNumeric returns the HealthRecommendationNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetHealthRecommendationNumeric() int32 {
	if o == nil || IsNil(o.HealthRecommendationNumeric) {
		var ret int32
		return ret
	}
	return *o.HealthRecommendationNumeric
}

// GetHealthRecommendationNumericOk returns a tuple with the HealthRecommendationNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetHealthRecommendationNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.HealthRecommendationNumeric) {
		return nil, false
	}
	return o.HealthRecommendationNumeric, true
}

// HasHealthRecommendationNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasHealthRecommendationNumeric() bool {
	if o != nil && !IsNil(o.HealthRecommendationNumeric) {
		return true
	}

	return false
}

// SetHealthRecommendationNumeric gets a reference to the given int32 and assigns it to the HealthRecommendationNumeric field.
func (o *DiskGroupsResourceInner) SetHealthRecommendationNumeric(v int32) {
	o.HealthRecommendationNumeric = &v
}

// GetInterleavedVolumeCount returns the InterleavedVolumeCount field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetInterleavedVolumeCount() int32 {
	if o == nil || IsNil(o.InterleavedVolumeCount) {
		var ret int32
		return ret
	}
	return *o.InterleavedVolumeCount
}

// GetInterleavedVolumeCountOk returns a tuple with the InterleavedVolumeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetInterleavedVolumeCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InterleavedVolumeCount) {
		return nil, false
	}
	return o.InterleavedVolumeCount, true
}

// HasInterleavedVolumeCount returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasInterleavedVolumeCount() bool {
	if o != nil && !IsNil(o.InterleavedVolumeCount) {
		return true
	}

	return false
}

// SetInterleavedVolumeCount gets a reference to the given int32 and assigns it to the InterleavedVolumeCount field.
func (o *DiskGroupsResourceInner) SetInterleavedVolumeCount(v int32) {
	o.InterleavedVolumeCount = &v
}

// GetIsJobAutoAbortable returns the IsJobAutoAbortable field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetIsJobAutoAbortable() string {
	if o == nil || IsNil(o.IsJobAutoAbortable) {
		var ret string
		return ret
	}
	return *o.IsJobAutoAbortable
}

// GetIsJobAutoAbortableOk returns a tuple with the IsJobAutoAbortable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetIsJobAutoAbortableOk() (*string, bool) {
	if o == nil || IsNil(o.IsJobAutoAbortable) {
		return nil, false
	}
	return o.IsJobAutoAbortable, true
}

// HasIsJobAutoAbortable returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasIsJobAutoAbortable() bool {
	if o != nil && !IsNil(o.IsJobAutoAbortable) {
		return true
	}

	return false
}

// SetIsJobAutoAbortable gets a reference to the given string and assigns it to the IsJobAutoAbortable field.
func (o *DiskGroupsResourceInner) SetIsJobAutoAbortable(v string) {
	o.IsJobAutoAbortable = &v
}

// GetIsJobAutoAbortableNumeric returns the IsJobAutoAbortableNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetIsJobAutoAbortableNumeric() int32 {
	if o == nil || IsNil(o.IsJobAutoAbortableNumeric) {
		var ret int32
		return ret
	}
	return *o.IsJobAutoAbortableNumeric
}

// GetIsJobAutoAbortableNumericOk returns a tuple with the IsJobAutoAbortableNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetIsJobAutoAbortableNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.IsJobAutoAbortableNumeric) {
		return nil, false
	}
	return o.IsJobAutoAbortableNumeric, true
}

// HasIsJobAutoAbortableNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasIsJobAutoAbortableNumeric() bool {
	if o != nil && !IsNil(o.IsJobAutoAbortableNumeric) {
		return true
	}

	return false
}

// SetIsJobAutoAbortableNumeric gets a reference to the given int32 and assigns it to the IsJobAutoAbortableNumeric field.
func (o *DiskGroupsResourceInner) SetIsJobAutoAbortableNumeric(v int32) {
	o.IsJobAutoAbortableNumeric = &v
}

// GetJobRunning returns the JobRunning field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetJobRunning() string {
	if o == nil || IsNil(o.JobRunning) {
		var ret string
		return ret
	}
	return *o.JobRunning
}

// GetJobRunningOk returns a tuple with the JobRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetJobRunningOk() (*string, bool) {
	if o == nil || IsNil(o.JobRunning) {
		return nil, false
	}
	return o.JobRunning, true
}

// HasJobRunning returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasJobRunning() bool {
	if o != nil && !IsNil(o.JobRunning) {
		return true
	}

	return false
}

// SetJobRunning gets a reference to the given string and assigns it to the JobRunning field.
func (o *DiskGroupsResourceInner) SetJobRunning(v string) {
	o.JobRunning = &v
}

// GetLargestFreePartitionSpace returns the LargestFreePartitionSpace field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetLargestFreePartitionSpace() string {
	if o == nil || IsNil(o.LargestFreePartitionSpace) {
		var ret string
		return ret
	}
	return *o.LargestFreePartitionSpace
}

// GetLargestFreePartitionSpaceOk returns a tuple with the LargestFreePartitionSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetLargestFreePartitionSpaceOk() (*string, bool) {
	if o == nil || IsNil(o.LargestFreePartitionSpace) {
		return nil, false
	}
	return o.LargestFreePartitionSpace, true
}

// HasLargestFreePartitionSpace returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasLargestFreePartitionSpace() bool {
	if o != nil && !IsNil(o.LargestFreePartitionSpace) {
		return true
	}

	return false
}

// SetLargestFreePartitionSpace gets a reference to the given string and assigns it to the LargestFreePartitionSpace field.
func (o *DiskGroupsResourceInner) SetLargestFreePartitionSpace(v string) {
	o.LargestFreePartitionSpace = &v
}

// GetLargestFreePartitionSpaceNumeric returns the LargestFreePartitionSpaceNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetLargestFreePartitionSpaceNumeric() int32 {
	if o == nil || IsNil(o.LargestFreePartitionSpaceNumeric) {
		var ret int32
		return ret
	}
	return *o.LargestFreePartitionSpaceNumeric
}

// GetLargestFreePartitionSpaceNumericOk returns a tuple with the LargestFreePartitionSpaceNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetLargestFreePartitionSpaceNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.LargestFreePartitionSpaceNumeric) {
		return nil, false
	}
	return o.LargestFreePartitionSpaceNumeric, true
}

// HasLargestFreePartitionSpaceNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasLargestFreePartitionSpaceNumeric() bool {
	if o != nil && !IsNil(o.LargestFreePartitionSpaceNumeric) {
		return true
	}

	return false
}

// SetLargestFreePartitionSpaceNumeric gets a reference to the given int32 and assigns it to the LargestFreePartitionSpaceNumeric field.
func (o *DiskGroupsResourceInner) SetLargestFreePartitionSpaceNumeric(v int32) {
	o.LargestFreePartitionSpaceNumeric = &v
}

// GetLinearVolumeBoundary returns the LinearVolumeBoundary field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetLinearVolumeBoundary() int32 {
	if o == nil || IsNil(o.LinearVolumeBoundary) {
		var ret int32
		return ret
	}
	return *o.LinearVolumeBoundary
}

// GetLinearVolumeBoundaryOk returns a tuple with the LinearVolumeBoundary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetLinearVolumeBoundaryOk() (*int32, bool) {
	if o == nil || IsNil(o.LinearVolumeBoundary) {
		return nil, false
	}
	return o.LinearVolumeBoundary, true
}

// HasLinearVolumeBoundary returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasLinearVolumeBoundary() bool {
	if o != nil && !IsNil(o.LinearVolumeBoundary) {
		return true
	}

	return false
}

// SetLinearVolumeBoundary gets a reference to the given int32 and assigns it to the LinearVolumeBoundary field.
func (o *DiskGroupsResourceInner) SetLinearVolumeBoundary(v int32) {
	o.LinearVolumeBoundary = &v
}

// GetLun returns the Lun field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetLun() int32 {
	if o == nil || IsNil(o.Lun) {
		var ret int32
		return ret
	}
	return *o.Lun
}

// GetLunOk returns a tuple with the Lun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetLunOk() (*int32, bool) {
	if o == nil || IsNil(o.Lun) {
		return nil, false
	}
	return o.Lun, true
}

// HasLun returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasLun() bool {
	if o != nil && !IsNil(o.Lun) {
		return true
	}

	return false
}

// SetLun gets a reference to the given int32 and assigns it to the Lun field.
func (o *DiskGroupsResourceInner) SetLun(v int32) {
	o.Lun = &v
}

// GetMetadataSize returns the MetadataSize field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetMetadataSize() string {
	if o == nil || IsNil(o.MetadataSize) {
		var ret string
		return ret
	}
	return *o.MetadataSize
}

// GetMetadataSizeOk returns a tuple with the MetadataSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetMetadataSizeOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataSize) {
		return nil, false
	}
	return o.MetadataSize, true
}

// HasMetadataSize returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasMetadataSize() bool {
	if o != nil && !IsNil(o.MetadataSize) {
		return true
	}

	return false
}

// SetMetadataSize gets a reference to the given string and assigns it to the MetadataSize field.
func (o *DiskGroupsResourceInner) SetMetadataSize(v string) {
	o.MetadataSize = &v
}

// GetMetadataSizeNumeric returns the MetadataSizeNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetMetadataSizeNumeric() int32 {
	if o == nil || IsNil(o.MetadataSizeNumeric) {
		var ret int32
		return ret
	}
	return *o.MetadataSizeNumeric
}

// GetMetadataSizeNumericOk returns a tuple with the MetadataSizeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetMetadataSizeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.MetadataSizeNumeric) {
		return nil, false
	}
	return o.MetadataSizeNumeric, true
}

// HasMetadataSizeNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasMetadataSizeNumeric() bool {
	if o != nil && !IsNil(o.MetadataSizeNumeric) {
		return true
	}

	return false
}

// SetMetadataSizeNumeric gets a reference to the given int32 and assigns it to the MetadataSizeNumeric field.
func (o *DiskGroupsResourceInner) SetMetadataSizeNumeric(v int32) {
	o.MetadataSizeNumeric = &v
}

// GetMinDriveSize returns the MinDriveSize field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetMinDriveSize() string {
	if o == nil || IsNil(o.MinDriveSize) {
		var ret string
		return ret
	}
	return *o.MinDriveSize
}

// GetMinDriveSizeOk returns a tuple with the MinDriveSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetMinDriveSizeOk() (*string, bool) {
	if o == nil || IsNil(o.MinDriveSize) {
		return nil, false
	}
	return o.MinDriveSize, true
}

// HasMinDriveSize returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasMinDriveSize() bool {
	if o != nil && !IsNil(o.MinDriveSize) {
		return true
	}

	return false
}

// SetMinDriveSize gets a reference to the given string and assigns it to the MinDriveSize field.
func (o *DiskGroupsResourceInner) SetMinDriveSize(v string) {
	o.MinDriveSize = &v
}

// GetMinDriveSizeNumeric returns the MinDriveSizeNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetMinDriveSizeNumeric() int32 {
	if o == nil || IsNil(o.MinDriveSizeNumeric) {
		var ret int32
		return ret
	}
	return *o.MinDriveSizeNumeric
}

// GetMinDriveSizeNumericOk returns a tuple with the MinDriveSizeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetMinDriveSizeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.MinDriveSizeNumeric) {
		return nil, false
	}
	return o.MinDriveSizeNumeric, true
}

// HasMinDriveSizeNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasMinDriveSizeNumeric() bool {
	if o != nil && !IsNil(o.MinDriveSizeNumeric) {
		return true
	}

	return false
}

// SetMinDriveSizeNumeric gets a reference to the given int32 and assigns it to the MinDriveSizeNumeric field.
func (o *DiskGroupsResourceInner) SetMinDriveSizeNumeric(v int32) {
	o.MinDriveSizeNumeric = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiskGroupsResourceInner) SetName(v string) {
	o.Name = &v
}

// GetNewPartitionLba returns the NewPartitionLba field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetNewPartitionLba() string {
	if o == nil || IsNil(o.NewPartitionLba) {
		var ret string
		return ret
	}
	return *o.NewPartitionLba
}

// GetNewPartitionLbaOk returns a tuple with the NewPartitionLba field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetNewPartitionLbaOk() (*string, bool) {
	if o == nil || IsNil(o.NewPartitionLba) {
		return nil, false
	}
	return o.NewPartitionLba, true
}

// HasNewPartitionLba returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasNewPartitionLba() bool {
	if o != nil && !IsNil(o.NewPartitionLba) {
		return true
	}

	return false
}

// SetNewPartitionLba gets a reference to the given string and assigns it to the NewPartitionLba field.
func (o *DiskGroupsResourceInner) SetNewPartitionLba(v string) {
	o.NewPartitionLba = &v
}

// GetNewPartitionLbaNumeric returns the NewPartitionLbaNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetNewPartitionLbaNumeric() int32 {
	if o == nil || IsNil(o.NewPartitionLbaNumeric) {
		var ret int32
		return ret
	}
	return *o.NewPartitionLbaNumeric
}

// GetNewPartitionLbaNumericOk returns a tuple with the NewPartitionLbaNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetNewPartitionLbaNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.NewPartitionLbaNumeric) {
		return nil, false
	}
	return o.NewPartitionLbaNumeric, true
}

// HasNewPartitionLbaNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasNewPartitionLbaNumeric() bool {
	if o != nil && !IsNil(o.NewPartitionLbaNumeric) {
		return true
	}

	return false
}

// SetNewPartitionLbaNumeric gets a reference to the given int32 and assigns it to the NewPartitionLbaNumeric field.
func (o *DiskGroupsResourceInner) SetNewPartitionLbaNumeric(v int32) {
	o.NewPartitionLbaNumeric = &v
}

// GetNumArrayPartitions returns the NumArrayPartitions field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetNumArrayPartitions() int32 {
	if o == nil || IsNil(o.NumArrayPartitions) {
		var ret int32
		return ret
	}
	return *o.NumArrayPartitions
}

// GetNumArrayPartitionsOk returns a tuple with the NumArrayPartitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetNumArrayPartitionsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumArrayPartitions) {
		return nil, false
	}
	return o.NumArrayPartitions, true
}

// HasNumArrayPartitions returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasNumArrayPartitions() bool {
	if o != nil && !IsNil(o.NumArrayPartitions) {
		return true
	}

	return false
}

// SetNumArrayPartitions gets a reference to the given int32 and assigns it to the NumArrayPartitions field.
func (o *DiskGroupsResourceInner) SetNumArrayPartitions(v int32) {
	o.NumArrayPartitions = &v
}

// GetNumDrivesPerLowLevelArray returns the NumDrivesPerLowLevelArray field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetNumDrivesPerLowLevelArray() int32 {
	if o == nil || IsNil(o.NumDrivesPerLowLevelArray) {
		var ret int32
		return ret
	}
	return *o.NumDrivesPerLowLevelArray
}

// GetNumDrivesPerLowLevelArrayOk returns a tuple with the NumDrivesPerLowLevelArray field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetNumDrivesPerLowLevelArrayOk() (*int32, bool) {
	if o == nil || IsNil(o.NumDrivesPerLowLevelArray) {
		return nil, false
	}
	return o.NumDrivesPerLowLevelArray, true
}

// HasNumDrivesPerLowLevelArray returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasNumDrivesPerLowLevelArray() bool {
	if o != nil && !IsNil(o.NumDrivesPerLowLevelArray) {
		return true
	}

	return false
}

// SetNumDrivesPerLowLevelArray gets a reference to the given int32 and assigns it to the NumDrivesPerLowLevelArray field.
func (o *DiskGroupsResourceInner) SetNumDrivesPerLowLevelArray(v int32) {
	o.NumDrivesPerLowLevelArray = &v
}

// GetNumExpansionPartitions returns the NumExpansionPartitions field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetNumExpansionPartitions() int32 {
	if o == nil || IsNil(o.NumExpansionPartitions) {
		var ret int32
		return ret
	}
	return *o.NumExpansionPartitions
}

// GetNumExpansionPartitionsOk returns a tuple with the NumExpansionPartitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetNumExpansionPartitionsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumExpansionPartitions) {
		return nil, false
	}
	return o.NumExpansionPartitions, true
}

// HasNumExpansionPartitions returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasNumExpansionPartitions() bool {
	if o != nil && !IsNil(o.NumExpansionPartitions) {
		return true
	}

	return false
}

// SetNumExpansionPartitions gets a reference to the given int32 and assigns it to the NumExpansionPartitions field.
func (o *DiskGroupsResourceInner) SetNumExpansionPartitions(v int32) {
	o.NumExpansionPartitions = &v
}

// GetNumPartitionSegments returns the NumPartitionSegments field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetNumPartitionSegments() int32 {
	if o == nil || IsNil(o.NumPartitionSegments) {
		var ret int32
		return ret
	}
	return *o.NumPartitionSegments
}

// GetNumPartitionSegmentsOk returns a tuple with the NumPartitionSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetNumPartitionSegmentsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumPartitionSegments) {
		return nil, false
	}
	return o.NumPartitionSegments, true
}

// HasNumPartitionSegments returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasNumPartitionSegments() bool {
	if o != nil && !IsNil(o.NumPartitionSegments) {
		return true
	}

	return false
}

// SetNumPartitionSegments gets a reference to the given int32 and assigns it to the NumPartitionSegments field.
func (o *DiskGroupsResourceInner) SetNumPartitionSegments(v int32) {
	o.NumPartitionSegments = &v
}

// GetOverhead returns the Overhead field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetOverhead() string {
	if o == nil || IsNil(o.Overhead) {
		var ret string
		return ret
	}
	return *o.Overhead
}

// GetOverheadOk returns a tuple with the Overhead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetOverheadOk() (*string, bool) {
	if o == nil || IsNil(o.Overhead) {
		return nil, false
	}
	return o.Overhead, true
}

// HasOverhead returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasOverhead() bool {
	if o != nil && !IsNil(o.Overhead) {
		return true
	}

	return false
}

// SetOverhead gets a reference to the given string and assigns it to the Overhead field.
func (o *DiskGroupsResourceInner) SetOverhead(v string) {
	o.Overhead = &v
}

// GetOverheadNumeric returns the OverheadNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetOverheadNumeric() int32 {
	if o == nil || IsNil(o.OverheadNumeric) {
		var ret int32
		return ret
	}
	return *o.OverheadNumeric
}

// GetOverheadNumericOk returns a tuple with the OverheadNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetOverheadNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.OverheadNumeric) {
		return nil, false
	}
	return o.OverheadNumeric, true
}

// HasOverheadNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasOverheadNumeric() bool {
	if o != nil && !IsNil(o.OverheadNumeric) {
		return true
	}

	return false
}

// SetOverheadNumeric gets a reference to the given int32 and assigns it to the OverheadNumeric field.
func (o *DiskGroupsResourceInner) SetOverheadNumeric(v int32) {
	o.OverheadNumeric = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *DiskGroupsResourceInner) SetOwner(v string) {
	o.Owner = &v
}

// GetOwnerNumeric returns the OwnerNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetOwnerNumeric() int32 {
	if o == nil || IsNil(o.OwnerNumeric) {
		var ret int32
		return ret
	}
	return *o.OwnerNumeric
}

// GetOwnerNumericOk returns a tuple with the OwnerNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetOwnerNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerNumeric) {
		return nil, false
	}
	return o.OwnerNumeric, true
}

// HasOwnerNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasOwnerNumeric() bool {
	if o != nil && !IsNil(o.OwnerNumeric) {
		return true
	}

	return false
}

// SetOwnerNumeric gets a reference to the given int32 and assigns it to the OwnerNumeric field.
func (o *DiskGroupsResourceInner) SetOwnerNumeric(v int32) {
	o.OwnerNumeric = &v
}

// GetPerformanceRank returns the PerformanceRank field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPerformanceRank() int32 {
	if o == nil || IsNil(o.PerformanceRank) {
		var ret int32
		return ret
	}
	return *o.PerformanceRank
}

// GetPerformanceRankOk returns a tuple with the PerformanceRank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPerformanceRankOk() (*int32, bool) {
	if o == nil || IsNil(o.PerformanceRank) {
		return nil, false
	}
	return o.PerformanceRank, true
}

// HasPerformanceRank returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPerformanceRank() bool {
	if o != nil && !IsNil(o.PerformanceRank) {
		return true
	}

	return false
}

// SetPerformanceRank gets a reference to the given int32 and assigns it to the PerformanceRank field.
func (o *DiskGroupsResourceInner) SetPerformanceRank(v int32) {
	o.PerformanceRank = &v
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPool() string {
	if o == nil || IsNil(o.Pool) {
		var ret string
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPoolOk() (*string, bool) {
	if o == nil || IsNil(o.Pool) {
		return nil, false
	}
	return o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPool() bool {
	if o != nil && !IsNil(o.Pool) {
		return true
	}

	return false
}

// SetPool gets a reference to the given string and assigns it to the Pool field.
func (o *DiskGroupsResourceInner) SetPool(v string) {
	o.Pool = &v
}

// GetPoolPercentage returns the PoolPercentage field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPoolPercentage() int32 {
	if o == nil || IsNil(o.PoolPercentage) {
		var ret int32
		return ret
	}
	return *o.PoolPercentage
}

// GetPoolPercentageOk returns a tuple with the PoolPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPoolPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.PoolPercentage) {
		return nil, false
	}
	return o.PoolPercentage, true
}

// HasPoolPercentage returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPoolPercentage() bool {
	if o != nil && !IsNil(o.PoolPercentage) {
		return true
	}

	return false
}

// SetPoolPercentage gets a reference to the given int32 and assigns it to the PoolPercentage field.
func (o *DiskGroupsResourceInner) SetPoolPercentage(v int32) {
	o.PoolPercentage = &v
}

// GetPoolSectorFormat returns the PoolSectorFormat field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPoolSectorFormat() string {
	if o == nil || IsNil(o.PoolSectorFormat) {
		var ret string
		return ret
	}
	return *o.PoolSectorFormat
}

// GetPoolSectorFormatOk returns a tuple with the PoolSectorFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPoolSectorFormatOk() (*string, bool) {
	if o == nil || IsNil(o.PoolSectorFormat) {
		return nil, false
	}
	return o.PoolSectorFormat, true
}

// HasPoolSectorFormat returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPoolSectorFormat() bool {
	if o != nil && !IsNil(o.PoolSectorFormat) {
		return true
	}

	return false
}

// SetPoolSectorFormat gets a reference to the given string and assigns it to the PoolSectorFormat field.
func (o *DiskGroupsResourceInner) SetPoolSectorFormat(v string) {
	o.PoolSectorFormat = &v
}

// GetPoolSectorFormatNumeric returns the PoolSectorFormatNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPoolSectorFormatNumeric() int32 {
	if o == nil || IsNil(o.PoolSectorFormatNumeric) {
		var ret int32
		return ret
	}
	return *o.PoolSectorFormatNumeric
}

// GetPoolSectorFormatNumericOk returns a tuple with the PoolSectorFormatNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPoolSectorFormatNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.PoolSectorFormatNumeric) {
		return nil, false
	}
	return o.PoolSectorFormatNumeric, true
}

// HasPoolSectorFormatNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPoolSectorFormatNumeric() bool {
	if o != nil && !IsNil(o.PoolSectorFormatNumeric) {
		return true
	}

	return false
}

// SetPoolSectorFormatNumeric gets a reference to the given int32 and assigns it to the PoolSectorFormatNumeric field.
func (o *DiskGroupsResourceInner) SetPoolSectorFormatNumeric(v int32) {
	o.PoolSectorFormatNumeric = &v
}

// GetPoolSerialNumber returns the PoolSerialNumber field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPoolSerialNumber() string {
	if o == nil || IsNil(o.PoolSerialNumber) {
		var ret string
		return ret
	}
	return *o.PoolSerialNumber
}

// GetPoolSerialNumberOk returns a tuple with the PoolSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPoolSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PoolSerialNumber) {
		return nil, false
	}
	return o.PoolSerialNumber, true
}

// HasPoolSerialNumber returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPoolSerialNumber() bool {
	if o != nil && !IsNil(o.PoolSerialNumber) {
		return true
	}

	return false
}

// SetPoolSerialNumber gets a reference to the given string and assigns it to the PoolSerialNumber field.
func (o *DiskGroupsResourceInner) SetPoolSerialNumber(v string) {
	o.PoolSerialNumber = &v
}

// GetPoolsUrl returns the PoolsUrl field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPoolsUrl() string {
	if o == nil || IsNil(o.PoolsUrl) {
		var ret string
		return ret
	}
	return *o.PoolsUrl
}

// GetPoolsUrlOk returns a tuple with the PoolsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPoolsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PoolsUrl) {
		return nil, false
	}
	return o.PoolsUrl, true
}

// HasPoolsUrl returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPoolsUrl() bool {
	if o != nil && !IsNil(o.PoolsUrl) {
		return true
	}

	return false
}

// SetPoolsUrl gets a reference to the given string and assigns it to the PoolsUrl field.
func (o *DiskGroupsResourceInner) SetPoolsUrl(v string) {
	o.PoolsUrl = &v
}

// GetPreferredOwner returns the PreferredOwner field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPreferredOwner() string {
	if o == nil || IsNil(o.PreferredOwner) {
		var ret string
		return ret
	}
	return *o.PreferredOwner
}

// GetPreferredOwnerOk returns a tuple with the PreferredOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPreferredOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredOwner) {
		return nil, false
	}
	return o.PreferredOwner, true
}

// HasPreferredOwner returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPreferredOwner() bool {
	if o != nil && !IsNil(o.PreferredOwner) {
		return true
	}

	return false
}

// SetPreferredOwner gets a reference to the given string and assigns it to the PreferredOwner field.
func (o *DiskGroupsResourceInner) SetPreferredOwner(v string) {
	o.PreferredOwner = &v
}

// GetPreferredOwnerNumeric returns the PreferredOwnerNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetPreferredOwnerNumeric() int32 {
	if o == nil || IsNil(o.PreferredOwnerNumeric) {
		var ret int32
		return ret
	}
	return *o.PreferredOwnerNumeric
}

// GetPreferredOwnerNumericOk returns a tuple with the PreferredOwnerNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetPreferredOwnerNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.PreferredOwnerNumeric) {
		return nil, false
	}
	return o.PreferredOwnerNumeric, true
}

// HasPreferredOwnerNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasPreferredOwnerNumeric() bool {
	if o != nil && !IsNil(o.PreferredOwnerNumeric) {
		return true
	}

	return false
}

// SetPreferredOwnerNumeric gets a reference to the given int32 and assigns it to the PreferredOwnerNumeric field.
func (o *DiskGroupsResourceInner) SetPreferredOwnerNumeric(v int32) {
	o.PreferredOwnerNumeric = &v
}

// GetRaidtype returns the Raidtype field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetRaidtype() string {
	if o == nil || IsNil(o.Raidtype) {
		var ret string
		return ret
	}
	return *o.Raidtype
}

// GetRaidtypeOk returns a tuple with the Raidtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetRaidtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Raidtype) {
		return nil, false
	}
	return o.Raidtype, true
}

// HasRaidtype returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasRaidtype() bool {
	if o != nil && !IsNil(o.Raidtype) {
		return true
	}

	return false
}

// SetRaidtype gets a reference to the given string and assigns it to the Raidtype field.
func (o *DiskGroupsResourceInner) SetRaidtype(v string) {
	o.Raidtype = &v
}

// GetRaidtypeNumeric returns the RaidtypeNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetRaidtypeNumeric() int32 {
	if o == nil || IsNil(o.RaidtypeNumeric) {
		var ret int32
		return ret
	}
	return *o.RaidtypeNumeric
}

// GetRaidtypeNumericOk returns a tuple with the RaidtypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetRaidtypeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.RaidtypeNumeric) {
		return nil, false
	}
	return o.RaidtypeNumeric, true
}

// HasRaidtypeNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasRaidtypeNumeric() bool {
	if o != nil && !IsNil(o.RaidtypeNumeric) {
		return true
	}

	return false
}

// SetRaidtypeNumeric gets a reference to the given int32 and assigns it to the RaidtypeNumeric field.
func (o *DiskGroupsResourceInner) SetRaidtypeNumeric(v int32) {
	o.RaidtypeNumeric = &v
}

// GetRawSize returns the RawSize field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetRawSize() string {
	if o == nil || IsNil(o.RawSize) {
		var ret string
		return ret
	}
	return *o.RawSize
}

// GetRawSizeOk returns a tuple with the RawSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetRawSizeOk() (*string, bool) {
	if o == nil || IsNil(o.RawSize) {
		return nil, false
	}
	return o.RawSize, true
}

// HasRawSize returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasRawSize() bool {
	if o != nil && !IsNil(o.RawSize) {
		return true
	}

	return false
}

// SetRawSize gets a reference to the given string and assigns it to the RawSize field.
func (o *DiskGroupsResourceInner) SetRawSize(v string) {
	o.RawSize = &v
}

// GetRawSizeNumeric returns the RawSizeNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetRawSizeNumeric() int32 {
	if o == nil || IsNil(o.RawSizeNumeric) {
		var ret int32
		return ret
	}
	return *o.RawSizeNumeric
}

// GetRawSizeNumericOk returns a tuple with the RawSizeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetRawSizeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.RawSizeNumeric) {
		return nil, false
	}
	return o.RawSizeNumeric, true
}

// HasRawSizeNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasRawSizeNumeric() bool {
	if o != nil && !IsNil(o.RawSizeNumeric) {
		return true
	}

	return false
}

// SetRawSizeNumeric gets a reference to the given int32 and assigns it to the RawSizeNumeric field.
func (o *DiskGroupsResourceInner) SetRawSizeNumeric(v int32) {
	o.RawSizeNumeric = &v
}

// GetReadAheadEnabled returns the ReadAheadEnabled field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetReadAheadEnabled() string {
	if o == nil || IsNil(o.ReadAheadEnabled) {
		var ret string
		return ret
	}
	return *o.ReadAheadEnabled
}

// GetReadAheadEnabledOk returns a tuple with the ReadAheadEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetReadAheadEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.ReadAheadEnabled) {
		return nil, false
	}
	return o.ReadAheadEnabled, true
}

// HasReadAheadEnabled returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasReadAheadEnabled() bool {
	if o != nil && !IsNil(o.ReadAheadEnabled) {
		return true
	}

	return false
}

// SetReadAheadEnabled gets a reference to the given string and assigns it to the ReadAheadEnabled field.
func (o *DiskGroupsResourceInner) SetReadAheadEnabled(v string) {
	o.ReadAheadEnabled = &v
}

// GetReadAheadEnabledNumeric returns the ReadAheadEnabledNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetReadAheadEnabledNumeric() int32 {
	if o == nil || IsNil(o.ReadAheadEnabledNumeric) {
		var ret int32
		return ret
	}
	return *o.ReadAheadEnabledNumeric
}

// GetReadAheadEnabledNumericOk returns a tuple with the ReadAheadEnabledNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetReadAheadEnabledNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadAheadEnabledNumeric) {
		return nil, false
	}
	return o.ReadAheadEnabledNumeric, true
}

// HasReadAheadEnabledNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasReadAheadEnabledNumeric() bool {
	if o != nil && !IsNil(o.ReadAheadEnabledNumeric) {
		return true
	}

	return false
}

// SetReadAheadEnabledNumeric gets a reference to the given int32 and assigns it to the ReadAheadEnabledNumeric field.
func (o *DiskGroupsResourceInner) SetReadAheadEnabledNumeric(v int32) {
	o.ReadAheadEnabledNumeric = &v
}

// GetScrubDurationGoal returns the ScrubDurationGoal field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetScrubDurationGoal() int32 {
	if o == nil || IsNil(o.ScrubDurationGoal) {
		var ret int32
		return ret
	}
	return *o.ScrubDurationGoal
}

// GetScrubDurationGoalOk returns a tuple with the ScrubDurationGoal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetScrubDurationGoalOk() (*int32, bool) {
	if o == nil || IsNil(o.ScrubDurationGoal) {
		return nil, false
	}
	return o.ScrubDurationGoal, true
}

// HasScrubDurationGoal returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasScrubDurationGoal() bool {
	if o != nil && !IsNil(o.ScrubDurationGoal) {
		return true
	}

	return false
}

// SetScrubDurationGoal gets a reference to the given int32 and assigns it to the ScrubDurationGoal field.
func (o *DiskGroupsResourceInner) SetScrubDurationGoal(v int32) {
	o.ScrubDurationGoal = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *DiskGroupsResourceInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *DiskGroupsResourceInner) SetSize(v string) {
	o.Size = &v
}

// GetSizeNumeric returns the SizeNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetSizeNumeric() int32 {
	if o == nil || IsNil(o.SizeNumeric) {
		var ret int32
		return ret
	}
	return *o.SizeNumeric
}

// GetSizeNumericOk returns a tuple with the SizeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetSizeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.SizeNumeric) {
		return nil, false
	}
	return o.SizeNumeric, true
}

// HasSizeNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasSizeNumeric() bool {
	if o != nil && !IsNil(o.SizeNumeric) {
		return true
	}

	return false
}

// SetSizeNumeric gets a reference to the given int32 and assigns it to the SizeNumeric field.
func (o *DiskGroupsResourceInner) SetSizeNumeric(v int32) {
	o.SizeNumeric = &v
}

// GetSparecount returns the Sparecount field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetSparecount() int32 {
	if o == nil || IsNil(o.Sparecount) {
		var ret int32
		return ret
	}
	return *o.Sparecount
}

// GetSparecountOk returns a tuple with the Sparecount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetSparecountOk() (*int32, bool) {
	if o == nil || IsNil(o.Sparecount) {
		return nil, false
	}
	return o.Sparecount, true
}

// HasSparecount returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasSparecount() bool {
	if o != nil && !IsNil(o.Sparecount) {
		return true
	}

	return false
}

// SetSparecount gets a reference to the given int32 and assigns it to the Sparecount field.
func (o *DiskGroupsResourceInner) SetSparecount(v int32) {
	o.Sparecount = &v
}

// GetSpear returns the Spear field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetSpear() string {
	if o == nil || IsNil(o.Spear) {
		var ret string
		return ret
	}
	return *o.Spear
}

// GetSpearOk returns a tuple with the Spear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetSpearOk() (*string, bool) {
	if o == nil || IsNil(o.Spear) {
		return nil, false
	}
	return o.Spear, true
}

// HasSpear returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasSpear() bool {
	if o != nil && !IsNil(o.Spear) {
		return true
	}

	return false
}

// SetSpear gets a reference to the given string and assigns it to the Spear field.
func (o *DiskGroupsResourceInner) SetSpear(v string) {
	o.Spear = &v
}

// GetSpearNumeric returns the SpearNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetSpearNumeric() int32 {
	if o == nil || IsNil(o.SpearNumeric) {
		var ret int32
		return ret
	}
	return *o.SpearNumeric
}

// GetSpearNumericOk returns a tuple with the SpearNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetSpearNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.SpearNumeric) {
		return nil, false
	}
	return o.SpearNumeric, true
}

// HasSpearNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasSpearNumeric() bool {
	if o != nil && !IsNil(o.SpearNumeric) {
		return true
	}

	return false
}

// SetSpearNumeric gets a reference to the given int32 and assigns it to the SpearNumeric field.
func (o *DiskGroupsResourceInner) SetSpearNumeric(v int32) {
	o.SpearNumeric = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DiskGroupsResourceInner) SetStatus(v string) {
	o.Status = &v
}

// GetStatusNumeric returns the StatusNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetStatusNumeric() int32 {
	if o == nil || IsNil(o.StatusNumeric) {
		var ret int32
		return ret
	}
	return *o.StatusNumeric
}

// GetStatusNumericOk returns a tuple with the StatusNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetStatusNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusNumeric) {
		return nil, false
	}
	return o.StatusNumeric, true
}

// HasStatusNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasStatusNumeric() bool {
	if o != nil && !IsNil(o.StatusNumeric) {
		return true
	}

	return false
}

// SetStatusNumeric gets a reference to the given int32 and assigns it to the StatusNumeric field.
func (o *DiskGroupsResourceInner) SetStatusNumeric(v int32) {
	o.StatusNumeric = &v
}

// GetStorageTier returns the StorageTier field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetStorageTier() string {
	if o == nil || IsNil(o.StorageTier) {
		var ret string
		return ret
	}
	return *o.StorageTier
}

// GetStorageTierOk returns a tuple with the StorageTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetStorageTierOk() (*string, bool) {
	if o == nil || IsNil(o.StorageTier) {
		return nil, false
	}
	return o.StorageTier, true
}

// HasStorageTier returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasStorageTier() bool {
	if o != nil && !IsNil(o.StorageTier) {
		return true
	}

	return false
}

// SetStorageTier gets a reference to the given string and assigns it to the StorageTier field.
func (o *DiskGroupsResourceInner) SetStorageTier(v string) {
	o.StorageTier = &v
}

// GetStorageTierNumeric returns the StorageTierNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetStorageTierNumeric() int32 {
	if o == nil || IsNil(o.StorageTierNumeric) {
		var ret int32
		return ret
	}
	return *o.StorageTierNumeric
}

// GetStorageTierNumericOk returns a tuple with the StorageTierNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetStorageTierNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.StorageTierNumeric) {
		return nil, false
	}
	return o.StorageTierNumeric, true
}

// HasStorageTierNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasStorageTierNumeric() bool {
	if o != nil && !IsNil(o.StorageTierNumeric) {
		return true
	}

	return false
}

// SetStorageTierNumeric gets a reference to the given int32 and assigns it to the StorageTierNumeric field.
func (o *DiskGroupsResourceInner) SetStorageTierNumeric(v int32) {
	o.StorageTierNumeric = &v
}

// GetStorageType returns the StorageType field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetStorageType() string {
	if o == nil || IsNil(o.StorageType) {
		var ret string
		return ret
	}
	return *o.StorageType
}

// GetStorageTypeOk returns a tuple with the StorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StorageType) {
		return nil, false
	}
	return o.StorageType, true
}

// HasStorageType returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasStorageType() bool {
	if o != nil && !IsNil(o.StorageType) {
		return true
	}

	return false
}

// SetStorageType gets a reference to the given string and assigns it to the StorageType field.
func (o *DiskGroupsResourceInner) SetStorageType(v string) {
	o.StorageType = &v
}

// GetStorageTypeNumeric returns the StorageTypeNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetStorageTypeNumeric() int32 {
	if o == nil || IsNil(o.StorageTypeNumeric) {
		var ret int32
		return ret
	}
	return *o.StorageTypeNumeric
}

// GetStorageTypeNumericOk returns a tuple with the StorageTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetStorageTypeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.StorageTypeNumeric) {
		return nil, false
	}
	return o.StorageTypeNumeric, true
}

// HasStorageTypeNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasStorageTypeNumeric() bool {
	if o != nil && !IsNil(o.StorageTypeNumeric) {
		return true
	}

	return false
}

// SetStorageTypeNumeric gets a reference to the given int32 and assigns it to the StorageTypeNumeric field.
func (o *DiskGroupsResourceInner) SetStorageTypeNumeric(v int32) {
	o.StorageTypeNumeric = &v
}

// GetStripeWidth returns the StripeWidth field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetStripeWidth() string {
	if o == nil || IsNil(o.StripeWidth) {
		var ret string
		return ret
	}
	return *o.StripeWidth
}

// GetStripeWidthOk returns a tuple with the StripeWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetStripeWidthOk() (*string, bool) {
	if o == nil || IsNil(o.StripeWidth) {
		return nil, false
	}
	return o.StripeWidth, true
}

// HasStripeWidth returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasStripeWidth() bool {
	if o != nil && !IsNil(o.StripeWidth) {
		return true
	}

	return false
}

// SetStripeWidth gets a reference to the given string and assigns it to the StripeWidth field.
func (o *DiskGroupsResourceInner) SetStripeWidth(v string) {
	o.StripeWidth = &v
}

// GetStripeWidthNumeric returns the StripeWidthNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetStripeWidthNumeric() int32 {
	if o == nil || IsNil(o.StripeWidthNumeric) {
		var ret int32
		return ret
	}
	return *o.StripeWidthNumeric
}

// GetStripeWidthNumericOk returns a tuple with the StripeWidthNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetStripeWidthNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.StripeWidthNumeric) {
		return nil, false
	}
	return o.StripeWidthNumeric, true
}

// HasStripeWidthNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasStripeWidthNumeric() bool {
	if o != nil && !IsNil(o.StripeWidthNumeric) {
		return true
	}

	return false
}

// SetStripeWidthNumeric gets a reference to the given int32 and assigns it to the StripeWidthNumeric field.
func (o *DiskGroupsResourceInner) SetStripeWidthNumeric(v int32) {
	o.StripeWidthNumeric = &v
}

// GetTargetSpareCapacity returns the TargetSpareCapacity field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetTargetSpareCapacity() string {
	if o == nil || IsNil(o.TargetSpareCapacity) {
		var ret string
		return ret
	}
	return *o.TargetSpareCapacity
}

// GetTargetSpareCapacityOk returns a tuple with the TargetSpareCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetTargetSpareCapacityOk() (*string, bool) {
	if o == nil || IsNil(o.TargetSpareCapacity) {
		return nil, false
	}
	return o.TargetSpareCapacity, true
}

// HasTargetSpareCapacity returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasTargetSpareCapacity() bool {
	if o != nil && !IsNil(o.TargetSpareCapacity) {
		return true
	}

	return false
}

// SetTargetSpareCapacity gets a reference to the given string and assigns it to the TargetSpareCapacity field.
func (o *DiskGroupsResourceInner) SetTargetSpareCapacity(v string) {
	o.TargetSpareCapacity = &v
}

// GetTargetSpareCapacityNumeric returns the TargetSpareCapacityNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetTargetSpareCapacityNumeric() int32 {
	if o == nil || IsNil(o.TargetSpareCapacityNumeric) {
		var ret int32
		return ret
	}
	return *o.TargetSpareCapacityNumeric
}

// GetTargetSpareCapacityNumericOk returns a tuple with the TargetSpareCapacityNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetTargetSpareCapacityNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.TargetSpareCapacityNumeric) {
		return nil, false
	}
	return o.TargetSpareCapacityNumeric, true
}

// HasTargetSpareCapacityNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasTargetSpareCapacityNumeric() bool {
	if o != nil && !IsNil(o.TargetSpareCapacityNumeric) {
		return true
	}

	return false
}

// SetTargetSpareCapacityNumeric gets a reference to the given int32 and assigns it to the TargetSpareCapacityNumeric field.
func (o *DiskGroupsResourceInner) SetTargetSpareCapacityNumeric(v int32) {
	o.TargetSpareCapacityNumeric = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *DiskGroupsResourceInner) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *DiskGroupsResourceInner) SetUrl(v string) {
	o.Url = &v
}

// GetWriteBackEnabled returns the WriteBackEnabled field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetWriteBackEnabled() string {
	if o == nil || IsNil(o.WriteBackEnabled) {
		var ret string
		return ret
	}
	return *o.WriteBackEnabled
}

// GetWriteBackEnabledOk returns a tuple with the WriteBackEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetWriteBackEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.WriteBackEnabled) {
		return nil, false
	}
	return o.WriteBackEnabled, true
}

// HasWriteBackEnabled returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasWriteBackEnabled() bool {
	if o != nil && !IsNil(o.WriteBackEnabled) {
		return true
	}

	return false
}

// SetWriteBackEnabled gets a reference to the given string and assigns it to the WriteBackEnabled field.
func (o *DiskGroupsResourceInner) SetWriteBackEnabled(v string) {
	o.WriteBackEnabled = &v
}

// GetWriteBackEnabledNumeric returns the WriteBackEnabledNumeric field value if set, zero value otherwise.
func (o *DiskGroupsResourceInner) GetWriteBackEnabledNumeric() int32 {
	if o == nil || IsNil(o.WriteBackEnabledNumeric) {
		var ret int32
		return ret
	}
	return *o.WriteBackEnabledNumeric
}

// GetWriteBackEnabledNumericOk returns a tuple with the WriteBackEnabledNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskGroupsResourceInner) GetWriteBackEnabledNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteBackEnabledNumeric) {
		return nil, false
	}
	return o.WriteBackEnabledNumeric, true
}

// HasWriteBackEnabledNumeric returns a boolean if a field has been set.
func (o *DiskGroupsResourceInner) HasWriteBackEnabledNumeric() bool {
	if o != nil && !IsNil(o.WriteBackEnabledNumeric) {
		return true
	}

	return false
}

// SetWriteBackEnabledNumeric gets a reference to the given int32 and assigns it to the WriteBackEnabledNumeric field.
func (o *DiskGroupsResourceInner) SetWriteBackEnabledNumeric(v int32) {
	o.WriteBackEnabledNumeric = &v
}

func (o DiskGroupsResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiskGroupsResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.ActualSpareCapacity) {
		toSerialize["actual-spare-capacity"] = o.ActualSpareCapacity
	}
	if !IsNil(o.ActualSpareCapacityNumeric) {
		toSerialize["actual-spare-capacity-numeric"] = o.ActualSpareCapacityNumeric
	}
	if !IsNil(o.AllocatedPages) {
		toSerialize["allocated-pages"] = o.AllocatedPages
	}
	if !IsNil(o.ArrayDriveType) {
		toSerialize["array-drive-type"] = o.ArrayDriveType
	}
	if !IsNil(o.ArrayDriveTypeNumeric) {
		toSerialize["array-drive-type-numeric"] = o.ArrayDriveTypeNumeric
	}
	if !IsNil(o.AvailablePages) {
		toSerialize["available-pages"] = o.AvailablePages
	}
	if !IsNil(o.Blocks) {
		toSerialize["blocks"] = o.Blocks
	}
	if !IsNil(o.Blocksize) {
		toSerialize["blocksize"] = o.Blocksize
	}
	if !IsNil(o.CacheFlushPeriod) {
		toSerialize["cache-flush-period"] = o.CacheFlushPeriod
	}
	if !IsNil(o.CacheReadAhead) {
		toSerialize["cache-read-ahead"] = o.CacheReadAhead
	}
	if !IsNil(o.CacheReadAheadNumeric) {
		toSerialize["cache-read-ahead-numeric"] = o.CacheReadAheadNumeric
	}
	if !IsNil(o.Chunksize) {
		toSerialize["chunksize"] = o.Chunksize
	}
	if !IsNil(o.CreateDate) {
		toSerialize["create-date"] = o.CreateDate
	}
	if !IsNil(o.CreateDateNumeric) {
		toSerialize["create-date-numeric"] = o.CreateDateNumeric
	}
	if !IsNil(o.CriticalCapacity) {
		toSerialize["critical-capacity"] = o.CriticalCapacity
	}
	if !IsNil(o.CriticalCapacityNumeric) {
		toSerialize["critical-capacity-numeric"] = o.CriticalCapacityNumeric
	}
	if !IsNil(o.CurrentJob) {
		toSerialize["current-job"] = o.CurrentJob
	}
	if !IsNil(o.CurrentJobCompletion) {
		toSerialize["current-job-completion"] = o.CurrentJobCompletion
	}
	if !IsNil(o.CurrentJobNumeric) {
		toSerialize["current-job-numeric"] = o.CurrentJobNumeric
	}
	if !IsNil(o.DegradedCapacity) {
		toSerialize["degraded-capacity"] = o.DegradedCapacity
	}
	if !IsNil(o.DegradedCapacityNumeric) {
		toSerialize["degraded-capacity-numeric"] = o.DegradedCapacityNumeric
	}
	if !IsNil(o.DiskDescription) {
		toSerialize["disk-description"] = o.DiskDescription
	}
	if !IsNil(o.DiskDescriptionNumeric) {
		toSerialize["disk-description-numeric"] = o.DiskDescriptionNumeric
	}
	if !IsNil(o.DiskDsdDelayVdisk) {
		toSerialize["disk-dsd-delay-vdisk"] = o.DiskDsdDelayVdisk
	}
	if !IsNil(o.DiskDsdEnableVdisk) {
		toSerialize["disk-dsd-enable-vdisk"] = o.DiskDsdEnableVdisk
	}
	if !IsNil(o.DiskDsdEnableVdiskNumeric) {
		toSerialize["disk-dsd-enable-vdisk-numeric"] = o.DiskDsdEnableVdiskNumeric
	}
	if !IsNil(o.Diskcount) {
		toSerialize["diskcount"] = o.Diskcount
	}
	if !IsNil(o.ExtendedStatus) {
		toSerialize["extended-status"] = o.ExtendedStatus
	}
	if !IsNil(o.Freespace) {
		toSerialize["freespace"] = o.Freespace
	}
	if !IsNil(o.FreespaceNumeric) {
		toSerialize["freespace-numeric"] = o.FreespaceNumeric
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.HealthNumeric) {
		toSerialize["health-numeric"] = o.HealthNumeric
	}
	if !IsNil(o.HealthReason) {
		toSerialize["health-reason"] = o.HealthReason
	}
	if !IsNil(o.HealthReasonNumeric) {
		toSerialize["health-reason-numeric"] = o.HealthReasonNumeric
	}
	if !IsNil(o.HealthRecommendation) {
		toSerialize["health-recommendation"] = o.HealthRecommendation
	}
	if !IsNil(o.HealthRecommendationNumeric) {
		toSerialize["health-recommendation-numeric"] = o.HealthRecommendationNumeric
	}
	if !IsNil(o.InterleavedVolumeCount) {
		toSerialize["interleaved-volume-count"] = o.InterleavedVolumeCount
	}
	if !IsNil(o.IsJobAutoAbortable) {
		toSerialize["is-job-auto-abortable"] = o.IsJobAutoAbortable
	}
	if !IsNil(o.IsJobAutoAbortableNumeric) {
		toSerialize["is-job-auto-abortable-numeric"] = o.IsJobAutoAbortableNumeric
	}
	if !IsNil(o.JobRunning) {
		toSerialize["job-running"] = o.JobRunning
	}
	if !IsNil(o.LargestFreePartitionSpace) {
		toSerialize["largest-free-partition-space"] = o.LargestFreePartitionSpace
	}
	if !IsNil(o.LargestFreePartitionSpaceNumeric) {
		toSerialize["largest-free-partition-space-numeric"] = o.LargestFreePartitionSpaceNumeric
	}
	if !IsNil(o.LinearVolumeBoundary) {
		toSerialize["linear-volume-boundary"] = o.LinearVolumeBoundary
	}
	if !IsNil(o.Lun) {
		toSerialize["lun"] = o.Lun
	}
	if !IsNil(o.MetadataSize) {
		toSerialize["metadata-size"] = o.MetadataSize
	}
	if !IsNil(o.MetadataSizeNumeric) {
		toSerialize["metadata-size-numeric"] = o.MetadataSizeNumeric
	}
	if !IsNil(o.MinDriveSize) {
		toSerialize["min-drive-size"] = o.MinDriveSize
	}
	if !IsNil(o.MinDriveSizeNumeric) {
		toSerialize["min-drive-size-numeric"] = o.MinDriveSizeNumeric
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NewPartitionLba) {
		toSerialize["new-partition-lba"] = o.NewPartitionLba
	}
	if !IsNil(o.NewPartitionLbaNumeric) {
		toSerialize["new-partition-lba-numeric"] = o.NewPartitionLbaNumeric
	}
	if !IsNil(o.NumArrayPartitions) {
		toSerialize["num-array-partitions"] = o.NumArrayPartitions
	}
	if !IsNil(o.NumDrivesPerLowLevelArray) {
		toSerialize["num-drives-per-low-level-array"] = o.NumDrivesPerLowLevelArray
	}
	if !IsNil(o.NumExpansionPartitions) {
		toSerialize["num-expansion-partitions"] = o.NumExpansionPartitions
	}
	if !IsNil(o.NumPartitionSegments) {
		toSerialize["num-partition-segments"] = o.NumPartitionSegments
	}
	if !IsNil(o.Overhead) {
		toSerialize["overhead"] = o.Overhead
	}
	if !IsNil(o.OverheadNumeric) {
		toSerialize["overhead-numeric"] = o.OverheadNumeric
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.OwnerNumeric) {
		toSerialize["owner-numeric"] = o.OwnerNumeric
	}
	if !IsNil(o.PerformanceRank) {
		toSerialize["performance-rank"] = o.PerformanceRank
	}
	if !IsNil(o.Pool) {
		toSerialize["pool"] = o.Pool
	}
	if !IsNil(o.PoolPercentage) {
		toSerialize["pool-percentage"] = o.PoolPercentage
	}
	if !IsNil(o.PoolSectorFormat) {
		toSerialize["pool-sector-format"] = o.PoolSectorFormat
	}
	if !IsNil(o.PoolSectorFormatNumeric) {
		toSerialize["pool-sector-format-numeric"] = o.PoolSectorFormatNumeric
	}
	if !IsNil(o.PoolSerialNumber) {
		toSerialize["pool-serial-number"] = o.PoolSerialNumber
	}
	if !IsNil(o.PoolsUrl) {
		toSerialize["pools-url"] = o.PoolsUrl
	}
	if !IsNil(o.PreferredOwner) {
		toSerialize["preferred-owner"] = o.PreferredOwner
	}
	if !IsNil(o.PreferredOwnerNumeric) {
		toSerialize["preferred-owner-numeric"] = o.PreferredOwnerNumeric
	}
	if !IsNil(o.Raidtype) {
		toSerialize["raidtype"] = o.Raidtype
	}
	if !IsNil(o.RaidtypeNumeric) {
		toSerialize["raidtype-numeric"] = o.RaidtypeNumeric
	}
	if !IsNil(o.RawSize) {
		toSerialize["raw-size"] = o.RawSize
	}
	if !IsNil(o.RawSizeNumeric) {
		toSerialize["raw-size-numeric"] = o.RawSizeNumeric
	}
	if !IsNil(o.ReadAheadEnabled) {
		toSerialize["read-ahead-enabled"] = o.ReadAheadEnabled
	}
	if !IsNil(o.ReadAheadEnabledNumeric) {
		toSerialize["read-ahead-enabled-numeric"] = o.ReadAheadEnabledNumeric
	}
	if !IsNil(o.ScrubDurationGoal) {
		toSerialize["scrub-duration-goal"] = o.ScrubDurationGoal
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial-number"] = o.SerialNumber
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.SizeNumeric) {
		toSerialize["size-numeric"] = o.SizeNumeric
	}
	if !IsNil(o.Sparecount) {
		toSerialize["sparecount"] = o.Sparecount
	}
	if !IsNil(o.Spear) {
		toSerialize["spear"] = o.Spear
	}
	if !IsNil(o.SpearNumeric) {
		toSerialize["spear-numeric"] = o.SpearNumeric
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusNumeric) {
		toSerialize["status-numeric"] = o.StatusNumeric
	}
	if !IsNil(o.StorageTier) {
		toSerialize["storage-tier"] = o.StorageTier
	}
	if !IsNil(o.StorageTierNumeric) {
		toSerialize["storage-tier-numeric"] = o.StorageTierNumeric
	}
	if !IsNil(o.StorageType) {
		toSerialize["storage-type"] = o.StorageType
	}
	if !IsNil(o.StorageTypeNumeric) {
		toSerialize["storage-type-numeric"] = o.StorageTypeNumeric
	}
	if !IsNil(o.StripeWidth) {
		toSerialize["stripe-width"] = o.StripeWidth
	}
	if !IsNil(o.StripeWidthNumeric) {
		toSerialize["stripe-width-numeric"] = o.StripeWidthNumeric
	}
	if !IsNil(o.TargetSpareCapacity) {
		toSerialize["target-spare-capacity"] = o.TargetSpareCapacity
	}
	if !IsNil(o.TargetSpareCapacityNumeric) {
		toSerialize["target-spare-capacity-numeric"] = o.TargetSpareCapacityNumeric
	}
	if !IsNil(o.TotalPages) {
		toSerialize["total-pages"] = o.TotalPages
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.WriteBackEnabled) {
		toSerialize["write-back-enabled"] = o.WriteBackEnabled
	}
	if !IsNil(o.WriteBackEnabledNumeric) {
		toSerialize["write-back-enabled-numeric"] = o.WriteBackEnabledNumeric
	}
	return toSerialize, nil
}

type NullableDiskGroupsResourceInner struct {
	value *DiskGroupsResourceInner
	isSet bool
}

func (v NullableDiskGroupsResourceInner) Get() *DiskGroupsResourceInner {
	return v.value
}

func (v *NullableDiskGroupsResourceInner) Set(val *DiskGroupsResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDiskGroupsResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDiskGroupsResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiskGroupsResourceInner(val *DiskGroupsResourceInner) *NullableDiskGroupsResourceInner {
	return &NullableDiskGroupsResourceInner{value: val, isSet: true}
}

func (v NullableDiskGroupsResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiskGroupsResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
