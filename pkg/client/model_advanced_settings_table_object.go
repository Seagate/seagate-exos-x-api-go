/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AdvancedSettingsTableObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvancedSettingsTableObject{}

// AdvancedSettingsTableObject struct for AdvancedSettingsTableObject
type AdvancedSettingsTableObject struct {
	Status                []StatusResourceInner                `json:"status,omitempty"`
	AdvancedSettingsTable []AdvancedSettingsTableResourceInner `json:"advanced-settings-table,omitempty"`
}

// NewAdvancedSettingsTableObject instantiates a new AdvancedSettingsTableObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedSettingsTableObject() *AdvancedSettingsTableObject {
	this := AdvancedSettingsTableObject{}
	return &this
}

// NewAdvancedSettingsTableObjectWithDefaults instantiates a new AdvancedSettingsTableObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedSettingsTableObjectWithDefaults() *AdvancedSettingsTableObject {
	this := AdvancedSettingsTableObject{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdvancedSettingsTableObject) GetStatus() []StatusResourceInner {
	if o == nil || IsNil(o.Status) {
		var ret []StatusResourceInner
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableObject) GetStatusOk() ([]StatusResourceInner, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdvancedSettingsTableObject) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []StatusResourceInner and assigns it to the Status field.
func (o *AdvancedSettingsTableObject) SetStatus(v []StatusResourceInner) {
	o.Status = v
}

// GetAdvancedSettingsTable returns the AdvancedSettingsTable field value if set, zero value otherwise.
func (o *AdvancedSettingsTableObject) GetAdvancedSettingsTable() []AdvancedSettingsTableResourceInner {
	if o == nil || IsNil(o.AdvancedSettingsTable) {
		var ret []AdvancedSettingsTableResourceInner
		return ret
	}
	return o.AdvancedSettingsTable
}

// GetAdvancedSettingsTableOk returns a tuple with the AdvancedSettingsTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableObject) GetAdvancedSettingsTableOk() ([]AdvancedSettingsTableResourceInner, bool) {
	if o == nil || IsNil(o.AdvancedSettingsTable) {
		return nil, false
	}
	return o.AdvancedSettingsTable, true
}

// HasAdvancedSettingsTable returns a boolean if a field has been set.
func (o *AdvancedSettingsTableObject) HasAdvancedSettingsTable() bool {
	if o != nil && !IsNil(o.AdvancedSettingsTable) {
		return true
	}

	return false
}

// SetAdvancedSettingsTable gets a reference to the given []AdvancedSettingsTableResourceInner and assigns it to the AdvancedSettingsTable field.
func (o *AdvancedSettingsTableObject) SetAdvancedSettingsTable(v []AdvancedSettingsTableResourceInner) {
	o.AdvancedSettingsTable = v
}

func (o AdvancedSettingsTableObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvancedSettingsTableObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.AdvancedSettingsTable) {
		toSerialize["advanced-settings-table"] = o.AdvancedSettingsTable
	}
	return toSerialize, nil
}

type NullableAdvancedSettingsTableObject struct {
	value *AdvancedSettingsTableObject
	isSet bool
}

func (v NullableAdvancedSettingsTableObject) Get() *AdvancedSettingsTableObject {
	return v.value
}

func (v *NullableAdvancedSettingsTableObject) Set(val *AdvancedSettingsTableObject) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedSettingsTableObject) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedSettingsTableObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedSettingsTableObject(val *AdvancedSettingsTableObject) *NullableAdvancedSettingsTableObject {
	return &NullableAdvancedSettingsTableObject{value: val, isSet: true}
}

func (v NullableAdvancedSettingsTableObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedSettingsTableObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
