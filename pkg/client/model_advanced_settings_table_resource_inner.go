/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AdvancedSettingsTableResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvancedSettingsTableResourceInner{}

// AdvancedSettingsTableResourceInner struct for AdvancedSettingsTableResourceInner
type AdvancedSettingsTableResourceInner struct {
	ObjectName     *string `json:"object-name,omitempty"`
	Meta           *string `json:"meta,omitempty"`
	AutoMap        *string `json:"auto-map,omitempty"`
<<<<<<< HEAD
	AutoMapNumeric *int64  `json:"auto-map-numeric,omitempty"`
	// Provides detection of when hung controllers are preventing IO from completing
	AutoStallRecovery *string `json:"auto-stall-recovery,omitempty"`
	// Provides detection of when hung controllers are preventing IO from completing( In numeric form )
	AutoStallRecoveryNumeric *int64  `json:"auto-stall-recovery-numeric,omitempty"`
	AutoUnmap                *string `json:"auto-unmap,omitempty"`
	AutoUnmapNumeric         *int64  `json:"auto-unmap-numeric,omitempty"`
	// Data is cached to memory before being written to disk
	AutoWriteBack *string `json:"auto-write-back,omitempty"`
	// Data is cached to memory before being written to disk( In numeric form )
	AutoWriteBackNumeric *int64 `json:"auto-write-back-numeric,omitempty"`
	// Low priority disk group scrub
	BackgroundScrub *string `json:"background-scrub,omitempty"`
	// Disk group scrub start interval
	BackgroundScrubInterval *int64 `json:"background-scrub-interval,omitempty"`
	// Low priority disk group scrub( In numeric form )
	BackgroundScrubNumeric   *int64  `json:"background-scrub-numeric,omitempty"`
	CacheFlushTimeout        *string `json:"cache-flush-timeout,omitempty"`
	CacheFlushTimeoutNumeric *int64  `json:"cache-flush-timeout-numeric,omitempty"`
	ControllerFailure        *string `json:"controller-failure,omitempty"`
	ControllerFailureNumeric *int64  `json:"controller-failure-numeric,omitempty"`
	DefaultMapping           *string `json:"default-mapping,omitempty"`
	DefaultMappingNumeric    *int64  `json:"default-mapping-numeric,omitempty"`
	// Bypass checks when deleting a pool.
	DeleteOverride *string `json:"delete-override,omitempty"`
	// Bypass checks when deleting a pool.( In numeric form )
	DeleteOverrideNumeric     *int64  `json:"delete-override-numeric,omitempty"`
	DiskDsdDelay              *int64  `json:"disk-dsd-delay,omitempty"`
	DiskDsdEnable             *string `json:"disk-dsd-enable,omitempty"`
	DiskDsdEnableNumeric      *int64  `json:"disk-dsd-enable-numeric,omitempty"`
	DiskFirmwareUpdate        *string `json:"disk-firmware-update,omitempty"`
	DiskFirmwareUpdateNumeric *int64  `json:"disk-firmware-update-numeric,omitempty"`
=======
	AutoMapNumeric *int32  `json:"auto-map-numeric,omitempty"`
	// Provides detection of when hung controllers are preventing IO from completing
	AutoStallRecovery *string `json:"auto-stall-recovery,omitempty"`
	// Provides detection of when hung controllers are preventing IO from completing( In numeric form )
	AutoStallRecoveryNumeric *int32  `json:"auto-stall-recovery-numeric,omitempty"`
	AutoUnmap                *string `json:"auto-unmap,omitempty"`
	AutoUnmapNumeric         *int32  `json:"auto-unmap-numeric,omitempty"`
	// Data is cached to memory before being written to disk
	AutoWriteBack *string `json:"auto-write-back,omitempty"`
	// Data is cached to memory before being written to disk( In numeric form )
	AutoWriteBackNumeric *int32 `json:"auto-write-back-numeric,omitempty"`
	// Low priority disk group scrub
	BackgroundScrub *string `json:"background-scrub,omitempty"`
	// Disk group scrub start interval
	BackgroundScrubInterval *int32 `json:"background-scrub-interval,omitempty"`
	// Low priority disk group scrub( In numeric form )
	BackgroundScrubNumeric   *int32  `json:"background-scrub-numeric,omitempty"`
	CacheFlushTimeout        *string `json:"cache-flush-timeout,omitempty"`
	CacheFlushTimeoutNumeric *int32  `json:"cache-flush-timeout-numeric,omitempty"`
	ControllerFailure        *string `json:"controller-failure,omitempty"`
	ControllerFailureNumeric *int32  `json:"controller-failure-numeric,omitempty"`
	DefaultMapping           *string `json:"default-mapping,omitempty"`
	DefaultMappingNumeric    *int32  `json:"default-mapping-numeric,omitempty"`
	// Bypass checks when deleting a pool.
	DeleteOverride *string `json:"delete-override,omitempty"`
	// Bypass checks when deleting a pool.( In numeric form )
	DeleteOverrideNumeric     *int32  `json:"delete-override-numeric,omitempty"`
	DiskDsdDelay              *int32  `json:"disk-dsd-delay,omitempty"`
	DiskDsdEnable             *string `json:"disk-dsd-enable,omitempty"`
	DiskDsdEnableNumeric      *int32  `json:"disk-dsd-enable-numeric,omitempty"`
	DiskFirmwareUpdate        *string `json:"disk-firmware-update,omitempty"`
	DiskFirmwareUpdateNumeric *int32  `json:"disk-firmware-update-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	// If enabled, replaces failed disks in a degraded vdisk with properly sized available disks
	DynamicSpares             *string `json:"dynamic-spares,omitempty"`
	EmpPollRate               *string `json:"emp-poll-rate,omitempty"`
	FanFailure                *string `json:"fan-failure,omitempty"`
<<<<<<< HEAD
	FanFailureNumeric         *int64  `json:"fan-failure-numeric,omitempty"`
	HedgedReadsTimeout        *string `json:"hedged-reads-timeout,omitempty"`
	HedgedReadsTimeoutNumeric *int64  `json:"hedged-reads-timeout-numeric,omitempty"`
	// Whether hosts can change the system's write-back cache setting
	HostCacheControl *string `json:"host-cache-control,omitempty"`
	// Whether hosts can change the system's write-back cache setting( In numeric form )
	HostCacheControlNumeric   *int64  `json:"host-cache-control-numeric,omitempty"`
	IndependentCache          *string `json:"independent-cache,omitempty"`
	IndependentCacheNumeric   *int64  `json:"independent-cache-numeric,omitempty"`
	LargePools                *string `json:"large-pools,omitempty"`
	LargePoolsNumeric         *int64  `json:"large-pools-numeric,omitempty"`
	ManagedLogs               *string `json:"managed-logs,omitempty"`
	ManagedLogsNumeric        *int64  `json:"managed-logs-numeric,omitempty"`
	MemoryCardFailure         *string `json:"memory-card-failure,omitempty"`
	MemoryCardFailureNumeric  *int64  `json:"memory-card-failure-numeric,omitempty"`
	MissingLunResponse        *string `json:"missing-lun-response,omitempty"`
	MissingLunResponseNumeric *int64  `json:"missing-lun-response-numeric,omitempty"`
	// Indicates whether automated update of firmware of other controller is enabled
	PartnerFirmwareUpgrade *string `json:"partner-firmware-upgrade,omitempty"`
	// Indicates whether automated update of firmware of other controller is enabled( In numeric form )
	PartnerFirmwareUpgradeNumeric *int64 `json:"partner-firmware-upgrade-numeric,omitempty"`
	// Indicates whether the write-through trigger is enabled
	PartnerNotify *string `json:"partner-notify,omitempty"`
	// Indicates whether the write-through trigger is enabled( In numeric form )
	PartnerNotifyNumeric *int64  `json:"partner-notify-numeric,omitempty"`
	PcieHotplug          *string `json:"pcie-hotplug,omitempty"`
	PcieHotplugNumeric   *int64  `json:"pcie-hotplug-numeric,omitempty"`
	// Indicates whether the write-through trigger is enabled
	PowerSupplyFailure *string `json:"power-supply-failure,omitempty"`
	// Indicates whether the write-through trigger is enabled( In numeric form )
	PowerSupplyFailureNumeric              *int64  `json:"power-supply-failure-numeric,omitempty"`
	RandomIoPerformanceOptimization        *string `json:"random-io-performance-optimization,omitempty"`
	RandomIoPerformanceOptimizationNumeric *int64  `json:"random-io-performance-optimization-numeric,omitempty"`
	Remanufacture                          *string `json:"remanufacture,omitempty"`
	RemanufactureNumeric                   *int64  `json:"remanufacture-numeric,omitempty"`
	RestartOnCapiFail                      *string `json:"restart-on-capi-fail,omitempty"`
	RestartOnCapiFailNumeric               *int64  `json:"restart-on-capi-fail-numeric,omitempty"`
	ScrubSchedule                          *string `json:"scrub-schedule,omitempty"`
	ScrubScheduleNumeric                   *int64  `json:"scrub-schedule-numeric,omitempty"`
	SingleController                       *string `json:"single-controller,omitempty"`
	SingleControllerNumeric                *int64  `json:"single-controller-numeric,omitempty"`
	SlotAffinity                           *string `json:"slot-affinity,omitempty"`
	SlotAffinityNumeric                    *int64  `json:"slot-affinity-numeric,omitempty"`
	SlowDiskDetection                      *string `json:"slow-disk-detection,omitempty"`
	SlowDiskDetectionNumeric               *int64  `json:"slow-disk-detection-numeric,omitempty"`
	Smart                                  *string `json:"smart,omitempty"`
	SmartNumeric                           *int64  `json:"smart-numeric,omitempty"`
	SsdConcurrentAccess                    *string `json:"ssd-concurrent-access,omitempty"`
	SsdConcurrentAccessNumeric             *int64  `json:"ssd-concurrent-access-numeric,omitempty"`
	// Indicates whether the write-through trigger is enabled
	SuperCapFailure *string `json:"super-cap-failure,omitempty"`
	// Indicates whether the write-through trigger is enabled( In numeric form )
	SuperCapFailureNumeric *int64  `json:"super-cap-failure-numeric,omitempty"`
	SyncCacheMode          *string `json:"sync-cache-mode,omitempty"`
	SyncCacheModeNumeric   *int64  `json:"sync-cache-mode-numeric,omitempty"`
	// Indicates whether the write-through trigger is enabled
	TemperatureExceeded *string `json:"temperature-exceeded,omitempty"`
	// Indicates whether the write-through trigger is enabled( In numeric form )
	TemperatureExceededNumeric *int64 `json:"temperature-exceeded-numeric,omitempty"`
	// Configured processing priority for utilities
	UtilityPriority *string `json:"utility-priority,omitempty"`
	// Configured processing priority for utilities( In numeric form )
	UtilityPriorityNumeric *int64 `json:"utility-priority-numeric,omitempty"`
=======
	FanFailureNumeric         *int32  `json:"fan-failure-numeric,omitempty"`
	HedgedReadsTimeout        *string `json:"hedged-reads-timeout,omitempty"`
	HedgedReadsTimeoutNumeric *int32  `json:"hedged-reads-timeout-numeric,omitempty"`
	// Whether hosts can change the system's write-back cache setting
	HostCacheControl *string `json:"host-cache-control,omitempty"`
	// Whether hosts can change the system's write-back cache setting( In numeric form )
	HostCacheControlNumeric   *int32  `json:"host-cache-control-numeric,omitempty"`
	IndependentCache          *string `json:"independent-cache,omitempty"`
	IndependentCacheNumeric   *int32  `json:"independent-cache-numeric,omitempty"`
	LargePools                *string `json:"large-pools,omitempty"`
	LargePoolsNumeric         *int32  `json:"large-pools-numeric,omitempty"`
	ManagedLogs               *string `json:"managed-logs,omitempty"`
	ManagedLogsNumeric        *int32  `json:"managed-logs-numeric,omitempty"`
	MemoryCardFailure         *string `json:"memory-card-failure,omitempty"`
	MemoryCardFailureNumeric  *int32  `json:"memory-card-failure-numeric,omitempty"`
	MissingLunResponse        *string `json:"missing-lun-response,omitempty"`
	MissingLunResponseNumeric *int32  `json:"missing-lun-response-numeric,omitempty"`
	// Indicates whether automated update of firmware of other controller is enabled
	PartnerFirmwareUpgrade *string `json:"partner-firmware-upgrade,omitempty"`
	// Indicates whether automated update of firmware of other controller is enabled( In numeric form )
	PartnerFirmwareUpgradeNumeric *int32 `json:"partner-firmware-upgrade-numeric,omitempty"`
	// Indicates whether the write-through trigger is enabled
	PartnerNotify *string `json:"partner-notify,omitempty"`
	// Indicates whether the write-through trigger is enabled( In numeric form )
	PartnerNotifyNumeric *int32  `json:"partner-notify-numeric,omitempty"`
	PcieHotplug          *string `json:"pcie-hotplug,omitempty"`
	PcieHotplugNumeric   *int32  `json:"pcie-hotplug-numeric,omitempty"`
	// Indicates whether the write-through trigger is enabled
	PowerSupplyFailure *string `json:"power-supply-failure,omitempty"`
	// Indicates whether the write-through trigger is enabled( In numeric form )
	PowerSupplyFailureNumeric              *int32  `json:"power-supply-failure-numeric,omitempty"`
	RandomIoPerformanceOptimization        *string `json:"random-io-performance-optimization,omitempty"`
	RandomIoPerformanceOptimizationNumeric *int32  `json:"random-io-performance-optimization-numeric,omitempty"`
	Remanufacture                          *string `json:"remanufacture,omitempty"`
	RemanufactureNumeric                   *int32  `json:"remanufacture-numeric,omitempty"`
	RestartOnCapiFail                      *string `json:"restart-on-capi-fail,omitempty"`
	RestartOnCapiFailNumeric               *int32  `json:"restart-on-capi-fail-numeric,omitempty"`
	ScrubSchedule                          *string `json:"scrub-schedule,omitempty"`
	ScrubScheduleNumeric                   *int32  `json:"scrub-schedule-numeric,omitempty"`
	SingleController                       *string `json:"single-controller,omitempty"`
	SingleControllerNumeric                *int32  `json:"single-controller-numeric,omitempty"`
	SlotAffinity                           *string `json:"slot-affinity,omitempty"`
	SlotAffinityNumeric                    *int32  `json:"slot-affinity-numeric,omitempty"`
	SlowDiskDetection                      *string `json:"slow-disk-detection,omitempty"`
	SlowDiskDetectionNumeric               *int32  `json:"slow-disk-detection-numeric,omitempty"`
	Smart                                  *string `json:"smart,omitempty"`
	SmartNumeric                           *int32  `json:"smart-numeric,omitempty"`
	SsdConcurrentAccess                    *string `json:"ssd-concurrent-access,omitempty"`
	SsdConcurrentAccessNumeric             *int32  `json:"ssd-concurrent-access-numeric,omitempty"`
	// Indicates whether the write-through trigger is enabled
	SuperCapFailure *string `json:"super-cap-failure,omitempty"`
	// Indicates whether the write-through trigger is enabled( In numeric form )
	SuperCapFailureNumeric *int32  `json:"super-cap-failure-numeric,omitempty"`
	SyncCacheMode          *string `json:"sync-cache-mode,omitempty"`
	SyncCacheModeNumeric   *int32  `json:"sync-cache-mode-numeric,omitempty"`
	// Indicates whether the write-through trigger is enabled
	TemperatureExceeded *string `json:"temperature-exceeded,omitempty"`
	// Indicates whether the write-through trigger is enabled( In numeric form )
	TemperatureExceededNumeric *int32 `json:"temperature-exceeded-numeric,omitempty"`
	// Configured processing priority for utilities
	UtilityPriority *string `json:"utility-priority,omitempty"`
	// Configured processing priority for utilities( In numeric form )
	UtilityPriorityNumeric *int32 `json:"utility-priority-numeric,omitempty"`
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
}

// NewAdvancedSettingsTableResourceInner instantiates a new AdvancedSettingsTableResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedSettingsTableResourceInner() *AdvancedSettingsTableResourceInner {
	this := AdvancedSettingsTableResourceInner{}
	return &this
}

// NewAdvancedSettingsTableResourceInnerWithDefaults instantiates a new AdvancedSettingsTableResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedSettingsTableResourceInnerWithDefaults() *AdvancedSettingsTableResourceInner {
	this := AdvancedSettingsTableResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *AdvancedSettingsTableResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *AdvancedSettingsTableResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetAutoMap returns the AutoMap field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetAutoMap() string {
	if o == nil || IsNil(o.AutoMap) {
		var ret string
		return ret
	}
	return *o.AutoMap
}

// GetAutoMapOk returns a tuple with the AutoMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetAutoMapOk() (*string, bool) {
	if o == nil || IsNil(o.AutoMap) {
		return nil, false
	}
	return o.AutoMap, true
}

// HasAutoMap returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasAutoMap() bool {
	if o != nil && !IsNil(o.AutoMap) {
		return true
	}

	return false
}

// SetAutoMap gets a reference to the given string and assigns it to the AutoMap field.
func (o *AdvancedSettingsTableResourceInner) SetAutoMap(v string) {
	o.AutoMap = &v
}

// GetAutoMapNumeric returns the AutoMapNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetAutoMapNumeric() int64 {
	if o == nil || IsNil(o.AutoMapNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetAutoMapNumeric() int32 {
	if o == nil || IsNil(o.AutoMapNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.AutoMapNumeric
}

// GetAutoMapNumericOk returns a tuple with the AutoMapNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetAutoMapNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetAutoMapNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.AutoMapNumeric) {
		return nil, false
	}
	return o.AutoMapNumeric, true
}

// HasAutoMapNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasAutoMapNumeric() bool {
	if o != nil && !IsNil(o.AutoMapNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetAutoMapNumeric gets a reference to the given int64 and assigns it to the AutoMapNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetAutoMapNumeric(v int64) {
=======
// SetAutoMapNumeric gets a reference to the given int32 and assigns it to the AutoMapNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetAutoMapNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.AutoMapNumeric = &v
}

// GetAutoStallRecovery returns the AutoStallRecovery field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetAutoStallRecovery() string {
	if o == nil || IsNil(o.AutoStallRecovery) {
		var ret string
		return ret
	}
	return *o.AutoStallRecovery
}

// GetAutoStallRecoveryOk returns a tuple with the AutoStallRecovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetAutoStallRecoveryOk() (*string, bool) {
	if o == nil || IsNil(o.AutoStallRecovery) {
		return nil, false
	}
	return o.AutoStallRecovery, true
}

// HasAutoStallRecovery returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasAutoStallRecovery() bool {
	if o != nil && !IsNil(o.AutoStallRecovery) {
		return true
	}

	return false
}

// SetAutoStallRecovery gets a reference to the given string and assigns it to the AutoStallRecovery field.
func (o *AdvancedSettingsTableResourceInner) SetAutoStallRecovery(v string) {
	o.AutoStallRecovery = &v
}

// GetAutoStallRecoveryNumeric returns the AutoStallRecoveryNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetAutoStallRecoveryNumeric() int64 {
	if o == nil || IsNil(o.AutoStallRecoveryNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetAutoStallRecoveryNumeric() int32 {
	if o == nil || IsNil(o.AutoStallRecoveryNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.AutoStallRecoveryNumeric
}

// GetAutoStallRecoveryNumericOk returns a tuple with the AutoStallRecoveryNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetAutoStallRecoveryNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetAutoStallRecoveryNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.AutoStallRecoveryNumeric) {
		return nil, false
	}
	return o.AutoStallRecoveryNumeric, true
}

// HasAutoStallRecoveryNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasAutoStallRecoveryNumeric() bool {
	if o != nil && !IsNil(o.AutoStallRecoveryNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetAutoStallRecoveryNumeric gets a reference to the given int64 and assigns it to the AutoStallRecoveryNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetAutoStallRecoveryNumeric(v int64) {
=======
// SetAutoStallRecoveryNumeric gets a reference to the given int32 and assigns it to the AutoStallRecoveryNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetAutoStallRecoveryNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.AutoStallRecoveryNumeric = &v
}

// GetAutoUnmap returns the AutoUnmap field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetAutoUnmap() string {
	if o == nil || IsNil(o.AutoUnmap) {
		var ret string
		return ret
	}
	return *o.AutoUnmap
}

// GetAutoUnmapOk returns a tuple with the AutoUnmap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetAutoUnmapOk() (*string, bool) {
	if o == nil || IsNil(o.AutoUnmap) {
		return nil, false
	}
	return o.AutoUnmap, true
}

// HasAutoUnmap returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasAutoUnmap() bool {
	if o != nil && !IsNil(o.AutoUnmap) {
		return true
	}

	return false
}

// SetAutoUnmap gets a reference to the given string and assigns it to the AutoUnmap field.
func (o *AdvancedSettingsTableResourceInner) SetAutoUnmap(v string) {
	o.AutoUnmap = &v
}

// GetAutoUnmapNumeric returns the AutoUnmapNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetAutoUnmapNumeric() int64 {
	if o == nil || IsNil(o.AutoUnmapNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetAutoUnmapNumeric() int32 {
	if o == nil || IsNil(o.AutoUnmapNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.AutoUnmapNumeric
}

// GetAutoUnmapNumericOk returns a tuple with the AutoUnmapNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetAutoUnmapNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetAutoUnmapNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.AutoUnmapNumeric) {
		return nil, false
	}
	return o.AutoUnmapNumeric, true
}

// HasAutoUnmapNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasAutoUnmapNumeric() bool {
	if o != nil && !IsNil(o.AutoUnmapNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetAutoUnmapNumeric gets a reference to the given int64 and assigns it to the AutoUnmapNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetAutoUnmapNumeric(v int64) {
=======
// SetAutoUnmapNumeric gets a reference to the given int32 and assigns it to the AutoUnmapNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetAutoUnmapNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.AutoUnmapNumeric = &v
}

// GetAutoWriteBack returns the AutoWriteBack field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetAutoWriteBack() string {
	if o == nil || IsNil(o.AutoWriteBack) {
		var ret string
		return ret
	}
	return *o.AutoWriteBack
}

// GetAutoWriteBackOk returns a tuple with the AutoWriteBack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetAutoWriteBackOk() (*string, bool) {
	if o == nil || IsNil(o.AutoWriteBack) {
		return nil, false
	}
	return o.AutoWriteBack, true
}

// HasAutoWriteBack returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasAutoWriteBack() bool {
	if o != nil && !IsNil(o.AutoWriteBack) {
		return true
	}

	return false
}

// SetAutoWriteBack gets a reference to the given string and assigns it to the AutoWriteBack field.
func (o *AdvancedSettingsTableResourceInner) SetAutoWriteBack(v string) {
	o.AutoWriteBack = &v
}

// GetAutoWriteBackNumeric returns the AutoWriteBackNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetAutoWriteBackNumeric() int64 {
	if o == nil || IsNil(o.AutoWriteBackNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetAutoWriteBackNumeric() int32 {
	if o == nil || IsNil(o.AutoWriteBackNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.AutoWriteBackNumeric
}

// GetAutoWriteBackNumericOk returns a tuple with the AutoWriteBackNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetAutoWriteBackNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetAutoWriteBackNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.AutoWriteBackNumeric) {
		return nil, false
	}
	return o.AutoWriteBackNumeric, true
}

// HasAutoWriteBackNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasAutoWriteBackNumeric() bool {
	if o != nil && !IsNil(o.AutoWriteBackNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetAutoWriteBackNumeric gets a reference to the given int64 and assigns it to the AutoWriteBackNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetAutoWriteBackNumeric(v int64) {
=======
// SetAutoWriteBackNumeric gets a reference to the given int32 and assigns it to the AutoWriteBackNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetAutoWriteBackNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.AutoWriteBackNumeric = &v
}

// GetBackgroundScrub returns the BackgroundScrub field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrub() string {
	if o == nil || IsNil(o.BackgroundScrub) {
		var ret string
		return ret
	}
	return *o.BackgroundScrub
}

// GetBackgroundScrubOk returns a tuple with the BackgroundScrub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundScrub) {
		return nil, false
	}
	return o.BackgroundScrub, true
}

// HasBackgroundScrub returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasBackgroundScrub() bool {
	if o != nil && !IsNil(o.BackgroundScrub) {
		return true
	}

	return false
}

// SetBackgroundScrub gets a reference to the given string and assigns it to the BackgroundScrub field.
func (o *AdvancedSettingsTableResourceInner) SetBackgroundScrub(v string) {
	o.BackgroundScrub = &v
}

// GetBackgroundScrubInterval returns the BackgroundScrubInterval field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubInterval() int64 {
	if o == nil || IsNil(o.BackgroundScrubInterval) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubInterval() int32 {
	if o == nil || IsNil(o.BackgroundScrubInterval) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.BackgroundScrubInterval
}

// GetBackgroundScrubIntervalOk returns a tuple with the BackgroundScrubInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubIntervalOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubIntervalOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.BackgroundScrubInterval) {
		return nil, false
	}
	return o.BackgroundScrubInterval, true
}

// HasBackgroundScrubInterval returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasBackgroundScrubInterval() bool {
	if o != nil && !IsNil(o.BackgroundScrubInterval) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetBackgroundScrubInterval gets a reference to the given int64 and assigns it to the BackgroundScrubInterval field.
func (o *AdvancedSettingsTableResourceInner) SetBackgroundScrubInterval(v int64) {
=======
// SetBackgroundScrubInterval gets a reference to the given int32 and assigns it to the BackgroundScrubInterval field.
func (o *AdvancedSettingsTableResourceInner) SetBackgroundScrubInterval(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.BackgroundScrubInterval = &v
}

// GetBackgroundScrubNumeric returns the BackgroundScrubNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubNumeric() int64 {
	if o == nil || IsNil(o.BackgroundScrubNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubNumeric() int32 {
	if o == nil || IsNil(o.BackgroundScrubNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.BackgroundScrubNumeric
}

// GetBackgroundScrubNumericOk returns a tuple with the BackgroundScrubNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetBackgroundScrubNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.BackgroundScrubNumeric) {
		return nil, false
	}
	return o.BackgroundScrubNumeric, true
}

// HasBackgroundScrubNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasBackgroundScrubNumeric() bool {
	if o != nil && !IsNil(o.BackgroundScrubNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetBackgroundScrubNumeric gets a reference to the given int64 and assigns it to the BackgroundScrubNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetBackgroundScrubNumeric(v int64) {
=======
// SetBackgroundScrubNumeric gets a reference to the given int32 and assigns it to the BackgroundScrubNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetBackgroundScrubNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.BackgroundScrubNumeric = &v
}

// GetCacheFlushTimeout returns the CacheFlushTimeout field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetCacheFlushTimeout() string {
	if o == nil || IsNil(o.CacheFlushTimeout) {
		var ret string
		return ret
	}
	return *o.CacheFlushTimeout
}

// GetCacheFlushTimeoutOk returns a tuple with the CacheFlushTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetCacheFlushTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.CacheFlushTimeout) {
		return nil, false
	}
	return o.CacheFlushTimeout, true
}

// HasCacheFlushTimeout returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasCacheFlushTimeout() bool {
	if o != nil && !IsNil(o.CacheFlushTimeout) {
		return true
	}

	return false
}

// SetCacheFlushTimeout gets a reference to the given string and assigns it to the CacheFlushTimeout field.
func (o *AdvancedSettingsTableResourceInner) SetCacheFlushTimeout(v string) {
	o.CacheFlushTimeout = &v
}

// GetCacheFlushTimeoutNumeric returns the CacheFlushTimeoutNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetCacheFlushTimeoutNumeric() int64 {
	if o == nil || IsNil(o.CacheFlushTimeoutNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetCacheFlushTimeoutNumeric() int32 {
	if o == nil || IsNil(o.CacheFlushTimeoutNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.CacheFlushTimeoutNumeric
}

// GetCacheFlushTimeoutNumericOk returns a tuple with the CacheFlushTimeoutNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetCacheFlushTimeoutNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetCacheFlushTimeoutNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.CacheFlushTimeoutNumeric) {
		return nil, false
	}
	return o.CacheFlushTimeoutNumeric, true
}

// HasCacheFlushTimeoutNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasCacheFlushTimeoutNumeric() bool {
	if o != nil && !IsNil(o.CacheFlushTimeoutNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetCacheFlushTimeoutNumeric gets a reference to the given int64 and assigns it to the CacheFlushTimeoutNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetCacheFlushTimeoutNumeric(v int64) {
=======
// SetCacheFlushTimeoutNumeric gets a reference to the given int32 and assigns it to the CacheFlushTimeoutNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetCacheFlushTimeoutNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.CacheFlushTimeoutNumeric = &v
}

// GetControllerFailure returns the ControllerFailure field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetControllerFailure() string {
	if o == nil || IsNil(o.ControllerFailure) {
		var ret string
		return ret
	}
	return *o.ControllerFailure
}

// GetControllerFailureOk returns a tuple with the ControllerFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetControllerFailureOk() (*string, bool) {
	if o == nil || IsNil(o.ControllerFailure) {
		return nil, false
	}
	return o.ControllerFailure, true
}

// HasControllerFailure returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasControllerFailure() bool {
	if o != nil && !IsNil(o.ControllerFailure) {
		return true
	}

	return false
}

// SetControllerFailure gets a reference to the given string and assigns it to the ControllerFailure field.
func (o *AdvancedSettingsTableResourceInner) SetControllerFailure(v string) {
	o.ControllerFailure = &v
}

// GetControllerFailureNumeric returns the ControllerFailureNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetControllerFailureNumeric() int64 {
	if o == nil || IsNil(o.ControllerFailureNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetControllerFailureNumeric() int32 {
	if o == nil || IsNil(o.ControllerFailureNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.ControllerFailureNumeric
}

// GetControllerFailureNumericOk returns a tuple with the ControllerFailureNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetControllerFailureNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetControllerFailureNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.ControllerFailureNumeric) {
		return nil, false
	}
	return o.ControllerFailureNumeric, true
}

// HasControllerFailureNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasControllerFailureNumeric() bool {
	if o != nil && !IsNil(o.ControllerFailureNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetControllerFailureNumeric gets a reference to the given int64 and assigns it to the ControllerFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetControllerFailureNumeric(v int64) {
=======
// SetControllerFailureNumeric gets a reference to the given int32 and assigns it to the ControllerFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetControllerFailureNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.ControllerFailureNumeric = &v
}

// GetDefaultMapping returns the DefaultMapping field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetDefaultMapping() string {
	if o == nil || IsNil(o.DefaultMapping) {
		var ret string
		return ret
	}
	return *o.DefaultMapping
}

// GetDefaultMappingOk returns a tuple with the DefaultMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetDefaultMappingOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultMapping) {
		return nil, false
	}
	return o.DefaultMapping, true
}

// HasDefaultMapping returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDefaultMapping() bool {
	if o != nil && !IsNil(o.DefaultMapping) {
		return true
	}

	return false
}

// SetDefaultMapping gets a reference to the given string and assigns it to the DefaultMapping field.
func (o *AdvancedSettingsTableResourceInner) SetDefaultMapping(v string) {
	o.DefaultMapping = &v
}

// GetDefaultMappingNumeric returns the DefaultMappingNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDefaultMappingNumeric() int64 {
	if o == nil || IsNil(o.DefaultMappingNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetDefaultMappingNumeric() int32 {
	if o == nil || IsNil(o.DefaultMappingNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.DefaultMappingNumeric
}

// GetDefaultMappingNumericOk returns a tuple with the DefaultMappingNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDefaultMappingNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetDefaultMappingNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.DefaultMappingNumeric) {
		return nil, false
	}
	return o.DefaultMappingNumeric, true
}

// HasDefaultMappingNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDefaultMappingNumeric() bool {
	if o != nil && !IsNil(o.DefaultMappingNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDefaultMappingNumeric gets a reference to the given int64 and assigns it to the DefaultMappingNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetDefaultMappingNumeric(v int64) {
=======
// SetDefaultMappingNumeric gets a reference to the given int32 and assigns it to the DefaultMappingNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetDefaultMappingNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.DefaultMappingNumeric = &v
}

// GetDeleteOverride returns the DeleteOverride field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetDeleteOverride() string {
	if o == nil || IsNil(o.DeleteOverride) {
		var ret string
		return ret
	}
	return *o.DeleteOverride
}

// GetDeleteOverrideOk returns a tuple with the DeleteOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetDeleteOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.DeleteOverride) {
		return nil, false
	}
	return o.DeleteOverride, true
}

// HasDeleteOverride returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDeleteOverride() bool {
	if o != nil && !IsNil(o.DeleteOverride) {
		return true
	}

	return false
}

// SetDeleteOverride gets a reference to the given string and assigns it to the DeleteOverride field.
func (o *AdvancedSettingsTableResourceInner) SetDeleteOverride(v string) {
	o.DeleteOverride = &v
}

// GetDeleteOverrideNumeric returns the DeleteOverrideNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDeleteOverrideNumeric() int64 {
	if o == nil || IsNil(o.DeleteOverrideNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetDeleteOverrideNumeric() int32 {
	if o == nil || IsNil(o.DeleteOverrideNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.DeleteOverrideNumeric
}

// GetDeleteOverrideNumericOk returns a tuple with the DeleteOverrideNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDeleteOverrideNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetDeleteOverrideNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.DeleteOverrideNumeric) {
		return nil, false
	}
	return o.DeleteOverrideNumeric, true
}

// HasDeleteOverrideNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDeleteOverrideNumeric() bool {
	if o != nil && !IsNil(o.DeleteOverrideNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDeleteOverrideNumeric gets a reference to the given int64 and assigns it to the DeleteOverrideNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetDeleteOverrideNumeric(v int64) {
=======
// SetDeleteOverrideNumeric gets a reference to the given int32 and assigns it to the DeleteOverrideNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetDeleteOverrideNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.DeleteOverrideNumeric = &v
}

// GetDiskDsdDelay returns the DiskDsdDelay field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdDelay() int64 {
	if o == nil || IsNil(o.DiskDsdDelay) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdDelay() int32 {
	if o == nil || IsNil(o.DiskDsdDelay) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.DiskDsdDelay
}

// GetDiskDsdDelayOk returns a tuple with the DiskDsdDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdDelayOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdDelayOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.DiskDsdDelay) {
		return nil, false
	}
	return o.DiskDsdDelay, true
}

// HasDiskDsdDelay returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDiskDsdDelay() bool {
	if o != nil && !IsNil(o.DiskDsdDelay) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDiskDsdDelay gets a reference to the given int64 and assigns it to the DiskDsdDelay field.
func (o *AdvancedSettingsTableResourceInner) SetDiskDsdDelay(v int64) {
=======
// SetDiskDsdDelay gets a reference to the given int32 and assigns it to the DiskDsdDelay field.
func (o *AdvancedSettingsTableResourceInner) SetDiskDsdDelay(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.DiskDsdDelay = &v
}

// GetDiskDsdEnable returns the DiskDsdEnable field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdEnable() string {
	if o == nil || IsNil(o.DiskDsdEnable) {
		var ret string
		return ret
	}
	return *o.DiskDsdEnable
}

// GetDiskDsdEnableOk returns a tuple with the DiskDsdEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdEnableOk() (*string, bool) {
	if o == nil || IsNil(o.DiskDsdEnable) {
		return nil, false
	}
	return o.DiskDsdEnable, true
}

// HasDiskDsdEnable returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDiskDsdEnable() bool {
	if o != nil && !IsNil(o.DiskDsdEnable) {
		return true
	}

	return false
}

// SetDiskDsdEnable gets a reference to the given string and assigns it to the DiskDsdEnable field.
func (o *AdvancedSettingsTableResourceInner) SetDiskDsdEnable(v string) {
	o.DiskDsdEnable = &v
}

// GetDiskDsdEnableNumeric returns the DiskDsdEnableNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdEnableNumeric() int64 {
	if o == nil || IsNil(o.DiskDsdEnableNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdEnableNumeric() int32 {
	if o == nil || IsNil(o.DiskDsdEnableNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.DiskDsdEnableNumeric
}

// GetDiskDsdEnableNumericOk returns a tuple with the DiskDsdEnableNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdEnableNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetDiskDsdEnableNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.DiskDsdEnableNumeric) {
		return nil, false
	}
	return o.DiskDsdEnableNumeric, true
}

// HasDiskDsdEnableNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDiskDsdEnableNumeric() bool {
	if o != nil && !IsNil(o.DiskDsdEnableNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDiskDsdEnableNumeric gets a reference to the given int64 and assigns it to the DiskDsdEnableNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetDiskDsdEnableNumeric(v int64) {
=======
// SetDiskDsdEnableNumeric gets a reference to the given int32 and assigns it to the DiskDsdEnableNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetDiskDsdEnableNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.DiskDsdEnableNumeric = &v
}

// GetDiskFirmwareUpdate returns the DiskFirmwareUpdate field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetDiskFirmwareUpdate() string {
	if o == nil || IsNil(o.DiskFirmwareUpdate) {
		var ret string
		return ret
	}
	return *o.DiskFirmwareUpdate
}

// GetDiskFirmwareUpdateOk returns a tuple with the DiskFirmwareUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetDiskFirmwareUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.DiskFirmwareUpdate) {
		return nil, false
	}
	return o.DiskFirmwareUpdate, true
}

// HasDiskFirmwareUpdate returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDiskFirmwareUpdate() bool {
	if o != nil && !IsNil(o.DiskFirmwareUpdate) {
		return true
	}

	return false
}

// SetDiskFirmwareUpdate gets a reference to the given string and assigns it to the DiskFirmwareUpdate field.
func (o *AdvancedSettingsTableResourceInner) SetDiskFirmwareUpdate(v string) {
	o.DiskFirmwareUpdate = &v
}

// GetDiskFirmwareUpdateNumeric returns the DiskFirmwareUpdateNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDiskFirmwareUpdateNumeric() int64 {
	if o == nil || IsNil(o.DiskFirmwareUpdateNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetDiskFirmwareUpdateNumeric() int32 {
	if o == nil || IsNil(o.DiskFirmwareUpdateNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.DiskFirmwareUpdateNumeric
}

// GetDiskFirmwareUpdateNumericOk returns a tuple with the DiskFirmwareUpdateNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetDiskFirmwareUpdateNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetDiskFirmwareUpdateNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.DiskFirmwareUpdateNumeric) {
		return nil, false
	}
	return o.DiskFirmwareUpdateNumeric, true
}

// HasDiskFirmwareUpdateNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDiskFirmwareUpdateNumeric() bool {
	if o != nil && !IsNil(o.DiskFirmwareUpdateNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetDiskFirmwareUpdateNumeric gets a reference to the given int64 and assigns it to the DiskFirmwareUpdateNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetDiskFirmwareUpdateNumeric(v int64) {
=======
// SetDiskFirmwareUpdateNumeric gets a reference to the given int32 and assigns it to the DiskFirmwareUpdateNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetDiskFirmwareUpdateNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.DiskFirmwareUpdateNumeric = &v
}

// GetDynamicSpares returns the DynamicSpares field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetDynamicSpares() string {
	if o == nil || IsNil(o.DynamicSpares) {
		var ret string
		return ret
	}
	return *o.DynamicSpares
}

// GetDynamicSparesOk returns a tuple with the DynamicSpares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetDynamicSparesOk() (*string, bool) {
	if o == nil || IsNil(o.DynamicSpares) {
		return nil, false
	}
	return o.DynamicSpares, true
}

// HasDynamicSpares returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasDynamicSpares() bool {
	if o != nil && !IsNil(o.DynamicSpares) {
		return true
	}

	return false
}

// SetDynamicSpares gets a reference to the given string and assigns it to the DynamicSpares field.
func (o *AdvancedSettingsTableResourceInner) SetDynamicSpares(v string) {
	o.DynamicSpares = &v
}

// GetEmpPollRate returns the EmpPollRate field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetEmpPollRate() string {
	if o == nil || IsNil(o.EmpPollRate) {
		var ret string
		return ret
	}
	return *o.EmpPollRate
}

// GetEmpPollRateOk returns a tuple with the EmpPollRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetEmpPollRateOk() (*string, bool) {
	if o == nil || IsNil(o.EmpPollRate) {
		return nil, false
	}
	return o.EmpPollRate, true
}

// HasEmpPollRate returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasEmpPollRate() bool {
	if o != nil && !IsNil(o.EmpPollRate) {
		return true
	}

	return false
}

// SetEmpPollRate gets a reference to the given string and assigns it to the EmpPollRate field.
func (o *AdvancedSettingsTableResourceInner) SetEmpPollRate(v string) {
	o.EmpPollRate = &v
}

// GetFanFailure returns the FanFailure field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetFanFailure() string {
	if o == nil || IsNil(o.FanFailure) {
		var ret string
		return ret
	}
	return *o.FanFailure
}

// GetFanFailureOk returns a tuple with the FanFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetFanFailureOk() (*string, bool) {
	if o == nil || IsNil(o.FanFailure) {
		return nil, false
	}
	return o.FanFailure, true
}

// HasFanFailure returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasFanFailure() bool {
	if o != nil && !IsNil(o.FanFailure) {
		return true
	}

	return false
}

// SetFanFailure gets a reference to the given string and assigns it to the FanFailure field.
func (o *AdvancedSettingsTableResourceInner) SetFanFailure(v string) {
	o.FanFailure = &v
}

// GetFanFailureNumeric returns the FanFailureNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetFanFailureNumeric() int64 {
	if o == nil || IsNil(o.FanFailureNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetFanFailureNumeric() int32 {
	if o == nil || IsNil(o.FanFailureNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.FanFailureNumeric
}

// GetFanFailureNumericOk returns a tuple with the FanFailureNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetFanFailureNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetFanFailureNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.FanFailureNumeric) {
		return nil, false
	}
	return o.FanFailureNumeric, true
}

// HasFanFailureNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasFanFailureNumeric() bool {
	if o != nil && !IsNil(o.FanFailureNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetFanFailureNumeric gets a reference to the given int64 and assigns it to the FanFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetFanFailureNumeric(v int64) {
=======
// SetFanFailureNumeric gets a reference to the given int32 and assigns it to the FanFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetFanFailureNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.FanFailureNumeric = &v
}

// GetHedgedReadsTimeout returns the HedgedReadsTimeout field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetHedgedReadsTimeout() string {
	if o == nil || IsNil(o.HedgedReadsTimeout) {
		var ret string
		return ret
	}
	return *o.HedgedReadsTimeout
}

// GetHedgedReadsTimeoutOk returns a tuple with the HedgedReadsTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetHedgedReadsTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.HedgedReadsTimeout) {
		return nil, false
	}
	return o.HedgedReadsTimeout, true
}

// HasHedgedReadsTimeout returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasHedgedReadsTimeout() bool {
	if o != nil && !IsNil(o.HedgedReadsTimeout) {
		return true
	}

	return false
}

// SetHedgedReadsTimeout gets a reference to the given string and assigns it to the HedgedReadsTimeout field.
func (o *AdvancedSettingsTableResourceInner) SetHedgedReadsTimeout(v string) {
	o.HedgedReadsTimeout = &v
}

// GetHedgedReadsTimeoutNumeric returns the HedgedReadsTimeoutNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetHedgedReadsTimeoutNumeric() int64 {
	if o == nil || IsNil(o.HedgedReadsTimeoutNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetHedgedReadsTimeoutNumeric() int32 {
	if o == nil || IsNil(o.HedgedReadsTimeoutNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.HedgedReadsTimeoutNumeric
}

// GetHedgedReadsTimeoutNumericOk returns a tuple with the HedgedReadsTimeoutNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetHedgedReadsTimeoutNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetHedgedReadsTimeoutNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.HedgedReadsTimeoutNumeric) {
		return nil, false
	}
	return o.HedgedReadsTimeoutNumeric, true
}

// HasHedgedReadsTimeoutNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasHedgedReadsTimeoutNumeric() bool {
	if o != nil && !IsNil(o.HedgedReadsTimeoutNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetHedgedReadsTimeoutNumeric gets a reference to the given int64 and assigns it to the HedgedReadsTimeoutNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetHedgedReadsTimeoutNumeric(v int64) {
=======
// SetHedgedReadsTimeoutNumeric gets a reference to the given int32 and assigns it to the HedgedReadsTimeoutNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetHedgedReadsTimeoutNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.HedgedReadsTimeoutNumeric = &v
}

// GetHostCacheControl returns the HostCacheControl field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetHostCacheControl() string {
	if o == nil || IsNil(o.HostCacheControl) {
		var ret string
		return ret
	}
	return *o.HostCacheControl
}

// GetHostCacheControlOk returns a tuple with the HostCacheControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetHostCacheControlOk() (*string, bool) {
	if o == nil || IsNil(o.HostCacheControl) {
		return nil, false
	}
	return o.HostCacheControl, true
}

// HasHostCacheControl returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasHostCacheControl() bool {
	if o != nil && !IsNil(o.HostCacheControl) {
		return true
	}

	return false
}

// SetHostCacheControl gets a reference to the given string and assigns it to the HostCacheControl field.
func (o *AdvancedSettingsTableResourceInner) SetHostCacheControl(v string) {
	o.HostCacheControl = &v
}

// GetHostCacheControlNumeric returns the HostCacheControlNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetHostCacheControlNumeric() int64 {
	if o == nil || IsNil(o.HostCacheControlNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetHostCacheControlNumeric() int32 {
	if o == nil || IsNil(o.HostCacheControlNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.HostCacheControlNumeric
}

// GetHostCacheControlNumericOk returns a tuple with the HostCacheControlNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetHostCacheControlNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetHostCacheControlNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.HostCacheControlNumeric) {
		return nil, false
	}
	return o.HostCacheControlNumeric, true
}

// HasHostCacheControlNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasHostCacheControlNumeric() bool {
	if o != nil && !IsNil(o.HostCacheControlNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetHostCacheControlNumeric gets a reference to the given int64 and assigns it to the HostCacheControlNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetHostCacheControlNumeric(v int64) {
=======
// SetHostCacheControlNumeric gets a reference to the given int32 and assigns it to the HostCacheControlNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetHostCacheControlNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.HostCacheControlNumeric = &v
}

// GetIndependentCache returns the IndependentCache field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetIndependentCache() string {
	if o == nil || IsNil(o.IndependentCache) {
		var ret string
		return ret
	}
	return *o.IndependentCache
}

// GetIndependentCacheOk returns a tuple with the IndependentCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetIndependentCacheOk() (*string, bool) {
	if o == nil || IsNil(o.IndependentCache) {
		return nil, false
	}
	return o.IndependentCache, true
}

// HasIndependentCache returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasIndependentCache() bool {
	if o != nil && !IsNil(o.IndependentCache) {
		return true
	}

	return false
}

// SetIndependentCache gets a reference to the given string and assigns it to the IndependentCache field.
func (o *AdvancedSettingsTableResourceInner) SetIndependentCache(v string) {
	o.IndependentCache = &v
}

// GetIndependentCacheNumeric returns the IndependentCacheNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetIndependentCacheNumeric() int64 {
	if o == nil || IsNil(o.IndependentCacheNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetIndependentCacheNumeric() int32 {
	if o == nil || IsNil(o.IndependentCacheNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.IndependentCacheNumeric
}

// GetIndependentCacheNumericOk returns a tuple with the IndependentCacheNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetIndependentCacheNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetIndependentCacheNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.IndependentCacheNumeric) {
		return nil, false
	}
	return o.IndependentCacheNumeric, true
}

// HasIndependentCacheNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasIndependentCacheNumeric() bool {
	if o != nil && !IsNil(o.IndependentCacheNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetIndependentCacheNumeric gets a reference to the given int64 and assigns it to the IndependentCacheNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetIndependentCacheNumeric(v int64) {
=======
// SetIndependentCacheNumeric gets a reference to the given int32 and assigns it to the IndependentCacheNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetIndependentCacheNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.IndependentCacheNumeric = &v
}

// GetLargePools returns the LargePools field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetLargePools() string {
	if o == nil || IsNil(o.LargePools) {
		var ret string
		return ret
	}
	return *o.LargePools
}

// GetLargePoolsOk returns a tuple with the LargePools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetLargePoolsOk() (*string, bool) {
	if o == nil || IsNil(o.LargePools) {
		return nil, false
	}
	return o.LargePools, true
}

// HasLargePools returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasLargePools() bool {
	if o != nil && !IsNil(o.LargePools) {
		return true
	}

	return false
}

// SetLargePools gets a reference to the given string and assigns it to the LargePools field.
func (o *AdvancedSettingsTableResourceInner) SetLargePools(v string) {
	o.LargePools = &v
}

// GetLargePoolsNumeric returns the LargePoolsNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetLargePoolsNumeric() int64 {
	if o == nil || IsNil(o.LargePoolsNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetLargePoolsNumeric() int32 {
	if o == nil || IsNil(o.LargePoolsNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.LargePoolsNumeric
}

// GetLargePoolsNumericOk returns a tuple with the LargePoolsNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetLargePoolsNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetLargePoolsNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.LargePoolsNumeric) {
		return nil, false
	}
	return o.LargePoolsNumeric, true
}

// HasLargePoolsNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasLargePoolsNumeric() bool {
	if o != nil && !IsNil(o.LargePoolsNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetLargePoolsNumeric gets a reference to the given int64 and assigns it to the LargePoolsNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetLargePoolsNumeric(v int64) {
=======
// SetLargePoolsNumeric gets a reference to the given int32 and assigns it to the LargePoolsNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetLargePoolsNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.LargePoolsNumeric = &v
}

// GetManagedLogs returns the ManagedLogs field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetManagedLogs() string {
	if o == nil || IsNil(o.ManagedLogs) {
		var ret string
		return ret
	}
	return *o.ManagedLogs
}

// GetManagedLogsOk returns a tuple with the ManagedLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetManagedLogsOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedLogs) {
		return nil, false
	}
	return o.ManagedLogs, true
}

// HasManagedLogs returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasManagedLogs() bool {
	if o != nil && !IsNil(o.ManagedLogs) {
		return true
	}

	return false
}

// SetManagedLogs gets a reference to the given string and assigns it to the ManagedLogs field.
func (o *AdvancedSettingsTableResourceInner) SetManagedLogs(v string) {
	o.ManagedLogs = &v
}

// GetManagedLogsNumeric returns the ManagedLogsNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetManagedLogsNumeric() int64 {
	if o == nil || IsNil(o.ManagedLogsNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetManagedLogsNumeric() int32 {
	if o == nil || IsNil(o.ManagedLogsNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.ManagedLogsNumeric
}

// GetManagedLogsNumericOk returns a tuple with the ManagedLogsNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetManagedLogsNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetManagedLogsNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.ManagedLogsNumeric) {
		return nil, false
	}
	return o.ManagedLogsNumeric, true
}

// HasManagedLogsNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasManagedLogsNumeric() bool {
	if o != nil && !IsNil(o.ManagedLogsNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetManagedLogsNumeric gets a reference to the given int64 and assigns it to the ManagedLogsNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetManagedLogsNumeric(v int64) {
=======
// SetManagedLogsNumeric gets a reference to the given int32 and assigns it to the ManagedLogsNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetManagedLogsNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.ManagedLogsNumeric = &v
}

// GetMemoryCardFailure returns the MemoryCardFailure field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetMemoryCardFailure() string {
	if o == nil || IsNil(o.MemoryCardFailure) {
		var ret string
		return ret
	}
	return *o.MemoryCardFailure
}

// GetMemoryCardFailureOk returns a tuple with the MemoryCardFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetMemoryCardFailureOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryCardFailure) {
		return nil, false
	}
	return o.MemoryCardFailure, true
}

// HasMemoryCardFailure returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasMemoryCardFailure() bool {
	if o != nil && !IsNil(o.MemoryCardFailure) {
		return true
	}

	return false
}

// SetMemoryCardFailure gets a reference to the given string and assigns it to the MemoryCardFailure field.
func (o *AdvancedSettingsTableResourceInner) SetMemoryCardFailure(v string) {
	o.MemoryCardFailure = &v
}

// GetMemoryCardFailureNumeric returns the MemoryCardFailureNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetMemoryCardFailureNumeric() int64 {
	if o == nil || IsNil(o.MemoryCardFailureNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetMemoryCardFailureNumeric() int32 {
	if o == nil || IsNil(o.MemoryCardFailureNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.MemoryCardFailureNumeric
}

// GetMemoryCardFailureNumericOk returns a tuple with the MemoryCardFailureNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetMemoryCardFailureNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetMemoryCardFailureNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.MemoryCardFailureNumeric) {
		return nil, false
	}
	return o.MemoryCardFailureNumeric, true
}

// HasMemoryCardFailureNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasMemoryCardFailureNumeric() bool {
	if o != nil && !IsNil(o.MemoryCardFailureNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetMemoryCardFailureNumeric gets a reference to the given int64 and assigns it to the MemoryCardFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetMemoryCardFailureNumeric(v int64) {
=======
// SetMemoryCardFailureNumeric gets a reference to the given int32 and assigns it to the MemoryCardFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetMemoryCardFailureNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.MemoryCardFailureNumeric = &v
}

// GetMissingLunResponse returns the MissingLunResponse field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetMissingLunResponse() string {
	if o == nil || IsNil(o.MissingLunResponse) {
		var ret string
		return ret
	}
	return *o.MissingLunResponse
}

// GetMissingLunResponseOk returns a tuple with the MissingLunResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetMissingLunResponseOk() (*string, bool) {
	if o == nil || IsNil(o.MissingLunResponse) {
		return nil, false
	}
	return o.MissingLunResponse, true
}

// HasMissingLunResponse returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasMissingLunResponse() bool {
	if o != nil && !IsNil(o.MissingLunResponse) {
		return true
	}

	return false
}

// SetMissingLunResponse gets a reference to the given string and assigns it to the MissingLunResponse field.
func (o *AdvancedSettingsTableResourceInner) SetMissingLunResponse(v string) {
	o.MissingLunResponse = &v
}

// GetMissingLunResponseNumeric returns the MissingLunResponseNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetMissingLunResponseNumeric() int64 {
	if o == nil || IsNil(o.MissingLunResponseNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetMissingLunResponseNumeric() int32 {
	if o == nil || IsNil(o.MissingLunResponseNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.MissingLunResponseNumeric
}

// GetMissingLunResponseNumericOk returns a tuple with the MissingLunResponseNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetMissingLunResponseNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetMissingLunResponseNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.MissingLunResponseNumeric) {
		return nil, false
	}
	return o.MissingLunResponseNumeric, true
}

// HasMissingLunResponseNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasMissingLunResponseNumeric() bool {
	if o != nil && !IsNil(o.MissingLunResponseNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetMissingLunResponseNumeric gets a reference to the given int64 and assigns it to the MissingLunResponseNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetMissingLunResponseNumeric(v int64) {
=======
// SetMissingLunResponseNumeric gets a reference to the given int32 and assigns it to the MissingLunResponseNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetMissingLunResponseNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.MissingLunResponseNumeric = &v
}

// GetPartnerFirmwareUpgrade returns the PartnerFirmwareUpgrade field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetPartnerFirmwareUpgrade() string {
	if o == nil || IsNil(o.PartnerFirmwareUpgrade) {
		var ret string
		return ret
	}
	return *o.PartnerFirmwareUpgrade
}

// GetPartnerFirmwareUpgradeOk returns a tuple with the PartnerFirmwareUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetPartnerFirmwareUpgradeOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerFirmwareUpgrade) {
		return nil, false
	}
	return o.PartnerFirmwareUpgrade, true
}

// HasPartnerFirmwareUpgrade returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasPartnerFirmwareUpgrade() bool {
	if o != nil && !IsNil(o.PartnerFirmwareUpgrade) {
		return true
	}

	return false
}

// SetPartnerFirmwareUpgrade gets a reference to the given string and assigns it to the PartnerFirmwareUpgrade field.
func (o *AdvancedSettingsTableResourceInner) SetPartnerFirmwareUpgrade(v string) {
	o.PartnerFirmwareUpgrade = &v
}

// GetPartnerFirmwareUpgradeNumeric returns the PartnerFirmwareUpgradeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetPartnerFirmwareUpgradeNumeric() int64 {
	if o == nil || IsNil(o.PartnerFirmwareUpgradeNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetPartnerFirmwareUpgradeNumeric() int32 {
	if o == nil || IsNil(o.PartnerFirmwareUpgradeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.PartnerFirmwareUpgradeNumeric
}

// GetPartnerFirmwareUpgradeNumericOk returns a tuple with the PartnerFirmwareUpgradeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetPartnerFirmwareUpgradeNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetPartnerFirmwareUpgradeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.PartnerFirmwareUpgradeNumeric) {
		return nil, false
	}
	return o.PartnerFirmwareUpgradeNumeric, true
}

// HasPartnerFirmwareUpgradeNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasPartnerFirmwareUpgradeNumeric() bool {
	if o != nil && !IsNil(o.PartnerFirmwareUpgradeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPartnerFirmwareUpgradeNumeric gets a reference to the given int64 and assigns it to the PartnerFirmwareUpgradeNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetPartnerFirmwareUpgradeNumeric(v int64) {
=======
// SetPartnerFirmwareUpgradeNumeric gets a reference to the given int32 and assigns it to the PartnerFirmwareUpgradeNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetPartnerFirmwareUpgradeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.PartnerFirmwareUpgradeNumeric = &v
}

// GetPartnerNotify returns the PartnerNotify field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetPartnerNotify() string {
	if o == nil || IsNil(o.PartnerNotify) {
		var ret string
		return ret
	}
	return *o.PartnerNotify
}

// GetPartnerNotifyOk returns a tuple with the PartnerNotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetPartnerNotifyOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerNotify) {
		return nil, false
	}
	return o.PartnerNotify, true
}

// HasPartnerNotify returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasPartnerNotify() bool {
	if o != nil && !IsNil(o.PartnerNotify) {
		return true
	}

	return false
}

// SetPartnerNotify gets a reference to the given string and assigns it to the PartnerNotify field.
func (o *AdvancedSettingsTableResourceInner) SetPartnerNotify(v string) {
	o.PartnerNotify = &v
}

// GetPartnerNotifyNumeric returns the PartnerNotifyNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetPartnerNotifyNumeric() int64 {
	if o == nil || IsNil(o.PartnerNotifyNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetPartnerNotifyNumeric() int32 {
	if o == nil || IsNil(o.PartnerNotifyNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.PartnerNotifyNumeric
}

// GetPartnerNotifyNumericOk returns a tuple with the PartnerNotifyNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetPartnerNotifyNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetPartnerNotifyNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.PartnerNotifyNumeric) {
		return nil, false
	}
	return o.PartnerNotifyNumeric, true
}

// HasPartnerNotifyNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasPartnerNotifyNumeric() bool {
	if o != nil && !IsNil(o.PartnerNotifyNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPartnerNotifyNumeric gets a reference to the given int64 and assigns it to the PartnerNotifyNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetPartnerNotifyNumeric(v int64) {
=======
// SetPartnerNotifyNumeric gets a reference to the given int32 and assigns it to the PartnerNotifyNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetPartnerNotifyNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.PartnerNotifyNumeric = &v
}

// GetPcieHotplug returns the PcieHotplug field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetPcieHotplug() string {
	if o == nil || IsNil(o.PcieHotplug) {
		var ret string
		return ret
	}
	return *o.PcieHotplug
}

// GetPcieHotplugOk returns a tuple with the PcieHotplug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetPcieHotplugOk() (*string, bool) {
	if o == nil || IsNil(o.PcieHotplug) {
		return nil, false
	}
	return o.PcieHotplug, true
}

// HasPcieHotplug returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasPcieHotplug() bool {
	if o != nil && !IsNil(o.PcieHotplug) {
		return true
	}

	return false
}

// SetPcieHotplug gets a reference to the given string and assigns it to the PcieHotplug field.
func (o *AdvancedSettingsTableResourceInner) SetPcieHotplug(v string) {
	o.PcieHotplug = &v
}

// GetPcieHotplugNumeric returns the PcieHotplugNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetPcieHotplugNumeric() int64 {
	if o == nil || IsNil(o.PcieHotplugNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetPcieHotplugNumeric() int32 {
	if o == nil || IsNil(o.PcieHotplugNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.PcieHotplugNumeric
}

// GetPcieHotplugNumericOk returns a tuple with the PcieHotplugNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetPcieHotplugNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetPcieHotplugNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.PcieHotplugNumeric) {
		return nil, false
	}
	return o.PcieHotplugNumeric, true
}

// HasPcieHotplugNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasPcieHotplugNumeric() bool {
	if o != nil && !IsNil(o.PcieHotplugNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPcieHotplugNumeric gets a reference to the given int64 and assigns it to the PcieHotplugNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetPcieHotplugNumeric(v int64) {
=======
// SetPcieHotplugNumeric gets a reference to the given int32 and assigns it to the PcieHotplugNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetPcieHotplugNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.PcieHotplugNumeric = &v
}

// GetPowerSupplyFailure returns the PowerSupplyFailure field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetPowerSupplyFailure() string {
	if o == nil || IsNil(o.PowerSupplyFailure) {
		var ret string
		return ret
	}
	return *o.PowerSupplyFailure
}

// GetPowerSupplyFailureOk returns a tuple with the PowerSupplyFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetPowerSupplyFailureOk() (*string, bool) {
	if o == nil || IsNil(o.PowerSupplyFailure) {
		return nil, false
	}
	return o.PowerSupplyFailure, true
}

// HasPowerSupplyFailure returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasPowerSupplyFailure() bool {
	if o != nil && !IsNil(o.PowerSupplyFailure) {
		return true
	}

	return false
}

// SetPowerSupplyFailure gets a reference to the given string and assigns it to the PowerSupplyFailure field.
func (o *AdvancedSettingsTableResourceInner) SetPowerSupplyFailure(v string) {
	o.PowerSupplyFailure = &v
}

// GetPowerSupplyFailureNumeric returns the PowerSupplyFailureNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetPowerSupplyFailureNumeric() int64 {
	if o == nil || IsNil(o.PowerSupplyFailureNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetPowerSupplyFailureNumeric() int32 {
	if o == nil || IsNil(o.PowerSupplyFailureNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.PowerSupplyFailureNumeric
}

// GetPowerSupplyFailureNumericOk returns a tuple with the PowerSupplyFailureNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetPowerSupplyFailureNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetPowerSupplyFailureNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.PowerSupplyFailureNumeric) {
		return nil, false
	}
	return o.PowerSupplyFailureNumeric, true
}

// HasPowerSupplyFailureNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasPowerSupplyFailureNumeric() bool {
	if o != nil && !IsNil(o.PowerSupplyFailureNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetPowerSupplyFailureNumeric gets a reference to the given int64 and assigns it to the PowerSupplyFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetPowerSupplyFailureNumeric(v int64) {
=======
// SetPowerSupplyFailureNumeric gets a reference to the given int32 and assigns it to the PowerSupplyFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetPowerSupplyFailureNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.PowerSupplyFailureNumeric = &v
}

// GetRandomIoPerformanceOptimization returns the RandomIoPerformanceOptimization field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetRandomIoPerformanceOptimization() string {
	if o == nil || IsNil(o.RandomIoPerformanceOptimization) {
		var ret string
		return ret
	}
	return *o.RandomIoPerformanceOptimization
}

// GetRandomIoPerformanceOptimizationOk returns a tuple with the RandomIoPerformanceOptimization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetRandomIoPerformanceOptimizationOk() (*string, bool) {
	if o == nil || IsNil(o.RandomIoPerformanceOptimization) {
		return nil, false
	}
	return o.RandomIoPerformanceOptimization, true
}

// HasRandomIoPerformanceOptimization returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasRandomIoPerformanceOptimization() bool {
	if o != nil && !IsNil(o.RandomIoPerformanceOptimization) {
		return true
	}

	return false
}

// SetRandomIoPerformanceOptimization gets a reference to the given string and assigns it to the RandomIoPerformanceOptimization field.
func (o *AdvancedSettingsTableResourceInner) SetRandomIoPerformanceOptimization(v string) {
	o.RandomIoPerformanceOptimization = &v
}

// GetRandomIoPerformanceOptimizationNumeric returns the RandomIoPerformanceOptimizationNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetRandomIoPerformanceOptimizationNumeric() int64 {
	if o == nil || IsNil(o.RandomIoPerformanceOptimizationNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetRandomIoPerformanceOptimizationNumeric() int32 {
	if o == nil || IsNil(o.RandomIoPerformanceOptimizationNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.RandomIoPerformanceOptimizationNumeric
}

// GetRandomIoPerformanceOptimizationNumericOk returns a tuple with the RandomIoPerformanceOptimizationNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetRandomIoPerformanceOptimizationNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetRandomIoPerformanceOptimizationNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.RandomIoPerformanceOptimizationNumeric) {
		return nil, false
	}
	return o.RandomIoPerformanceOptimizationNumeric, true
}

// HasRandomIoPerformanceOptimizationNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasRandomIoPerformanceOptimizationNumeric() bool {
	if o != nil && !IsNil(o.RandomIoPerformanceOptimizationNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRandomIoPerformanceOptimizationNumeric gets a reference to the given int64 and assigns it to the RandomIoPerformanceOptimizationNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetRandomIoPerformanceOptimizationNumeric(v int64) {
=======
// SetRandomIoPerformanceOptimizationNumeric gets a reference to the given int32 and assigns it to the RandomIoPerformanceOptimizationNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetRandomIoPerformanceOptimizationNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.RandomIoPerformanceOptimizationNumeric = &v
}

// GetRemanufacture returns the Remanufacture field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetRemanufacture() string {
	if o == nil || IsNil(o.Remanufacture) {
		var ret string
		return ret
	}
	return *o.Remanufacture
}

// GetRemanufactureOk returns a tuple with the Remanufacture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetRemanufactureOk() (*string, bool) {
	if o == nil || IsNil(o.Remanufacture) {
		return nil, false
	}
	return o.Remanufacture, true
}

// HasRemanufacture returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasRemanufacture() bool {
	if o != nil && !IsNil(o.Remanufacture) {
		return true
	}

	return false
}

// SetRemanufacture gets a reference to the given string and assigns it to the Remanufacture field.
func (o *AdvancedSettingsTableResourceInner) SetRemanufacture(v string) {
	o.Remanufacture = &v
}

// GetRemanufactureNumeric returns the RemanufactureNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetRemanufactureNumeric() int64 {
	if o == nil || IsNil(o.RemanufactureNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetRemanufactureNumeric() int32 {
	if o == nil || IsNil(o.RemanufactureNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.RemanufactureNumeric
}

// GetRemanufactureNumericOk returns a tuple with the RemanufactureNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetRemanufactureNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetRemanufactureNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.RemanufactureNumeric) {
		return nil, false
	}
	return o.RemanufactureNumeric, true
}

// HasRemanufactureNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasRemanufactureNumeric() bool {
	if o != nil && !IsNil(o.RemanufactureNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRemanufactureNumeric gets a reference to the given int64 and assigns it to the RemanufactureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetRemanufactureNumeric(v int64) {
=======
// SetRemanufactureNumeric gets a reference to the given int32 and assigns it to the RemanufactureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetRemanufactureNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.RemanufactureNumeric = &v
}

// GetRestartOnCapiFail returns the RestartOnCapiFail field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetRestartOnCapiFail() string {
	if o == nil || IsNil(o.RestartOnCapiFail) {
		var ret string
		return ret
	}
	return *o.RestartOnCapiFail
}

// GetRestartOnCapiFailOk returns a tuple with the RestartOnCapiFail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetRestartOnCapiFailOk() (*string, bool) {
	if o == nil || IsNil(o.RestartOnCapiFail) {
		return nil, false
	}
	return o.RestartOnCapiFail, true
}

// HasRestartOnCapiFail returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasRestartOnCapiFail() bool {
	if o != nil && !IsNil(o.RestartOnCapiFail) {
		return true
	}

	return false
}

// SetRestartOnCapiFail gets a reference to the given string and assigns it to the RestartOnCapiFail field.
func (o *AdvancedSettingsTableResourceInner) SetRestartOnCapiFail(v string) {
	o.RestartOnCapiFail = &v
}

// GetRestartOnCapiFailNumeric returns the RestartOnCapiFailNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetRestartOnCapiFailNumeric() int64 {
	if o == nil || IsNil(o.RestartOnCapiFailNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetRestartOnCapiFailNumeric() int32 {
	if o == nil || IsNil(o.RestartOnCapiFailNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.RestartOnCapiFailNumeric
}

// GetRestartOnCapiFailNumericOk returns a tuple with the RestartOnCapiFailNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetRestartOnCapiFailNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetRestartOnCapiFailNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.RestartOnCapiFailNumeric) {
		return nil, false
	}
	return o.RestartOnCapiFailNumeric, true
}

// HasRestartOnCapiFailNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasRestartOnCapiFailNumeric() bool {
	if o != nil && !IsNil(o.RestartOnCapiFailNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetRestartOnCapiFailNumeric gets a reference to the given int64 and assigns it to the RestartOnCapiFailNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetRestartOnCapiFailNumeric(v int64) {
=======
// SetRestartOnCapiFailNumeric gets a reference to the given int32 and assigns it to the RestartOnCapiFailNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetRestartOnCapiFailNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.RestartOnCapiFailNumeric = &v
}

// GetScrubSchedule returns the ScrubSchedule field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetScrubSchedule() string {
	if o == nil || IsNil(o.ScrubSchedule) {
		var ret string
		return ret
	}
	return *o.ScrubSchedule
}

// GetScrubScheduleOk returns a tuple with the ScrubSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetScrubScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.ScrubSchedule) {
		return nil, false
	}
	return o.ScrubSchedule, true
}

// HasScrubSchedule returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasScrubSchedule() bool {
	if o != nil && !IsNil(o.ScrubSchedule) {
		return true
	}

	return false
}

// SetScrubSchedule gets a reference to the given string and assigns it to the ScrubSchedule field.
func (o *AdvancedSettingsTableResourceInner) SetScrubSchedule(v string) {
	o.ScrubSchedule = &v
}

// GetScrubScheduleNumeric returns the ScrubScheduleNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetScrubScheduleNumeric() int64 {
	if o == nil || IsNil(o.ScrubScheduleNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetScrubScheduleNumeric() int32 {
	if o == nil || IsNil(o.ScrubScheduleNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.ScrubScheduleNumeric
}

// GetScrubScheduleNumericOk returns a tuple with the ScrubScheduleNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetScrubScheduleNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetScrubScheduleNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.ScrubScheduleNumeric) {
		return nil, false
	}
	return o.ScrubScheduleNumeric, true
}

// HasScrubScheduleNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasScrubScheduleNumeric() bool {
	if o != nil && !IsNil(o.ScrubScheduleNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetScrubScheduleNumeric gets a reference to the given int64 and assigns it to the ScrubScheduleNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetScrubScheduleNumeric(v int64) {
=======
// SetScrubScheduleNumeric gets a reference to the given int32 and assigns it to the ScrubScheduleNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetScrubScheduleNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.ScrubScheduleNumeric = &v
}

// GetSingleController returns the SingleController field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetSingleController() string {
	if o == nil || IsNil(o.SingleController) {
		var ret string
		return ret
	}
	return *o.SingleController
}

// GetSingleControllerOk returns a tuple with the SingleController field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetSingleControllerOk() (*string, bool) {
	if o == nil || IsNil(o.SingleController) {
		return nil, false
	}
	return o.SingleController, true
}

// HasSingleController returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSingleController() bool {
	if o != nil && !IsNil(o.SingleController) {
		return true
	}

	return false
}

// SetSingleController gets a reference to the given string and assigns it to the SingleController field.
func (o *AdvancedSettingsTableResourceInner) SetSingleController(v string) {
	o.SingleController = &v
}

// GetSingleControllerNumeric returns the SingleControllerNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSingleControllerNumeric() int64 {
	if o == nil || IsNil(o.SingleControllerNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetSingleControllerNumeric() int32 {
	if o == nil || IsNil(o.SingleControllerNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SingleControllerNumeric
}

// GetSingleControllerNumericOk returns a tuple with the SingleControllerNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSingleControllerNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetSingleControllerNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SingleControllerNumeric) {
		return nil, false
	}
	return o.SingleControllerNumeric, true
}

// HasSingleControllerNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSingleControllerNumeric() bool {
	if o != nil && !IsNil(o.SingleControllerNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSingleControllerNumeric gets a reference to the given int64 and assigns it to the SingleControllerNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSingleControllerNumeric(v int64) {
=======
// SetSingleControllerNumeric gets a reference to the given int32 and assigns it to the SingleControllerNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSingleControllerNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SingleControllerNumeric = &v
}

// GetSlotAffinity returns the SlotAffinity field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetSlotAffinity() string {
	if o == nil || IsNil(o.SlotAffinity) {
		var ret string
		return ret
	}
	return *o.SlotAffinity
}

// GetSlotAffinityOk returns a tuple with the SlotAffinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetSlotAffinityOk() (*string, bool) {
	if o == nil || IsNil(o.SlotAffinity) {
		return nil, false
	}
	return o.SlotAffinity, true
}

// HasSlotAffinity returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSlotAffinity() bool {
	if o != nil && !IsNil(o.SlotAffinity) {
		return true
	}

	return false
}

// SetSlotAffinity gets a reference to the given string and assigns it to the SlotAffinity field.
func (o *AdvancedSettingsTableResourceInner) SetSlotAffinity(v string) {
	o.SlotAffinity = &v
}

// GetSlotAffinityNumeric returns the SlotAffinityNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSlotAffinityNumeric() int64 {
	if o == nil || IsNil(o.SlotAffinityNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetSlotAffinityNumeric() int32 {
	if o == nil || IsNil(o.SlotAffinityNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SlotAffinityNumeric
}

// GetSlotAffinityNumericOk returns a tuple with the SlotAffinityNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSlotAffinityNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetSlotAffinityNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SlotAffinityNumeric) {
		return nil, false
	}
	return o.SlotAffinityNumeric, true
}

// HasSlotAffinityNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSlotAffinityNumeric() bool {
	if o != nil && !IsNil(o.SlotAffinityNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSlotAffinityNumeric gets a reference to the given int64 and assigns it to the SlotAffinityNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSlotAffinityNumeric(v int64) {
=======
// SetSlotAffinityNumeric gets a reference to the given int32 and assigns it to the SlotAffinityNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSlotAffinityNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SlotAffinityNumeric = &v
}

// GetSlowDiskDetection returns the SlowDiskDetection field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetSlowDiskDetection() string {
	if o == nil || IsNil(o.SlowDiskDetection) {
		var ret string
		return ret
	}
	return *o.SlowDiskDetection
}

// GetSlowDiskDetectionOk returns a tuple with the SlowDiskDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetSlowDiskDetectionOk() (*string, bool) {
	if o == nil || IsNil(o.SlowDiskDetection) {
		return nil, false
	}
	return o.SlowDiskDetection, true
}

// HasSlowDiskDetection returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSlowDiskDetection() bool {
	if o != nil && !IsNil(o.SlowDiskDetection) {
		return true
	}

	return false
}

// SetSlowDiskDetection gets a reference to the given string and assigns it to the SlowDiskDetection field.
func (o *AdvancedSettingsTableResourceInner) SetSlowDiskDetection(v string) {
	o.SlowDiskDetection = &v
}

// GetSlowDiskDetectionNumeric returns the SlowDiskDetectionNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSlowDiskDetectionNumeric() int64 {
	if o == nil || IsNil(o.SlowDiskDetectionNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetSlowDiskDetectionNumeric() int32 {
	if o == nil || IsNil(o.SlowDiskDetectionNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SlowDiskDetectionNumeric
}

// GetSlowDiskDetectionNumericOk returns a tuple with the SlowDiskDetectionNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSlowDiskDetectionNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetSlowDiskDetectionNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SlowDiskDetectionNumeric) {
		return nil, false
	}
	return o.SlowDiskDetectionNumeric, true
}

// HasSlowDiskDetectionNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSlowDiskDetectionNumeric() bool {
	if o != nil && !IsNil(o.SlowDiskDetectionNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSlowDiskDetectionNumeric gets a reference to the given int64 and assigns it to the SlowDiskDetectionNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSlowDiskDetectionNumeric(v int64) {
=======
// SetSlowDiskDetectionNumeric gets a reference to the given int32 and assigns it to the SlowDiskDetectionNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSlowDiskDetectionNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SlowDiskDetectionNumeric = &v
}

// GetSmart returns the Smart field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetSmart() string {
	if o == nil || IsNil(o.Smart) {
		var ret string
		return ret
	}
	return *o.Smart
}

// GetSmartOk returns a tuple with the Smart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetSmartOk() (*string, bool) {
	if o == nil || IsNil(o.Smart) {
		return nil, false
	}
	return o.Smart, true
}

// HasSmart returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSmart() bool {
	if o != nil && !IsNil(o.Smart) {
		return true
	}

	return false
}

// SetSmart gets a reference to the given string and assigns it to the Smart field.
func (o *AdvancedSettingsTableResourceInner) SetSmart(v string) {
	o.Smart = &v
}

// GetSmartNumeric returns the SmartNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSmartNumeric() int64 {
	if o == nil || IsNil(o.SmartNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetSmartNumeric() int32 {
	if o == nil || IsNil(o.SmartNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SmartNumeric
}

// GetSmartNumericOk returns a tuple with the SmartNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSmartNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetSmartNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SmartNumeric) {
		return nil, false
	}
	return o.SmartNumeric, true
}

// HasSmartNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSmartNumeric() bool {
	if o != nil && !IsNil(o.SmartNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSmartNumeric gets a reference to the given int64 and assigns it to the SmartNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSmartNumeric(v int64) {
=======
// SetSmartNumeric gets a reference to the given int32 and assigns it to the SmartNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSmartNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SmartNumeric = &v
}

// GetSsdConcurrentAccess returns the SsdConcurrentAccess field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetSsdConcurrentAccess() string {
	if o == nil || IsNil(o.SsdConcurrentAccess) {
		var ret string
		return ret
	}
	return *o.SsdConcurrentAccess
}

// GetSsdConcurrentAccessOk returns a tuple with the SsdConcurrentAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetSsdConcurrentAccessOk() (*string, bool) {
	if o == nil || IsNil(o.SsdConcurrentAccess) {
		return nil, false
	}
	return o.SsdConcurrentAccess, true
}

// HasSsdConcurrentAccess returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSsdConcurrentAccess() bool {
	if o != nil && !IsNil(o.SsdConcurrentAccess) {
		return true
	}

	return false
}

// SetSsdConcurrentAccess gets a reference to the given string and assigns it to the SsdConcurrentAccess field.
func (o *AdvancedSettingsTableResourceInner) SetSsdConcurrentAccess(v string) {
	o.SsdConcurrentAccess = &v
}

// GetSsdConcurrentAccessNumeric returns the SsdConcurrentAccessNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSsdConcurrentAccessNumeric() int64 {
	if o == nil || IsNil(o.SsdConcurrentAccessNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetSsdConcurrentAccessNumeric() int32 {
	if o == nil || IsNil(o.SsdConcurrentAccessNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SsdConcurrentAccessNumeric
}

// GetSsdConcurrentAccessNumericOk returns a tuple with the SsdConcurrentAccessNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSsdConcurrentAccessNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetSsdConcurrentAccessNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SsdConcurrentAccessNumeric) {
		return nil, false
	}
	return o.SsdConcurrentAccessNumeric, true
}

// HasSsdConcurrentAccessNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSsdConcurrentAccessNumeric() bool {
	if o != nil && !IsNil(o.SsdConcurrentAccessNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSsdConcurrentAccessNumeric gets a reference to the given int64 and assigns it to the SsdConcurrentAccessNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSsdConcurrentAccessNumeric(v int64) {
=======
// SetSsdConcurrentAccessNumeric gets a reference to the given int32 and assigns it to the SsdConcurrentAccessNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSsdConcurrentAccessNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SsdConcurrentAccessNumeric = &v
}

// GetSuperCapFailure returns the SuperCapFailure field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetSuperCapFailure() string {
	if o == nil || IsNil(o.SuperCapFailure) {
		var ret string
		return ret
	}
	return *o.SuperCapFailure
}

// GetSuperCapFailureOk returns a tuple with the SuperCapFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetSuperCapFailureOk() (*string, bool) {
	if o == nil || IsNil(o.SuperCapFailure) {
		return nil, false
	}
	return o.SuperCapFailure, true
}

// HasSuperCapFailure returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSuperCapFailure() bool {
	if o != nil && !IsNil(o.SuperCapFailure) {
		return true
	}

	return false
}

// SetSuperCapFailure gets a reference to the given string and assigns it to the SuperCapFailure field.
func (o *AdvancedSettingsTableResourceInner) SetSuperCapFailure(v string) {
	o.SuperCapFailure = &v
}

// GetSuperCapFailureNumeric returns the SuperCapFailureNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSuperCapFailureNumeric() int64 {
	if o == nil || IsNil(o.SuperCapFailureNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetSuperCapFailureNumeric() int32 {
	if o == nil || IsNil(o.SuperCapFailureNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SuperCapFailureNumeric
}

// GetSuperCapFailureNumericOk returns a tuple with the SuperCapFailureNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSuperCapFailureNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetSuperCapFailureNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SuperCapFailureNumeric) {
		return nil, false
	}
	return o.SuperCapFailureNumeric, true
}

// HasSuperCapFailureNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSuperCapFailureNumeric() bool {
	if o != nil && !IsNil(o.SuperCapFailureNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSuperCapFailureNumeric gets a reference to the given int64 and assigns it to the SuperCapFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSuperCapFailureNumeric(v int64) {
=======
// SetSuperCapFailureNumeric gets a reference to the given int32 and assigns it to the SuperCapFailureNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSuperCapFailureNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SuperCapFailureNumeric = &v
}

// GetSyncCacheMode returns the SyncCacheMode field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetSyncCacheMode() string {
	if o == nil || IsNil(o.SyncCacheMode) {
		var ret string
		return ret
	}
	return *o.SyncCacheMode
}

// GetSyncCacheModeOk returns a tuple with the SyncCacheMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetSyncCacheModeOk() (*string, bool) {
	if o == nil || IsNil(o.SyncCacheMode) {
		return nil, false
	}
	return o.SyncCacheMode, true
}

// HasSyncCacheMode returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSyncCacheMode() bool {
	if o != nil && !IsNil(o.SyncCacheMode) {
		return true
	}

	return false
}

// SetSyncCacheMode gets a reference to the given string and assigns it to the SyncCacheMode field.
func (o *AdvancedSettingsTableResourceInner) SetSyncCacheMode(v string) {
	o.SyncCacheMode = &v
}

// GetSyncCacheModeNumeric returns the SyncCacheModeNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSyncCacheModeNumeric() int64 {
	if o == nil || IsNil(o.SyncCacheModeNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetSyncCacheModeNumeric() int32 {
	if o == nil || IsNil(o.SyncCacheModeNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.SyncCacheModeNumeric
}

// GetSyncCacheModeNumericOk returns a tuple with the SyncCacheModeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetSyncCacheModeNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetSyncCacheModeNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.SyncCacheModeNumeric) {
		return nil, false
	}
	return o.SyncCacheModeNumeric, true
}

// HasSyncCacheModeNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasSyncCacheModeNumeric() bool {
	if o != nil && !IsNil(o.SyncCacheModeNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetSyncCacheModeNumeric gets a reference to the given int64 and assigns it to the SyncCacheModeNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSyncCacheModeNumeric(v int64) {
=======
// SetSyncCacheModeNumeric gets a reference to the given int32 and assigns it to the SyncCacheModeNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetSyncCacheModeNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.SyncCacheModeNumeric = &v
}

// GetTemperatureExceeded returns the TemperatureExceeded field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetTemperatureExceeded() string {
	if o == nil || IsNil(o.TemperatureExceeded) {
		var ret string
		return ret
	}
	return *o.TemperatureExceeded
}

// GetTemperatureExceededOk returns a tuple with the TemperatureExceeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetTemperatureExceededOk() (*string, bool) {
	if o == nil || IsNil(o.TemperatureExceeded) {
		return nil, false
	}
	return o.TemperatureExceeded, true
}

// HasTemperatureExceeded returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasTemperatureExceeded() bool {
	if o != nil && !IsNil(o.TemperatureExceeded) {
		return true
	}

	return false
}

// SetTemperatureExceeded gets a reference to the given string and assigns it to the TemperatureExceeded field.
func (o *AdvancedSettingsTableResourceInner) SetTemperatureExceeded(v string) {
	o.TemperatureExceeded = &v
}

// GetTemperatureExceededNumeric returns the TemperatureExceededNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetTemperatureExceededNumeric() int64 {
	if o == nil || IsNil(o.TemperatureExceededNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetTemperatureExceededNumeric() int32 {
	if o == nil || IsNil(o.TemperatureExceededNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.TemperatureExceededNumeric
}

// GetTemperatureExceededNumericOk returns a tuple with the TemperatureExceededNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetTemperatureExceededNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetTemperatureExceededNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.TemperatureExceededNumeric) {
		return nil, false
	}
	return o.TemperatureExceededNumeric, true
}

// HasTemperatureExceededNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasTemperatureExceededNumeric() bool {
	if o != nil && !IsNil(o.TemperatureExceededNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetTemperatureExceededNumeric gets a reference to the given int64 and assigns it to the TemperatureExceededNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetTemperatureExceededNumeric(v int64) {
=======
// SetTemperatureExceededNumeric gets a reference to the given int32 and assigns it to the TemperatureExceededNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetTemperatureExceededNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.TemperatureExceededNumeric = &v
}

// GetUtilityPriority returns the UtilityPriority field value if set, zero value otherwise.
func (o *AdvancedSettingsTableResourceInner) GetUtilityPriority() string {
	if o == nil || IsNil(o.UtilityPriority) {
		var ret string
		return ret
	}
	return *o.UtilityPriority
}

// GetUtilityPriorityOk returns a tuple with the UtilityPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedSettingsTableResourceInner) GetUtilityPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.UtilityPriority) {
		return nil, false
	}
	return o.UtilityPriority, true
}

// HasUtilityPriority returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasUtilityPriority() bool {
	if o != nil && !IsNil(o.UtilityPriority) {
		return true
	}

	return false
}

// SetUtilityPriority gets a reference to the given string and assigns it to the UtilityPriority field.
func (o *AdvancedSettingsTableResourceInner) SetUtilityPriority(v string) {
	o.UtilityPriority = &v
}

// GetUtilityPriorityNumeric returns the UtilityPriorityNumeric field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetUtilityPriorityNumeric() int64 {
	if o == nil || IsNil(o.UtilityPriorityNumeric) {
		var ret int64
=======
func (o *AdvancedSettingsTableResourceInner) GetUtilityPriorityNumeric() int32 {
	if o == nil || IsNil(o.UtilityPriorityNumeric) {
		var ret int32
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
		return ret
	}
	return *o.UtilityPriorityNumeric
}

// GetUtilityPriorityNumericOk returns a tuple with the UtilityPriorityNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *AdvancedSettingsTableResourceInner) GetUtilityPriorityNumericOk() (*int64, bool) {
=======
func (o *AdvancedSettingsTableResourceInner) GetUtilityPriorityNumericOk() (*int32, bool) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	if o == nil || IsNil(o.UtilityPriorityNumeric) {
		return nil, false
	}
	return o.UtilityPriorityNumeric, true
}

// HasUtilityPriorityNumeric returns a boolean if a field has been set.
func (o *AdvancedSettingsTableResourceInner) HasUtilityPriorityNumeric() bool {
	if o != nil && !IsNil(o.UtilityPriorityNumeric) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetUtilityPriorityNumeric gets a reference to the given int64 and assigns it to the UtilityPriorityNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetUtilityPriorityNumeric(v int64) {
=======
// SetUtilityPriorityNumeric gets a reference to the given int32 and assigns it to the UtilityPriorityNumeric field.
func (o *AdvancedSettingsTableResourceInner) SetUtilityPriorityNumeric(v int32) {
>>>>>>> aac8175 (feat(apiv2): openapi generator and validator and spec)
	o.UtilityPriorityNumeric = &v
}

func (o AdvancedSettingsTableResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvancedSettingsTableResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.AutoMap) {
		toSerialize["auto-map"] = o.AutoMap
	}
	if !IsNil(o.AutoMapNumeric) {
		toSerialize["auto-map-numeric"] = o.AutoMapNumeric
	}
	if !IsNil(o.AutoStallRecovery) {
		toSerialize["auto-stall-recovery"] = o.AutoStallRecovery
	}
	if !IsNil(o.AutoStallRecoveryNumeric) {
		toSerialize["auto-stall-recovery-numeric"] = o.AutoStallRecoveryNumeric
	}
	if !IsNil(o.AutoUnmap) {
		toSerialize["auto-unmap"] = o.AutoUnmap
	}
	if !IsNil(o.AutoUnmapNumeric) {
		toSerialize["auto-unmap-numeric"] = o.AutoUnmapNumeric
	}
	if !IsNil(o.AutoWriteBack) {
		toSerialize["auto-write-back"] = o.AutoWriteBack
	}
	if !IsNil(o.AutoWriteBackNumeric) {
		toSerialize["auto-write-back-numeric"] = o.AutoWriteBackNumeric
	}
	if !IsNil(o.BackgroundScrub) {
		toSerialize["background-scrub"] = o.BackgroundScrub
	}
	if !IsNil(o.BackgroundScrubInterval) {
		toSerialize["background-scrub-interval"] = o.BackgroundScrubInterval
	}
	if !IsNil(o.BackgroundScrubNumeric) {
		toSerialize["background-scrub-numeric"] = o.BackgroundScrubNumeric
	}
	if !IsNil(o.CacheFlushTimeout) {
		toSerialize["cache-flush-timeout"] = o.CacheFlushTimeout
	}
	if !IsNil(o.CacheFlushTimeoutNumeric) {
		toSerialize["cache-flush-timeout-numeric"] = o.CacheFlushTimeoutNumeric
	}
	if !IsNil(o.ControllerFailure) {
		toSerialize["controller-failure"] = o.ControllerFailure
	}
	if !IsNil(o.ControllerFailureNumeric) {
		toSerialize["controller-failure-numeric"] = o.ControllerFailureNumeric
	}
	if !IsNil(o.DefaultMapping) {
		toSerialize["default-mapping"] = o.DefaultMapping
	}
	if !IsNil(o.DefaultMappingNumeric) {
		toSerialize["default-mapping-numeric"] = o.DefaultMappingNumeric
	}
	if !IsNil(o.DeleteOverride) {
		toSerialize["delete-override"] = o.DeleteOverride
	}
	if !IsNil(o.DeleteOverrideNumeric) {
		toSerialize["delete-override-numeric"] = o.DeleteOverrideNumeric
	}
	if !IsNil(o.DiskDsdDelay) {
		toSerialize["disk-dsd-delay"] = o.DiskDsdDelay
	}
	if !IsNil(o.DiskDsdEnable) {
		toSerialize["disk-dsd-enable"] = o.DiskDsdEnable
	}
	if !IsNil(o.DiskDsdEnableNumeric) {
		toSerialize["disk-dsd-enable-numeric"] = o.DiskDsdEnableNumeric
	}
	if !IsNil(o.DiskFirmwareUpdate) {
		toSerialize["disk-firmware-update"] = o.DiskFirmwareUpdate
	}
	if !IsNil(o.DiskFirmwareUpdateNumeric) {
		toSerialize["disk-firmware-update-numeric"] = o.DiskFirmwareUpdateNumeric
	}
	if !IsNil(o.DynamicSpares) {
		toSerialize["dynamic-spares"] = o.DynamicSpares
	}
	if !IsNil(o.EmpPollRate) {
		toSerialize["emp-poll-rate"] = o.EmpPollRate
	}
	if !IsNil(o.FanFailure) {
		toSerialize["fan-failure"] = o.FanFailure
	}
	if !IsNil(o.FanFailureNumeric) {
		toSerialize["fan-failure-numeric"] = o.FanFailureNumeric
	}
	if !IsNil(o.HedgedReadsTimeout) {
		toSerialize["hedged-reads-timeout"] = o.HedgedReadsTimeout
	}
	if !IsNil(o.HedgedReadsTimeoutNumeric) {
		toSerialize["hedged-reads-timeout-numeric"] = o.HedgedReadsTimeoutNumeric
	}
	if !IsNil(o.HostCacheControl) {
		toSerialize["host-cache-control"] = o.HostCacheControl
	}
	if !IsNil(o.HostCacheControlNumeric) {
		toSerialize["host-cache-control-numeric"] = o.HostCacheControlNumeric
	}
	if !IsNil(o.IndependentCache) {
		toSerialize["independent-cache"] = o.IndependentCache
	}
	if !IsNil(o.IndependentCacheNumeric) {
		toSerialize["independent-cache-numeric"] = o.IndependentCacheNumeric
	}
	if !IsNil(o.LargePools) {
		toSerialize["large-pools"] = o.LargePools
	}
	if !IsNil(o.LargePoolsNumeric) {
		toSerialize["large-pools-numeric"] = o.LargePoolsNumeric
	}
	if !IsNil(o.ManagedLogs) {
		toSerialize["managed-logs"] = o.ManagedLogs
	}
	if !IsNil(o.ManagedLogsNumeric) {
		toSerialize["managed-logs-numeric"] = o.ManagedLogsNumeric
	}
	if !IsNil(o.MemoryCardFailure) {
		toSerialize["memory-card-failure"] = o.MemoryCardFailure
	}
	if !IsNil(o.MemoryCardFailureNumeric) {
		toSerialize["memory-card-failure-numeric"] = o.MemoryCardFailureNumeric
	}
	if !IsNil(o.MissingLunResponse) {
		toSerialize["missing-lun-response"] = o.MissingLunResponse
	}
	if !IsNil(o.MissingLunResponseNumeric) {
		toSerialize["missing-lun-response-numeric"] = o.MissingLunResponseNumeric
	}
	if !IsNil(o.PartnerFirmwareUpgrade) {
		toSerialize["partner-firmware-upgrade"] = o.PartnerFirmwareUpgrade
	}
	if !IsNil(o.PartnerFirmwareUpgradeNumeric) {
		toSerialize["partner-firmware-upgrade-numeric"] = o.PartnerFirmwareUpgradeNumeric
	}
	if !IsNil(o.PartnerNotify) {
		toSerialize["partner-notify"] = o.PartnerNotify
	}
	if !IsNil(o.PartnerNotifyNumeric) {
		toSerialize["partner-notify-numeric"] = o.PartnerNotifyNumeric
	}
	if !IsNil(o.PcieHotplug) {
		toSerialize["pcie-hotplug"] = o.PcieHotplug
	}
	if !IsNil(o.PcieHotplugNumeric) {
		toSerialize["pcie-hotplug-numeric"] = o.PcieHotplugNumeric
	}
	if !IsNil(o.PowerSupplyFailure) {
		toSerialize["power-supply-failure"] = o.PowerSupplyFailure
	}
	if !IsNil(o.PowerSupplyFailureNumeric) {
		toSerialize["power-supply-failure-numeric"] = o.PowerSupplyFailureNumeric
	}
	if !IsNil(o.RandomIoPerformanceOptimization) {
		toSerialize["random-io-performance-optimization"] = o.RandomIoPerformanceOptimization
	}
	if !IsNil(o.RandomIoPerformanceOptimizationNumeric) {
		toSerialize["random-io-performance-optimization-numeric"] = o.RandomIoPerformanceOptimizationNumeric
	}
	if !IsNil(o.Remanufacture) {
		toSerialize["remanufacture"] = o.Remanufacture
	}
	if !IsNil(o.RemanufactureNumeric) {
		toSerialize["remanufacture-numeric"] = o.RemanufactureNumeric
	}
	if !IsNil(o.RestartOnCapiFail) {
		toSerialize["restart-on-capi-fail"] = o.RestartOnCapiFail
	}
	if !IsNil(o.RestartOnCapiFailNumeric) {
		toSerialize["restart-on-capi-fail-numeric"] = o.RestartOnCapiFailNumeric
	}
	if !IsNil(o.ScrubSchedule) {
		toSerialize["scrub-schedule"] = o.ScrubSchedule
	}
	if !IsNil(o.ScrubScheduleNumeric) {
		toSerialize["scrub-schedule-numeric"] = o.ScrubScheduleNumeric
	}
	if !IsNil(o.SingleController) {
		toSerialize["single-controller"] = o.SingleController
	}
	if !IsNil(o.SingleControllerNumeric) {
		toSerialize["single-controller-numeric"] = o.SingleControllerNumeric
	}
	if !IsNil(o.SlotAffinity) {
		toSerialize["slot-affinity"] = o.SlotAffinity
	}
	if !IsNil(o.SlotAffinityNumeric) {
		toSerialize["slot-affinity-numeric"] = o.SlotAffinityNumeric
	}
	if !IsNil(o.SlowDiskDetection) {
		toSerialize["slow-disk-detection"] = o.SlowDiskDetection
	}
	if !IsNil(o.SlowDiskDetectionNumeric) {
		toSerialize["slow-disk-detection-numeric"] = o.SlowDiskDetectionNumeric
	}
	if !IsNil(o.Smart) {
		toSerialize["smart"] = o.Smart
	}
	if !IsNil(o.SmartNumeric) {
		toSerialize["smart-numeric"] = o.SmartNumeric
	}
	if !IsNil(o.SsdConcurrentAccess) {
		toSerialize["ssd-concurrent-access"] = o.SsdConcurrentAccess
	}
	if !IsNil(o.SsdConcurrentAccessNumeric) {
		toSerialize["ssd-concurrent-access-numeric"] = o.SsdConcurrentAccessNumeric
	}
	if !IsNil(o.SuperCapFailure) {
		toSerialize["super-cap-failure"] = o.SuperCapFailure
	}
	if !IsNil(o.SuperCapFailureNumeric) {
		toSerialize["super-cap-failure-numeric"] = o.SuperCapFailureNumeric
	}
	if !IsNil(o.SyncCacheMode) {
		toSerialize["sync-cache-mode"] = o.SyncCacheMode
	}
	if !IsNil(o.SyncCacheModeNumeric) {
		toSerialize["sync-cache-mode-numeric"] = o.SyncCacheModeNumeric
	}
	if !IsNil(o.TemperatureExceeded) {
		toSerialize["temperature-exceeded"] = o.TemperatureExceeded
	}
	if !IsNil(o.TemperatureExceededNumeric) {
		toSerialize["temperature-exceeded-numeric"] = o.TemperatureExceededNumeric
	}
	if !IsNil(o.UtilityPriority) {
		toSerialize["utility-priority"] = o.UtilityPriority
	}
	if !IsNil(o.UtilityPriorityNumeric) {
		toSerialize["utility-priority-numeric"] = o.UtilityPriorityNumeric
	}
	return toSerialize, nil
}

type NullableAdvancedSettingsTableResourceInner struct {
	value *AdvancedSettingsTableResourceInner
	isSet bool
}

func (v NullableAdvancedSettingsTableResourceInner) Get() *AdvancedSettingsTableResourceInner {
	return v.value
}

func (v *NullableAdvancedSettingsTableResourceInner) Set(val *AdvancedSettingsTableResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedSettingsTableResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedSettingsTableResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedSettingsTableResourceInner(val *AdvancedSettingsTableResourceInner) *NullableAdvancedSettingsTableResourceInner {
	return &NullableAdvancedSettingsTableResourceInner{value: val, isSet: true}
}

func (v NullableAdvancedSettingsTableResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedSettingsTableResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
