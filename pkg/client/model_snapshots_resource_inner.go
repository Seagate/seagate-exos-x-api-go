/*
Seagate Management Controller (MC) OpenAPI

This API allows users to interact through the MC API to provision and manage storage.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SnapshotsResourceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotsResourceInner{}

// SnapshotsResourceInner struct for SnapshotsResourceInner
type SnapshotsResourceInner struct {
	ObjectName *string `json:"object-name,omitempty"`
	Meta       *string `json:"meta,omitempty"`
	// The root of the snapshot tree serial number
	BaseSerialNumber *string `json:"base-serial-number,omitempty"`
	// The root of the snapshot tree
	BaseVolume *string `json:"base-volume,omitempty"`
	// The resource URL of the root of the snapshot tree
	BaseVolumesUrl          *string `json:"base-volumes-url,omitempty"`
	CreationDateTime        *string `json:"creation-date-time,omitempty"`
	CreationDateTimeNumeric *int32  `json:"creation-date-time-numeric,omitempty"`
	DurableId               *string `json:"durable-id,omitempty"`
	// Source volume for snapshots
	MasterVolumeName *string `json:"master-volume-name,omitempty"`
	Name             *string `json:"name,omitempty"`
	NumChildren      *int32  `json:"num-children,omitempty"`
	NumSnapsTree     *int32  `json:"num-snaps-tree,omitempty"`
	// Attribute priority
	PriorityValue *string `json:"priority-value,omitempty"`
	// Retention priority of the snapshot or children
	RetentionPriority *string `json:"retention-priority,omitempty"`
	// Retention priority of the snapshot or children( In numeric form )
	RetentionPriorityNumeric *int32  `json:"retention-priority-numeric,omitempty"`
	SerialNumber             *string `json:"serial-number,omitempty"`
	Shareddata               *string `json:"shareddata,omitempty"`
	ShareddataNumeric        *int32  `json:"shareddata-numeric,omitempty"`
	// Amount of snapshot data associated with this volume
	SnapData *string `json:"snap-data,omitempty"`
	// Amount of snapshot data associated with this volume( In numeric form )
	SnapDataNumeric *int32 `json:"snap-data-numeric,omitempty"`
	// User-defined name of the snap pool
	SnapPoolName *string `json:"snap-pool-name,omitempty"`
	// Associated snapshot type
	SnapshotType *string `json:"snapshot-type,omitempty"`
	// Associated snapshot type( In numeric form )
	SnapshotTypeNumeric *int32  `json:"snapshot-type-numeric,omitempty"`
	Status              *string `json:"status,omitempty"`
	StatusNumeric       *int32  `json:"status-numeric,omitempty"`
	// Probable cause for the current status
	StatusReason *string `json:"status-reason,omitempty"`
	// Probable cause for the current status( In numeric form )
	StatusReasonNumeric *int32 `json:"status-reason-numeric,omitempty"`
	// User-defined name for the pool
	StoragePoolName *string `json:"storage-pool-name,omitempty"`
	StoragePoolsUrl *string `json:"storage-pools-url,omitempty"`
	// Storage type
	StorageType *string `json:"storage-type,omitempty"`
	// Storage type( In numeric form )
	StorageTypeNumeric *int32 `json:"storage-type-numeric,omitempty"`
	// The total size formatted using the session settings for base, precision, and units
	TotalSize *string `json:"total-size,omitempty"`
	// The total size formatted using the session settings for base, precision, and units( In numeric form )
	TotalSizeNumeric *int32 `json:"total-size-numeric,omitempty"`
	// Amount of preserved and write data that is unique to the snapshot
	Uniquedata *string `json:"uniquedata,omitempty"`
	// Amount of preserved and write data that is unique to the snapshot( In numeric form )
	UniquedataNumeric *int32 `json:"uniquedata-numeric,omitempty"`
	// The resource URL
	Url *string `json:"url,omitempty"`
	// User-assigned priority
	UserPriorityValue *string `json:"user_priority-value,omitempty"`
	// The name of the pool that contains the volume
	VirtualDiskName *string `json:"virtual-disk-name,omitempty"`
	// Serial number of the associated volume
	VolumeParent *string `json:"volume-parent,omitempty"`
}

// NewSnapshotsResourceInner instantiates a new SnapshotsResourceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotsResourceInner() *SnapshotsResourceInner {
	this := SnapshotsResourceInner{}
	return &this
}

// NewSnapshotsResourceInnerWithDefaults instantiates a new SnapshotsResourceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotsResourceInnerWithDefaults() *SnapshotsResourceInner {
	this := SnapshotsResourceInner{}
	return &this
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *SnapshotsResourceInner) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetMeta() string {
	if o == nil || IsNil(o.Meta) {
		var ret string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetMetaOk() (*string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given string and assigns it to the Meta field.
func (o *SnapshotsResourceInner) SetMeta(v string) {
	o.Meta = &v
}

// GetBaseSerialNumber returns the BaseSerialNumber field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetBaseSerialNumber() string {
	if o == nil || IsNil(o.BaseSerialNumber) {
		var ret string
		return ret
	}
	return *o.BaseSerialNumber
}

// GetBaseSerialNumberOk returns a tuple with the BaseSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetBaseSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BaseSerialNumber) {
		return nil, false
	}
	return o.BaseSerialNumber, true
}

// HasBaseSerialNumber returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasBaseSerialNumber() bool {
	if o != nil && !IsNil(o.BaseSerialNumber) {
		return true
	}

	return false
}

// SetBaseSerialNumber gets a reference to the given string and assigns it to the BaseSerialNumber field.
func (o *SnapshotsResourceInner) SetBaseSerialNumber(v string) {
	o.BaseSerialNumber = &v
}

// GetBaseVolume returns the BaseVolume field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetBaseVolume() string {
	if o == nil || IsNil(o.BaseVolume) {
		var ret string
		return ret
	}
	return *o.BaseVolume
}

// GetBaseVolumeOk returns a tuple with the BaseVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetBaseVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseVolume) {
		return nil, false
	}
	return o.BaseVolume, true
}

// HasBaseVolume returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasBaseVolume() bool {
	if o != nil && !IsNil(o.BaseVolume) {
		return true
	}

	return false
}

// SetBaseVolume gets a reference to the given string and assigns it to the BaseVolume field.
func (o *SnapshotsResourceInner) SetBaseVolume(v string) {
	o.BaseVolume = &v
}

// GetBaseVolumesUrl returns the BaseVolumesUrl field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetBaseVolumesUrl() string {
	if o == nil || IsNil(o.BaseVolumesUrl) {
		var ret string
		return ret
	}
	return *o.BaseVolumesUrl
}

// GetBaseVolumesUrlOk returns a tuple with the BaseVolumesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetBaseVolumesUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BaseVolumesUrl) {
		return nil, false
	}
	return o.BaseVolumesUrl, true
}

// HasBaseVolumesUrl returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasBaseVolumesUrl() bool {
	if o != nil && !IsNil(o.BaseVolumesUrl) {
		return true
	}

	return false
}

// SetBaseVolumesUrl gets a reference to the given string and assigns it to the BaseVolumesUrl field.
func (o *SnapshotsResourceInner) SetBaseVolumesUrl(v string) {
	o.BaseVolumesUrl = &v
}

// GetCreationDateTime returns the CreationDateTime field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetCreationDateTime() string {
	if o == nil || IsNil(o.CreationDateTime) {
		var ret string
		return ret
	}
	return *o.CreationDateTime
}

// GetCreationDateTimeOk returns a tuple with the CreationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetCreationDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreationDateTime) {
		return nil, false
	}
	return o.CreationDateTime, true
}

// HasCreationDateTime returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasCreationDateTime() bool {
	if o != nil && !IsNil(o.CreationDateTime) {
		return true
	}

	return false
}

// SetCreationDateTime gets a reference to the given string and assigns it to the CreationDateTime field.
func (o *SnapshotsResourceInner) SetCreationDateTime(v string) {
	o.CreationDateTime = &v
}

// GetCreationDateTimeNumeric returns the CreationDateTimeNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetCreationDateTimeNumeric() int32 {
	if o == nil || IsNil(o.CreationDateTimeNumeric) {
		var ret int32
		return ret
	}
	return *o.CreationDateTimeNumeric
}

// GetCreationDateTimeNumericOk returns a tuple with the CreationDateTimeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetCreationDateTimeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.CreationDateTimeNumeric) {
		return nil, false
	}
	return o.CreationDateTimeNumeric, true
}

// HasCreationDateTimeNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasCreationDateTimeNumeric() bool {
	if o != nil && !IsNil(o.CreationDateTimeNumeric) {
		return true
	}

	return false
}

// SetCreationDateTimeNumeric gets a reference to the given int32 and assigns it to the CreationDateTimeNumeric field.
func (o *SnapshotsResourceInner) SetCreationDateTimeNumeric(v int32) {
	o.CreationDateTimeNumeric = &v
}

// GetDurableId returns the DurableId field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetDurableId() string {
	if o == nil || IsNil(o.DurableId) {
		var ret string
		return ret
	}
	return *o.DurableId
}

// GetDurableIdOk returns a tuple with the DurableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetDurableIdOk() (*string, bool) {
	if o == nil || IsNil(o.DurableId) {
		return nil, false
	}
	return o.DurableId, true
}

// HasDurableId returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasDurableId() bool {
	if o != nil && !IsNil(o.DurableId) {
		return true
	}

	return false
}

// SetDurableId gets a reference to the given string and assigns it to the DurableId field.
func (o *SnapshotsResourceInner) SetDurableId(v string) {
	o.DurableId = &v
}

// GetMasterVolumeName returns the MasterVolumeName field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetMasterVolumeName() string {
	if o == nil || IsNil(o.MasterVolumeName) {
		var ret string
		return ret
	}
	return *o.MasterVolumeName
}

// GetMasterVolumeNameOk returns a tuple with the MasterVolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetMasterVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.MasterVolumeName) {
		return nil, false
	}
	return o.MasterVolumeName, true
}

// HasMasterVolumeName returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasMasterVolumeName() bool {
	if o != nil && !IsNil(o.MasterVolumeName) {
		return true
	}

	return false
}

// SetMasterVolumeName gets a reference to the given string and assigns it to the MasterVolumeName field.
func (o *SnapshotsResourceInner) SetMasterVolumeName(v string) {
	o.MasterVolumeName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SnapshotsResourceInner) SetName(v string) {
	o.Name = &v
}

// GetNumChildren returns the NumChildren field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetNumChildren() int32 {
	if o == nil || IsNil(o.NumChildren) {
		var ret int32
		return ret
	}
	return *o.NumChildren
}

// GetNumChildrenOk returns a tuple with the NumChildren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetNumChildrenOk() (*int32, bool) {
	if o == nil || IsNil(o.NumChildren) {
		return nil, false
	}
	return o.NumChildren, true
}

// HasNumChildren returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasNumChildren() bool {
	if o != nil && !IsNil(o.NumChildren) {
		return true
	}

	return false
}

// SetNumChildren gets a reference to the given int32 and assigns it to the NumChildren field.
func (o *SnapshotsResourceInner) SetNumChildren(v int32) {
	o.NumChildren = &v
}

// GetNumSnapsTree returns the NumSnapsTree field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetNumSnapsTree() int32 {
	if o == nil || IsNil(o.NumSnapsTree) {
		var ret int32
		return ret
	}
	return *o.NumSnapsTree
}

// GetNumSnapsTreeOk returns a tuple with the NumSnapsTree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetNumSnapsTreeOk() (*int32, bool) {
	if o == nil || IsNil(o.NumSnapsTree) {
		return nil, false
	}
	return o.NumSnapsTree, true
}

// HasNumSnapsTree returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasNumSnapsTree() bool {
	if o != nil && !IsNil(o.NumSnapsTree) {
		return true
	}

	return false
}

// SetNumSnapsTree gets a reference to the given int32 and assigns it to the NumSnapsTree field.
func (o *SnapshotsResourceInner) SetNumSnapsTree(v int32) {
	o.NumSnapsTree = &v
}

// GetPriorityValue returns the PriorityValue field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetPriorityValue() string {
	if o == nil || IsNil(o.PriorityValue) {
		var ret string
		return ret
	}
	return *o.PriorityValue
}

// GetPriorityValueOk returns a tuple with the PriorityValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetPriorityValueOk() (*string, bool) {
	if o == nil || IsNil(o.PriorityValue) {
		return nil, false
	}
	return o.PriorityValue, true
}

// HasPriorityValue returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasPriorityValue() bool {
	if o != nil && !IsNil(o.PriorityValue) {
		return true
	}

	return false
}

// SetPriorityValue gets a reference to the given string and assigns it to the PriorityValue field.
func (o *SnapshotsResourceInner) SetPriorityValue(v string) {
	o.PriorityValue = &v
}

// GetRetentionPriority returns the RetentionPriority field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetRetentionPriority() string {
	if o == nil || IsNil(o.RetentionPriority) {
		var ret string
		return ret
	}
	return *o.RetentionPriority
}

// GetRetentionPriorityOk returns a tuple with the RetentionPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetRetentionPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionPriority) {
		return nil, false
	}
	return o.RetentionPriority, true
}

// HasRetentionPriority returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasRetentionPriority() bool {
	if o != nil && !IsNil(o.RetentionPriority) {
		return true
	}

	return false
}

// SetRetentionPriority gets a reference to the given string and assigns it to the RetentionPriority field.
func (o *SnapshotsResourceInner) SetRetentionPriority(v string) {
	o.RetentionPriority = &v
}

// GetRetentionPriorityNumeric returns the RetentionPriorityNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetRetentionPriorityNumeric() int32 {
	if o == nil || IsNil(o.RetentionPriorityNumeric) {
		var ret int32
		return ret
	}
	return *o.RetentionPriorityNumeric
}

// GetRetentionPriorityNumericOk returns a tuple with the RetentionPriorityNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetRetentionPriorityNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.RetentionPriorityNumeric) {
		return nil, false
	}
	return o.RetentionPriorityNumeric, true
}

// HasRetentionPriorityNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasRetentionPriorityNumeric() bool {
	if o != nil && !IsNil(o.RetentionPriorityNumeric) {
		return true
	}

	return false
}

// SetRetentionPriorityNumeric gets a reference to the given int32 and assigns it to the RetentionPriorityNumeric field.
func (o *SnapshotsResourceInner) SetRetentionPriorityNumeric(v int32) {
	o.RetentionPriorityNumeric = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *SnapshotsResourceInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetShareddata returns the Shareddata field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetShareddata() string {
	if o == nil || IsNil(o.Shareddata) {
		var ret string
		return ret
	}
	return *o.Shareddata
}

// GetShareddataOk returns a tuple with the Shareddata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetShareddataOk() (*string, bool) {
	if o == nil || IsNil(o.Shareddata) {
		return nil, false
	}
	return o.Shareddata, true
}

// HasShareddata returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasShareddata() bool {
	if o != nil && !IsNil(o.Shareddata) {
		return true
	}

	return false
}

// SetShareddata gets a reference to the given string and assigns it to the Shareddata field.
func (o *SnapshotsResourceInner) SetShareddata(v string) {
	o.Shareddata = &v
}

// GetShareddataNumeric returns the ShareddataNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetShareddataNumeric() int32 {
	if o == nil || IsNil(o.ShareddataNumeric) {
		var ret int32
		return ret
	}
	return *o.ShareddataNumeric
}

// GetShareddataNumericOk returns a tuple with the ShareddataNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetShareddataNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.ShareddataNumeric) {
		return nil, false
	}
	return o.ShareddataNumeric, true
}

// HasShareddataNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasShareddataNumeric() bool {
	if o != nil && !IsNil(o.ShareddataNumeric) {
		return true
	}

	return false
}

// SetShareddataNumeric gets a reference to the given int32 and assigns it to the ShareddataNumeric field.
func (o *SnapshotsResourceInner) SetShareddataNumeric(v int32) {
	o.ShareddataNumeric = &v
}

// GetSnapData returns the SnapData field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetSnapData() string {
	if o == nil || IsNil(o.SnapData) {
		var ret string
		return ret
	}
	return *o.SnapData
}

// GetSnapDataOk returns a tuple with the SnapData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetSnapDataOk() (*string, bool) {
	if o == nil || IsNil(o.SnapData) {
		return nil, false
	}
	return o.SnapData, true
}

// HasSnapData returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasSnapData() bool {
	if o != nil && !IsNil(o.SnapData) {
		return true
	}

	return false
}

// SetSnapData gets a reference to the given string and assigns it to the SnapData field.
func (o *SnapshotsResourceInner) SetSnapData(v string) {
	o.SnapData = &v
}

// GetSnapDataNumeric returns the SnapDataNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetSnapDataNumeric() int32 {
	if o == nil || IsNil(o.SnapDataNumeric) {
		var ret int32
		return ret
	}
	return *o.SnapDataNumeric
}

// GetSnapDataNumericOk returns a tuple with the SnapDataNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetSnapDataNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.SnapDataNumeric) {
		return nil, false
	}
	return o.SnapDataNumeric, true
}

// HasSnapDataNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasSnapDataNumeric() bool {
	if o != nil && !IsNil(o.SnapDataNumeric) {
		return true
	}

	return false
}

// SetSnapDataNumeric gets a reference to the given int32 and assigns it to the SnapDataNumeric field.
func (o *SnapshotsResourceInner) SetSnapDataNumeric(v int32) {
	o.SnapDataNumeric = &v
}

// GetSnapPoolName returns the SnapPoolName field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetSnapPoolName() string {
	if o == nil || IsNil(o.SnapPoolName) {
		var ret string
		return ret
	}
	return *o.SnapPoolName
}

// GetSnapPoolNameOk returns a tuple with the SnapPoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetSnapPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.SnapPoolName) {
		return nil, false
	}
	return o.SnapPoolName, true
}

// HasSnapPoolName returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasSnapPoolName() bool {
	if o != nil && !IsNil(o.SnapPoolName) {
		return true
	}

	return false
}

// SetSnapPoolName gets a reference to the given string and assigns it to the SnapPoolName field.
func (o *SnapshotsResourceInner) SetSnapPoolName(v string) {
	o.SnapPoolName = &v
}

// GetSnapshotType returns the SnapshotType field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetSnapshotType() string {
	if o == nil || IsNil(o.SnapshotType) {
		var ret string
		return ret
	}
	return *o.SnapshotType
}

// GetSnapshotTypeOk returns a tuple with the SnapshotType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetSnapshotTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotType) {
		return nil, false
	}
	return o.SnapshotType, true
}

// HasSnapshotType returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasSnapshotType() bool {
	if o != nil && !IsNil(o.SnapshotType) {
		return true
	}

	return false
}

// SetSnapshotType gets a reference to the given string and assigns it to the SnapshotType field.
func (o *SnapshotsResourceInner) SetSnapshotType(v string) {
	o.SnapshotType = &v
}

// GetSnapshotTypeNumeric returns the SnapshotTypeNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetSnapshotTypeNumeric() int32 {
	if o == nil || IsNil(o.SnapshotTypeNumeric) {
		var ret int32
		return ret
	}
	return *o.SnapshotTypeNumeric
}

// GetSnapshotTypeNumericOk returns a tuple with the SnapshotTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetSnapshotTypeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.SnapshotTypeNumeric) {
		return nil, false
	}
	return o.SnapshotTypeNumeric, true
}

// HasSnapshotTypeNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasSnapshotTypeNumeric() bool {
	if o != nil && !IsNil(o.SnapshotTypeNumeric) {
		return true
	}

	return false
}

// SetSnapshotTypeNumeric gets a reference to the given int32 and assigns it to the SnapshotTypeNumeric field.
func (o *SnapshotsResourceInner) SetSnapshotTypeNumeric(v int32) {
	o.SnapshotTypeNumeric = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SnapshotsResourceInner) SetStatus(v string) {
	o.Status = &v
}

// GetStatusNumeric returns the StatusNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetStatusNumeric() int32 {
	if o == nil || IsNil(o.StatusNumeric) {
		var ret int32
		return ret
	}
	return *o.StatusNumeric
}

// GetStatusNumericOk returns a tuple with the StatusNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetStatusNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusNumeric) {
		return nil, false
	}
	return o.StatusNumeric, true
}

// HasStatusNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasStatusNumeric() bool {
	if o != nil && !IsNil(o.StatusNumeric) {
		return true
	}

	return false
}

// SetStatusNumeric gets a reference to the given int32 and assigns it to the StatusNumeric field.
func (o *SnapshotsResourceInner) SetStatusNumeric(v int32) {
	o.StatusNumeric = &v
}

// GetStatusReason returns the StatusReason field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetStatusReason() string {
	if o == nil || IsNil(o.StatusReason) {
		var ret string
		return ret
	}
	return *o.StatusReason
}

// GetStatusReasonOk returns a tuple with the StatusReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetStatusReasonOk() (*string, bool) {
	if o == nil || IsNil(o.StatusReason) {
		return nil, false
	}
	return o.StatusReason, true
}

// HasStatusReason returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasStatusReason() bool {
	if o != nil && !IsNil(o.StatusReason) {
		return true
	}

	return false
}

// SetStatusReason gets a reference to the given string and assigns it to the StatusReason field.
func (o *SnapshotsResourceInner) SetStatusReason(v string) {
	o.StatusReason = &v
}

// GetStatusReasonNumeric returns the StatusReasonNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetStatusReasonNumeric() int32 {
	if o == nil || IsNil(o.StatusReasonNumeric) {
		var ret int32
		return ret
	}
	return *o.StatusReasonNumeric
}

// GetStatusReasonNumericOk returns a tuple with the StatusReasonNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetStatusReasonNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusReasonNumeric) {
		return nil, false
	}
	return o.StatusReasonNumeric, true
}

// HasStatusReasonNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasStatusReasonNumeric() bool {
	if o != nil && !IsNil(o.StatusReasonNumeric) {
		return true
	}

	return false
}

// SetStatusReasonNumeric gets a reference to the given int32 and assigns it to the StatusReasonNumeric field.
func (o *SnapshotsResourceInner) SetStatusReasonNumeric(v int32) {
	o.StatusReasonNumeric = &v
}

// GetStoragePoolName returns the StoragePoolName field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetStoragePoolName() string {
	if o == nil || IsNil(o.StoragePoolName) {
		var ret string
		return ret
	}
	return *o.StoragePoolName
}

// GetStoragePoolNameOk returns a tuple with the StoragePoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetStoragePoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoragePoolName) {
		return nil, false
	}
	return o.StoragePoolName, true
}

// HasStoragePoolName returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasStoragePoolName() bool {
	if o != nil && !IsNil(o.StoragePoolName) {
		return true
	}

	return false
}

// SetStoragePoolName gets a reference to the given string and assigns it to the StoragePoolName field.
func (o *SnapshotsResourceInner) SetStoragePoolName(v string) {
	o.StoragePoolName = &v
}

// GetStoragePoolsUrl returns the StoragePoolsUrl field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetStoragePoolsUrl() string {
	if o == nil || IsNil(o.StoragePoolsUrl) {
		var ret string
		return ret
	}
	return *o.StoragePoolsUrl
}

// GetStoragePoolsUrlOk returns a tuple with the StoragePoolsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetStoragePoolsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StoragePoolsUrl) {
		return nil, false
	}
	return o.StoragePoolsUrl, true
}

// HasStoragePoolsUrl returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasStoragePoolsUrl() bool {
	if o != nil && !IsNil(o.StoragePoolsUrl) {
		return true
	}

	return false
}

// SetStoragePoolsUrl gets a reference to the given string and assigns it to the StoragePoolsUrl field.
func (o *SnapshotsResourceInner) SetStoragePoolsUrl(v string) {
	o.StoragePoolsUrl = &v
}

// GetStorageType returns the StorageType field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetStorageType() string {
	if o == nil || IsNil(o.StorageType) {
		var ret string
		return ret
	}
	return *o.StorageType
}

// GetStorageTypeOk returns a tuple with the StorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StorageType) {
		return nil, false
	}
	return o.StorageType, true
}

// HasStorageType returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasStorageType() bool {
	if o != nil && !IsNil(o.StorageType) {
		return true
	}

	return false
}

// SetStorageType gets a reference to the given string and assigns it to the StorageType field.
func (o *SnapshotsResourceInner) SetStorageType(v string) {
	o.StorageType = &v
}

// GetStorageTypeNumeric returns the StorageTypeNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetStorageTypeNumeric() int32 {
	if o == nil || IsNil(o.StorageTypeNumeric) {
		var ret int32
		return ret
	}
	return *o.StorageTypeNumeric
}

// GetStorageTypeNumericOk returns a tuple with the StorageTypeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetStorageTypeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.StorageTypeNumeric) {
		return nil, false
	}
	return o.StorageTypeNumeric, true
}

// HasStorageTypeNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasStorageTypeNumeric() bool {
	if o != nil && !IsNil(o.StorageTypeNumeric) {
		return true
	}

	return false
}

// SetStorageTypeNumeric gets a reference to the given int32 and assigns it to the StorageTypeNumeric field.
func (o *SnapshotsResourceInner) SetStorageTypeNumeric(v int32) {
	o.StorageTypeNumeric = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetTotalSize() string {
	if o == nil || IsNil(o.TotalSize) {
		var ret string
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetTotalSizeOk() (*string, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given string and assigns it to the TotalSize field.
func (o *SnapshotsResourceInner) SetTotalSize(v string) {
	o.TotalSize = &v
}

// GetTotalSizeNumeric returns the TotalSizeNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetTotalSizeNumeric() int32 {
	if o == nil || IsNil(o.TotalSizeNumeric) {
		var ret int32
		return ret
	}
	return *o.TotalSizeNumeric
}

// GetTotalSizeNumericOk returns a tuple with the TotalSizeNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetTotalSizeNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSizeNumeric) {
		return nil, false
	}
	return o.TotalSizeNumeric, true
}

// HasTotalSizeNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasTotalSizeNumeric() bool {
	if o != nil && !IsNil(o.TotalSizeNumeric) {
		return true
	}

	return false
}

// SetTotalSizeNumeric gets a reference to the given int32 and assigns it to the TotalSizeNumeric field.
func (o *SnapshotsResourceInner) SetTotalSizeNumeric(v int32) {
	o.TotalSizeNumeric = &v
}

// GetUniquedata returns the Uniquedata field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetUniquedata() string {
	if o == nil || IsNil(o.Uniquedata) {
		var ret string
		return ret
	}
	return *o.Uniquedata
}

// GetUniquedataOk returns a tuple with the Uniquedata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetUniquedataOk() (*string, bool) {
	if o == nil || IsNil(o.Uniquedata) {
		return nil, false
	}
	return o.Uniquedata, true
}

// HasUniquedata returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasUniquedata() bool {
	if o != nil && !IsNil(o.Uniquedata) {
		return true
	}

	return false
}

// SetUniquedata gets a reference to the given string and assigns it to the Uniquedata field.
func (o *SnapshotsResourceInner) SetUniquedata(v string) {
	o.Uniquedata = &v
}

// GetUniquedataNumeric returns the UniquedataNumeric field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetUniquedataNumeric() int32 {
	if o == nil || IsNil(o.UniquedataNumeric) {
		var ret int32
		return ret
	}
	return *o.UniquedataNumeric
}

// GetUniquedataNumericOk returns a tuple with the UniquedataNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetUniquedataNumericOk() (*int32, bool) {
	if o == nil || IsNil(o.UniquedataNumeric) {
		return nil, false
	}
	return o.UniquedataNumeric, true
}

// HasUniquedataNumeric returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasUniquedataNumeric() bool {
	if o != nil && !IsNil(o.UniquedataNumeric) {
		return true
	}

	return false
}

// SetUniquedataNumeric gets a reference to the given int32 and assigns it to the UniquedataNumeric field.
func (o *SnapshotsResourceInner) SetUniquedataNumeric(v int32) {
	o.UniquedataNumeric = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SnapshotsResourceInner) SetUrl(v string) {
	o.Url = &v
}

// GetUserPriorityValue returns the UserPriorityValue field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetUserPriorityValue() string {
	if o == nil || IsNil(o.UserPriorityValue) {
		var ret string
		return ret
	}
	return *o.UserPriorityValue
}

// GetUserPriorityValueOk returns a tuple with the UserPriorityValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetUserPriorityValueOk() (*string, bool) {
	if o == nil || IsNil(o.UserPriorityValue) {
		return nil, false
	}
	return o.UserPriorityValue, true
}

// HasUserPriorityValue returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasUserPriorityValue() bool {
	if o != nil && !IsNil(o.UserPriorityValue) {
		return true
	}

	return false
}

// SetUserPriorityValue gets a reference to the given string and assigns it to the UserPriorityValue field.
func (o *SnapshotsResourceInner) SetUserPriorityValue(v string) {
	o.UserPriorityValue = &v
}

// GetVirtualDiskName returns the VirtualDiskName field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetVirtualDiskName() string {
	if o == nil || IsNil(o.VirtualDiskName) {
		var ret string
		return ret
	}
	return *o.VirtualDiskName
}

// GetVirtualDiskNameOk returns a tuple with the VirtualDiskName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetVirtualDiskNameOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualDiskName) {
		return nil, false
	}
	return o.VirtualDiskName, true
}

// HasVirtualDiskName returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasVirtualDiskName() bool {
	if o != nil && !IsNil(o.VirtualDiskName) {
		return true
	}

	return false
}

// SetVirtualDiskName gets a reference to the given string and assigns it to the VirtualDiskName field.
func (o *SnapshotsResourceInner) SetVirtualDiskName(v string) {
	o.VirtualDiskName = &v
}

// GetVolumeParent returns the VolumeParent field value if set, zero value otherwise.
func (o *SnapshotsResourceInner) GetVolumeParent() string {
	if o == nil || IsNil(o.VolumeParent) {
		var ret string
		return ret
	}
	return *o.VolumeParent
}

// GetVolumeParentOk returns a tuple with the VolumeParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsResourceInner) GetVolumeParentOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeParent) {
		return nil, false
	}
	return o.VolumeParent, true
}

// HasVolumeParent returns a boolean if a field has been set.
func (o *SnapshotsResourceInner) HasVolumeParent() bool {
	if o != nil && !IsNil(o.VolumeParent) {
		return true
	}

	return false
}

// SetVolumeParent gets a reference to the given string and assigns it to the VolumeParent field.
func (o *SnapshotsResourceInner) SetVolumeParent(v string) {
	o.VolumeParent = &v
}

func (o SnapshotsResourceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotsResourceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectName) {
		toSerialize["object-name"] = o.ObjectName
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.BaseSerialNumber) {
		toSerialize["base-serial-number"] = o.BaseSerialNumber
	}
	if !IsNil(o.BaseVolume) {
		toSerialize["base-volume"] = o.BaseVolume
	}
	if !IsNil(o.BaseVolumesUrl) {
		toSerialize["base-volumes-url"] = o.BaseVolumesUrl
	}
	if !IsNil(o.CreationDateTime) {
		toSerialize["creation-date-time"] = o.CreationDateTime
	}
	if !IsNil(o.CreationDateTimeNumeric) {
		toSerialize["creation-date-time-numeric"] = o.CreationDateTimeNumeric
	}
	if !IsNil(o.DurableId) {
		toSerialize["durable-id"] = o.DurableId
	}
	if !IsNil(o.MasterVolumeName) {
		toSerialize["master-volume-name"] = o.MasterVolumeName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumChildren) {
		toSerialize["num-children"] = o.NumChildren
	}
	if !IsNil(o.NumSnapsTree) {
		toSerialize["num-snaps-tree"] = o.NumSnapsTree
	}
	if !IsNil(o.PriorityValue) {
		toSerialize["priority-value"] = o.PriorityValue
	}
	if !IsNil(o.RetentionPriority) {
		toSerialize["retention-priority"] = o.RetentionPriority
	}
	if !IsNil(o.RetentionPriorityNumeric) {
		toSerialize["retention-priority-numeric"] = o.RetentionPriorityNumeric
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial-number"] = o.SerialNumber
	}
	if !IsNil(o.Shareddata) {
		toSerialize["shareddata"] = o.Shareddata
	}
	if !IsNil(o.ShareddataNumeric) {
		toSerialize["shareddata-numeric"] = o.ShareddataNumeric
	}
	if !IsNil(o.SnapData) {
		toSerialize["snap-data"] = o.SnapData
	}
	if !IsNil(o.SnapDataNumeric) {
		toSerialize["snap-data-numeric"] = o.SnapDataNumeric
	}
	if !IsNil(o.SnapPoolName) {
		toSerialize["snap-pool-name"] = o.SnapPoolName
	}
	if !IsNil(o.SnapshotType) {
		toSerialize["snapshot-type"] = o.SnapshotType
	}
	if !IsNil(o.SnapshotTypeNumeric) {
		toSerialize["snapshot-type-numeric"] = o.SnapshotTypeNumeric
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusNumeric) {
		toSerialize["status-numeric"] = o.StatusNumeric
	}
	if !IsNil(o.StatusReason) {
		toSerialize["status-reason"] = o.StatusReason
	}
	if !IsNil(o.StatusReasonNumeric) {
		toSerialize["status-reason-numeric"] = o.StatusReasonNumeric
	}
	if !IsNil(o.StoragePoolName) {
		toSerialize["storage-pool-name"] = o.StoragePoolName
	}
	if !IsNil(o.StoragePoolsUrl) {
		toSerialize["storage-pools-url"] = o.StoragePoolsUrl
	}
	if !IsNil(o.StorageType) {
		toSerialize["storage-type"] = o.StorageType
	}
	if !IsNil(o.StorageTypeNumeric) {
		toSerialize["storage-type-numeric"] = o.StorageTypeNumeric
	}
	if !IsNil(o.TotalSize) {
		toSerialize["total-size"] = o.TotalSize
	}
	if !IsNil(o.TotalSizeNumeric) {
		toSerialize["total-size-numeric"] = o.TotalSizeNumeric
	}
	if !IsNil(o.Uniquedata) {
		toSerialize["uniquedata"] = o.Uniquedata
	}
	if !IsNil(o.UniquedataNumeric) {
		toSerialize["uniquedata-numeric"] = o.UniquedataNumeric
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.UserPriorityValue) {
		toSerialize["user_priority-value"] = o.UserPriorityValue
	}
	if !IsNil(o.VirtualDiskName) {
		toSerialize["virtual-disk-name"] = o.VirtualDiskName
	}
	if !IsNil(o.VolumeParent) {
		toSerialize["volume-parent"] = o.VolumeParent
	}
	return toSerialize, nil
}

type NullableSnapshotsResourceInner struct {
	value *SnapshotsResourceInner
	isSet bool
}

func (v NullableSnapshotsResourceInner) Get() *SnapshotsResourceInner {
	return v.value
}

func (v *NullableSnapshotsResourceInner) Set(val *SnapshotsResourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotsResourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotsResourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotsResourceInner(val *SnapshotsResourceInner) *NullableSnapshotsResourceInner {
	return &NullableSnapshotsResourceInner{value: val, isSet: true}
}

func (v NullableSnapshotsResourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotsResourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
